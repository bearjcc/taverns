%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Set16CartoonCeramicPosudaKhar.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For: 
%%CreationDate: 11/17/2019
%%BoundingBox: 0 0 4008 4008
%%HiResBoundingBox: 0 0 4008 4008
%%CropBox: 0 0 4008 4008
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.1 x446 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=0 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c014 79.156821, 2014/08/29-03:07:50        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Earthenware and ceramic vector cartoon icon set.Vector isolated illustration mug,jug,pot and other earthenware.Icon set of ceramic dish,bowl and vase.</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:headline>
            <rdf:Alt>
               <rdf:li>Earthenware and ceramic Vector cartoon icon set.Vector isolated illustration mug,jug,pot and other earthenware.Icons set of ceramic dish,bowl and vase.</rdf:li>
            </rdf:Alt>
         </dc:headline>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Earthenware and ceramic Vector cartoon icon set.Vector isolated illustration mug,jug,pot and other earthenware.Icons set of ceramic dish,bowl and vase.</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>mug</rdf:li>
               <rdf:li>jug</rdf:li>
               <rdf:li>pot</rdf:li>
               <rdf:li>dish</rdf:li>
               <rdf:li>bowl</rdf:li>
               <rdf:li>vase</rdf:li>
               <rdf:li>pitcher</rdf:li>
               <rdf:li>teapot</rdf:li>
               <rdf:li>ceramic</rdf:li>
               <rdf:li>cup</rdf:li>
               <rdf:li>clay</rdf:li>
               <rdf:li>spoon</rdf:li>
               <rdf:li>decorative</rdf:li>
               <rdf:li>clean</rdf:li>
               <rdf:li>mortar</rdf:li>
               <rdf:li>brown</rdf:li>
               <rdf:li>container</rdf:li>
               <rdf:li>porcelain</rdf:li>
               <rdf:li>earthenware</rdf:li>
               <rdf:li>buffet</rdf:li>
               <rdf:li>kitchenware</rdf:li>
               <rdf:li>craft</rdf:li>
               <rdf:li>drink</rdf:li>
               <rdf:li>traditional</rdf:li>
               <rdf:li>amphora</rdf:li>
               <rdf:li>dining</rdf:li>
               <rdf:li>nature</rdf:li>
               <rdf:li>ewer</rdf:li>
               <rdf:li>kitchen</rdf:li>
               <rdf:li>tableware</rdf:li>
               <rdf:li>pottery</rdf:li>
               <rdf:li>ware</rdf:li>
               <rdf:li>food</rdf:li>
               <rdf:li>crockery</rdf:li>
               <rdf:li>empty</rdf:li>
               <rdf:li>retro</rdf:li>
               <rdf:li>clayware</rdf:li>
               <rdf:li>blank</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>icon</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>color</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2019-05-18T09:11:40+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-11-17T12:43:47.531+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-05-18T09:11:39+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FWHefvOmr+W3tRZ2Ec8d1VVuJmcJ6g39OiKxB4ior1+jNfrdXLDVDY9XP0WkjluzuOj&#xA;Cpfzr81RStG+kWiuuzBnlU/cwBzAPbBHPh/Hxc4dlQ7yyLyn+b1lqTXCa2lvpQgTn6pmqrEkAIFZ&#xA;VJJ3O1cy9N2nHJfFQHe4uo7NMK4bkzXSNf0XWInl0u9iu0jNJPSYEqT05DqK02rmwx5oT+k24GTF&#xA;KH1CkfljW7FXYq7FWIeY/wA0/KugTyQXrTO8TFJGij5KHXqpqQfwzBy9oY4SMdyQ52Ls/JOPFsAW&#xA;KSf85GeVg5CWsjL2YlhX6PTOUHtP+j9rkDss/wA77F9v/wA5FeUXek8E0S/zLyf8OC4R2mOsSg9l&#xA;npIM08tef/L3mKRY7B5FlcFo0mTiWC/aIoWG3vmTg1sMh4RduLn0U8Ys1TI8y3EdirsVdirsVQl1&#xA;q+k2bcLu9gt2/lllRD9zEZCWSMeZAZxxylyBKIguLe4j9SCVJY605owYVHuMkCDyYkEc1+FDsVdi&#xA;rsVYB+b+pa/pWkQahp13LBbGT0LhISEdWcEpIHofChB9s1naUskYiUTQ6uz7NjCUjGQsvG7jzH5s&#xA;uhSbX9T4nsSr/wAUzRHXE85H5l3Q0sByA+QQhvNZH/S61H/gF/6qZH80O/7WfghYdU1VD/x3dQVv&#xA;9RR/zMyQznp96PBHcmFt55802zKRr2ozKpBMbSKin7gx+7J/m8nQn5lgdLjPOI+Qe3eQfPOjappt&#xA;paTaxHday61lhYNGwY7+mvNU9QoNiRWvXN9o9VGUQDK5uh1mmlGRIjUGZ5nuC7FXYqxf8zVhPkjU&#xA;mkUEoImiJ/Zk9VAjD3BOYXaNeBK3M0BPjRp4VrkN6l2hmlV3eJGDcKfCBxH7X+TnGZxUt+56iFVs&#xA;yr8qvI/ljzIdSn1q3a7ltHjSOL1JI4gHUkMVjZSx+Gm5I9s3vY+nx5IEyHJ1XaeonjIETVp3ZaDY&#xA;eWfzm06w0KM21hfae8t3bBndRtNuOZOxaJNq9czhiGPUxEdgRu4pynJppGW5B2+x6xm1dU7FXYqw&#xA;fzX+Z8OhapcafHpzXb2io07mZIfthSoQEMXNJB+Phmt1PaIxSMauvOnY6fs85IiV1flbyDzD9e1L&#xA;U7zXZ5Pqk15Jz9CNiOIoFVa7VIUZzmp1EpyM6q3f4MQhERHRKD9crX6y5Pi2/wCvMX8ye5t4VCea&#xA;/hHIXD0OxKkqfwy3Hl4lpNfJPnGfyzrw1RofritE8MsbNRirkGquQ1CGUdvbM7S6jwZ8VW42q0/i&#xA;w4bp7p5O8/xeY7yezazNpcQxLOvGZJ0ZDx35oB/OPx7jN9pdb4sjGqI87dBqtH4URK7B8qZZmc4T&#xA;sVWTzw28Ek87iOGJS8kjGiqqipJPsMBIAspAJNB4N5+/N7VNRupbDRna2sV2qpMbsP5pWWjCvaNS&#xA;NvteGc9qu0JTNRNR+0vQaXs+MBchcvsDzpp75yWa5YEmp9MKg/AV+85rr8nZUjNK17XdKuluLG5c&#xA;SgjdCI5D7ckADfJwRk8eUxNg8JYZMQkKIsPavIXnzVtf1+CxvruOF7e2ZpbZYwpnc+J+JQ6rRiqn&#xA;3Ap03Gi1k8uQCRAAHzdNrNJDFjJAuz8npebh1DsVdirDvzds3ufIGqGNPUkthHcKuw2ikUuST2Cc&#xA;icwu0IcWEuZoJ8OYPn24vbr6lb3HwmP7NTA8UZ/56kt4dWXOSliiQHpxIrfr4419CXlStONR/wAH&#xA;Xh+OY3heY/H2suJL7u7uJUEg+yDtwQsg/wBnUFv9iKZlYYAGvx8mJK7TkuL+8trS3haSe6lSGJVI&#xA;4lpGCijfM5kRx3IAdWMp1Ek9Hsn5q6B5f07UPLUOh2MVlrc92Fh+qIsRaNSoBcIBVhIycWO/XN1r&#xA;8cY8AiKlbpdBklITMjca6vX827qHYq7FWHfmxLw8nSRb/wCkXNtHtTtMr/8AGma/tQ1gPnTn9mi8&#xA;w+Lx/wA1EfXrcfy2sP4iv8c5HV/UPcHosPI+8su/Iq446xrdtX+9hglp/wAYyy/8zM3nYMtpB1fb&#xA;EdolPfJbjzF+Yev+Z1PqWFkq6Zpr1qpC7uyEbUqGb5Pmx058TNKfSOw/H45uHqB4eGMOp3P4/HJ6&#xA;Nmxdc7FXYq8H/M/W7C7/ADAaBgippsSxMyJykkcgOxPEFmC1C79KHOY7Vnx5aHKL0fZsOHFZ/iYj&#xA;c6pFfTN6b1RNlToQPEqdxXNJmJJ35OyipZSyULi4gFYWJZyN0RSzAeJABp9OWQieaCUsR0evE7g0&#xA;I6EH3B3GZ9MXrf5B6xEmo6hpLxp6k8YuIZuI5/uyFZC1KkUYEDtv45uOyMg4jH4uo7Wx+kSe1ZvX&#xA;ROxV4d5//NmbVNMutNtLP6vbDk0kxkLNIsbfAvHivEM/Gu58M53U9p+LeOIoXu9Bpez/AAyJk2Xl&#xA;xi9JmQnk4J9Rz1Z/2mPzOa0m3aANYFRIY2aBgAbyQViU7iNT+23v/KMQq7y/qN1pGtW15auROH9Q&#xA;MxO8sdXUt/rUZT4g5bjyGJ4hzDXkxiQMTyL6I8h/mGnmqS4gay+pz28aSGknqKwckGnwpSlB9+b/&#xA;AEPaA1FiqIed1miOGjd2zDNi4LsVU7m3hubeW2nQSQTI0cqHoyuKMD8wcEgCKKYkg2Hznrej3Gga&#xA;ld+X7+vpg8rOdhs8RPwOPnSjeBrnFazTnDMxPLoXrdPnGWAkGONp1kGNYl67qPs1/wBX7OYPiy73&#xA;I4Qh7yVWYIv2E8OmZGGFCz1QUw8hx3f+JrbU7DRZNYNi5dEiVuBuAP3ZZ1VqemTz+YGbPS8UZAiJ&#xA;l5OHquExMTIRt7b5X8ma5eeYv8XebmT9JqoSx0+I8o7daECu7Co5GgBO5rWubjBppyn4mX6ug7nT&#xA;Z9TCMPDxfT1Pez7Ni692KuxVgX5wy00XS4R1l1GMn5JFI366Zqu1z+6A/pB2fZQ/eE/0XlPmpidX&#xA;IP7MUS/dGM5XVfX8A77B9PzQ/lhfMs+tyab5fcx3ep25tpnrx4wlgzty/ZoE6jfw3zM7O8Q3GHM7&#xA;Neq8MR4p8o7voTyn5btPLmhW+lWx5ekOU0tKGSVt3c/w9qDOt0+AYoCIeY1GY5ZmRTfLml2KuxV8&#xA;y+b9OMHnfzGt2WaWW6eRFDMBwlb1EruK/Aw2Ow7Zx3aUzHLIPV6KjiifJIZ9OBIaFirL9lWZqD/V&#xA;b7S/Rt7Zr45u9yjFYU1IjhVx/lcowP8Aggtf+Fw3Dn+v8fajdVh02FV/fASsdyDXhU+xrU+7VORl&#xA;mJ5bJEUrmtaSl4DTc0WpG1ex3+41GZ0ZbbsSGefkhYXk3n63nLHhaW88sgJDVDL6Y6BQPikGbHsw&#xA;Xl26B1/aZrFv1L6Ozo3nHYq+YfOPlbXtIW5F/ZyQxuJBDMQDG/puJNmUsKlUJp1zj5aXJimTIbEv&#xA;WYdRDJH0ndILsD6w7Lukn7xD4q/xD9eVOQ3btbJHI8wLNQhFXrXtgVQDO1Wf7TGpqan2FfYbYSq6&#xA;AFr23A/ZZpD8kQn9dBhHVBe4fk55Y13TLi8vdRs5LSGe3jjhEtFZjyJPwV5LSncZuOx9LkxmUpCr&#xA;dJ2pqITAETdPUc3jp3Yq7FWKfmNpHlDUNFB8xzfU1RqWl6lfWjkI/wB1hQxetN1oR91cw9dHCYXl&#xA;NDvcvRzyif7vfyfLN7q1zBdz20c4uoInZI5yrJzUGgYrXao7Zzf5eF2HpBkNbo3yi/l7Udfhh81X&#xA;0lho9C0jQIx5uPsxsVDMqt3ah+jqMnBjx8Xq2DTnnk4fQLL610Cz0Wz0e1t9ESKPS1jBtRAaoUbf&#xA;kDvyrWpJ3J650mMRERw/S8zlMjI8X1I/JsHYq7FXYq8x/Om9hgm8vxSsFDSXMu4J/u40Fdv9fNN2&#xA;xyiPMu47JG8j7nmHmG7t31KacSKYTx4yAjiRxFCD0OcxqATkNO7xbRCYfljfRJ+YWkurVVzLE46G&#xA;rwuFqDuNyM2PZFxzC/xs4naIvDL8dX0bnXvLuxV2KuxV5Z+cfky5uCnmXT4zI8Efp6jCoqxiXdZQ&#xA;P8jo3t8jmk7X0RyDjjzHN3HZeqEfRLryeTK6uvJTUHvnJkEc3ft4FQtzdKFKRmrHYkdsyMWI3ZQS&#xA;glVmYKoLMxoANyScy2L6E/KPyRN5f0h76/j4anqIVmjP2ooRuiHwY1qw+Q7Z0nZ2lOONn6pPOdo6&#xA;oZJUPpDPs2LrnYqlHmvy/Dr+h3GnOQkjgPbysKhJV3Un27N7E5RqcAywMW/T5jjmJPmXV9JutGup&#xA;dN1KJrcW7FYpWBPp1P2JP8j+R+hGctkxyjKj9T1GPIJCxyQn1O4Iqieqp6NH8YP0rXKm1a8PpEeu&#xA;3At9mIfFIx8FQb/fiBakvQvym8i3Oq6umrXkXDT7RgaHdSyHkkIPRjyo0h6bcc2fZ+lM5CR+mP2l&#xA;1uv1QhHhH1H7A98zonnXYq7FXYqgNa0LSdas/qmp263EAPJQSVKsBTkrKQynfscqzYIZY8MxYbMW&#xA;aWM3E0WF3f5E+RLmQu63Kk/yyJ/xIoW/HMEdlYhy4h8XN/lPL5fJ1j+Q/wCXtrOJTbz3FDUJLMeP&#xA;/CBD+OWDs7F1s/Fie0svSgz60tLWztorW1iWG3hUJFEgoqqOgAGZsYiIocnBlIyNnmq5JDsVdirs&#xA;VeTfnJZXdxrelzHT7i7sra3krLHGzxiSVwKbbBgErmj7XEzKNAkO67KlERlZFvKrzTYJL2SVI5gj&#xA;sSiPTnvuasPjJ8atv3zQZJTJ2H2F3EarmmnlDQdR/wAW6LeWenXDRW95C8rRxFkVBIORrQhRQGu4&#xA;zM7Phl8QEgncd7j6ucPDkLHIvprOveVdirsVdirsVeOfmF+VWr3Gtyaj5ds4vqkyKZLeCRYmEorz&#xA;bg5VN9vsn6M0Ov7NnKXFjArud5ou0IiHDMm2C3HkHzqjFJNKvWp1pEzj70LA5rPyWaP8DsBrMR/i&#xA;C2D8ufPE78I9GuQfGRREPvkKjLY6LMf4Sg63EP4g9O/Kz8sr7RbybUtftYPrICixTkJXibfk3wko&#xA;D0odz8u+20GhMDxTAvo6rX64THDAmur1HNs6l2KuxV2KpR5h8qaHr8ITUbflIoKxXCHjKgPYMO3+&#xA;Saj2yjPpoZR6g34dRPEfSXnt5/zj5pMsxa21ARIf2ZLfk30mKWBf+FzXy7J7pfZbsI9rHrH7Uz0H&#xA;8kPLWnSCW7le8YfajRRBG3+tQvIR7c6ZZj7LgDciZNeTtSZ+kcL0K2tre1gS3tolhgiAWOKMBVUD&#xA;sANhmyjEAUOTrZSJNlUwodirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYx5683zeXLS2a3gSa4u3aO&#xA;H1CwQMoqAeIrv+GYOu1ZwxBA5lzdFpRmkQTyeY3v5vfmcGLR6ZZxx77h1IG+27suaw9qT7wPg7Md&#xA;mY/P5pcv5xfmqHFbe0I9/S4/eHyH8qS/nD7GX8m4+77UZbfnj57ikpdWGnsAd6ygEf8AItm/Vlg7&#xA;Un3g/Biey8Z73rPkbzYvmfR5L8RrG0MzW8gQkqWVEckcgDT95TNro9Sc0OIit6dTrNN4M+G72tkO&#xA;ZbiuxV2KuxVhfnD809B8vO1qn+m367NDGRxU/wCU3t4fjmt1PaUMZ4Y+qX2Ow03Z08gs+mLzLU/z&#xA;580NL/oyQ2wPRAqsKeJ51p9+ayXaWeXIgfB2cezcI52fir6P+fXmBWBvYIbqOo50AVgP8nhxG+Sh&#xA;2nmjzqSJ9l4pcrD1Pyj+YWg+ZlCWz+hegVa0kPxePwnblm10uvhl25S7v1Op1Ohni35x72T5nOG7&#xA;FXYq7FUo83avd6P5dvdTtI1lntUDhHBK05AMSAV6KSeuY+qynHjMhzDfpsYnkETyLxi8/Nn8yvV/&#xA;dz2ESmhCegx2O43Jbtmgl2xLvr4O8HZmPu+1OfJn5pecr7zBY6ZqP1W4S8kWOsUTIVFau32h0WvY&#xA;5kaTtOeTII878mnU9n44QMuVPZc37onYq7FXYqgtZ1iw0fTJ9RvpPTtrdS7nuadh7nK8uUQiZHk2&#xA;YsRnIRHNgn/K+vJp3W2v2U7hhFDQj6ZRmB/K2Lul9n63P/knL3x+39Tv+V9eT/8Alk1D/kXD/wBV&#xA;sH8rYu6X2frX+ScvfH7f1O/5X15P/wCWTUP+RcP/AFWx/lbF3S+z9a/yTl74/b+p3/K+vJ//ACya&#xA;h/yLh/6rY/yti7pfZ+tf5Jy98ft/UnvlL8y/LXmi8ls9PMsV1EvMw3CojEf5PFnr45kafWwymhY9&#xA;7RqNFPELNV5MrzMcN2KvM/zvuIYLTRJZW4ot01TuT9kdANyflml7aBMY1/Odv2SfVL3PP9Z1S0k0&#xA;u2iZJYJWQhPXjeIP+95fAWFGpXp1zSaiP7v8d7t8Z9RY5NPFCoLnc7Ko3Zj4ADc5roxJ5OQSlck6&#xA;PO6kFHJJ4OKHM+EaiGNs48ked/OugaDdDRdHGoaUlw813d+hNMI3Eac1LROoHFFVjttXNppM+aED&#xA;wRuN+brtXgw5JjjlUq8nsH5e+f7Hzhpsk8cf1e8t+IuYK8hR68XRtqqeJ+WbjSaoZQdqkObp9XpT&#xA;hPeCyvMtxHYqwL82fO0mgaUtlZvx1C+BAbukfQt9PTNX2nqjCPBH6pfc7Ps3SjJLil9I+985q15d&#xA;ytJ6paRj8RO9SRX8Ac5+RERu9AEXBpkaNWSTlL3Cgmn6zlJzSl9I2SBS2bS05F4ZKN+0pqOvyK0+&#xA;nGOc8pBeFW0Q3ltqcckM8kM8ZVo5EJBDB1G/3165kRN7hhIdC+lfIPmo+YdG5z0XUbRvRvUG3xfs&#xA;uPZx/HOk0Gq8WG/1R5/r+LzWt03hT2+k8mS5nOG7FXYqk3nC90m28uX66pOsFtcwSQVbcsZEK8UU&#xA;fEzb9BmPqpwjjPEaFN+mhIzHCLIL5tkuonSIs1HEaq4OxBG3fOFnAk7PXhPPy91HS7Pzxpl3qE62&#xA;9tD6oEslQgeSNkWppQbt1OwzY9kkQygy2cPXxlLEREWX0eCCAQag7gjOxeVdirsVdiryb8/xcPpd&#xA;hA8kkdhM7h2iAP7xaEBgSvVa0+nNP2qZDhP8P6XcdkgHi/nfoeJwtpcSLELt247AlF+6vPNLIE70&#xA;7oFEcbP/AH7J/wAi1/5ryDJa5sIxV53Ue8a/814QLW2o30+QkJO5I6j0wD9xfEikWmnkyGS3822U&#xA;+m3M31+eZYol4qq8nIC8jyb4Qdzl+GUjKIjztpzxjwEy5U+rM615J2KvMPzxgklg0ERsI2+tP++o&#xA;CygqPsVqK5pu2SBGPvdv2T9UvcwDzHpUsei2xjuZJo2QmS3uj6sZ/eU+En4k+jb2zS5pVAO2x/UW&#xA;KR2cnKoRLYdGaMl5CPAMwHEZgnIPe5FIG6tiJXVT6iVPwSkt9IY1OZeOWwYkPe/+cf0KeTLwGg/3&#xA;IyUVRQAehDtnR9lH92f636A8/wBq/wB4P6v6Skn5HRRxeafMUUahI4zIqKOgUXDAAZT2cP3s27tE&#xA;/uoPZ83LpnYq+avzh1hrjzleA/7oPoxpvQcPgr9NBnK6yXHmkfOvk9Too8OGPz+bGdJtmWJQNpJn&#xA;CA9wKAV+4Zr8nqmB0csbBlVvbw28YjiXiB1PcnxJzIAaiVl5ZxXMRVgA9DwfuD/TARaQaSK0glki&#xA;aSIf6VAaGm5IBB9qlWUbdxUd8jj2JDKb0f8AJ7V6+anhX4VvrU+rH29SIh1ceI4E0zZdmy4c1fzh&#xA;934LrO0o3ivuL2rOjdA7FWmZUUsxAVRViegAxV8+eZfNj67qNzq8/wAdsjtBpdu/2I4h1cqf2m2L&#xA;H6M43Xaw5Zk9BsA9XpNMMUAOvViySxyAsjKwr1Ugj8M1RBHNzHSorxsrdCOvhhjKjavV/wAjfOE9&#xA;9az+X7uUyvZoJbJyan0ahWjr4ISvH2PtnX9l6gyBgenL3PP9qacRImOvN6tm3dQ7FXYqxX8z/Lbe&#xA;YPJd/ZxoHuoQLm1UkiskO9Nv5l5L9OYusxceMjrzcrR5eDID05Pl8WzcKGVq+wAX5caUpnLcT1NK&#xA;Ygnj2UGn/FbcR/wLVA+jDYKKbS1kLcnPE+IPJ/8Agj0+gYmSaXSWpNCrciOgcn8GHxDAJKQ9M/Ib&#xA;yy935kn1q5j5QaZEVgZnLUuJgVBAoBtHzr8xm17LxcUzLudX2pl4YCPe9/zfOgdirzb86v8AebRP&#xA;+Ypv+IjNJ259Ef6zt+yPql7mFeYyP0Jajv6f/M3NJqf7sfjq7fF9RYlmtclK7j++f5nNhj+kMXu3&#xA;5C/8ofef9tCT/kxDnSdk/wB0f636A892t/ej+r+kpH+Sf/KW+Zf9eX/qJfKuz/76bb2j/dQ/HR7L&#xA;m5dM7FXzN+bWk3Fv501BwCXkk9QKN6iT40p75ymqjw5pA99/N6nRy4sUT5fckWmzMII5mQj0pAae&#xA;OwO1fFWqM18xw5L6Fy+YZWhSZBJEwZWFcyLa6W3M8VpbvLKRUDYfwxtQGPWc09vayTKP31wxEe1f&#xA;pAPU1IA9zkcYuRLKbPvyf0mRfN6ysS7Wto7yPuQOZCKoPc/ETU9d/o2XZw4s48gf1Ot7RlWKu8vc&#xA;M6N592KpP5yaRfKGuNGSJBp90UIrWogelOO/3ZVqP7uXuP3N2n/vI/1h975REsksMcJkMqjdIuaS&#xA;9h0RQtenWQ5xZ2J/s+39T1i91lhlDHlE52DMUUn2DqPTP+q4+RyAII7/AJ/dz+IS6VpZXCSlnbqI&#xA;m4Ofn6aHj9LtTGIA3H6fvP6FLLfyU9ZPzHsgvJFeK4EoPFeS+kxH2fhb4gNuubns0/vR8XX9oj90&#xA;fg+ls6N5x2KuxV2KvK9W/ImC91S7vYdWW2iuZnlS3FrURh2LcAVmQUFdvhzTZeyOKRIlV+Tt8fax&#xA;jEAxuvP9iF/6F9T/AKvY/wCkU/8AVfK/5FP8/wD2P7Wf8sf0Pt/YsT/nH9yx56yir2K27E/cZhgH&#xA;Y0v5/wBiT2wP5v2/sX/9C+p/1ex/0in/AKr4f5FP8/8A2P7Ufyx/Q+39j0DyV5Ui8r6IumJMLlvU&#xA;eR5xGIixbxAL9AKbnNppdP4MOG7dbqtR4s+KqT7Mlx3Yq81/Or/ebRP+Yp/+IjNJ259Ef6zt+yPq&#xA;l7mDa64OkQr3WPf6Zjmj1B9H473c4x6j+OjF81zeldx/fP8AM5sMf0hizryL5y83aRoFzpug6Q97&#xA;687yLdrFLL6crRotOKDiSoUGhzaaTU5IQMYRvd12r02OcxKcq2Z9+T3kfVdBt7zUtWBivb/iFgY1&#xA;dUBLs0lP2nZunbNj2fppQuU+cnW9oamM6jHkHo+bN1rsVed/mv5YluIotftIjJJaKUvY1FSYeokA&#xA;A6p39s03ammJ/eDpz93f8Hbdm6kD0HryeMwXFrHDNFcjksjlhQqCuwFKMVPaoPSmaeUeIO5BpbBB&#xA;OzH6jdMKjkEaoqPEfst8wTlXDKLPiBantuEqnUJ2lYUPpgjYHxLFVFe2++PDKXkvEArS3kErwpEn&#xA;ERsgVKozGkqPsEZuyHr3ploAiGHN7x+WvlebRtIe6vU4ajqJWWaM9Y0Ufu4z7gGp983/AGbpjjhx&#xA;S+qX2Do8/wBoagZJ0Ppiy/Nk4DsVWTQxzQyQyjlHKpR18VYUIwEWKSDRt8wappEui6veaVOvGa0k&#xA;KcqULp1jf5MpBzg9bhljyGJewwZROAkOqFZVYEMAQeoPTMQFuUZRFbwt6aKnLYBQBv8ARlsAZS3Q&#xA;9K/IPQpGvNQ1yRSIo0+qQE9C7kPJT/VCr9+dP2Ri3M/g6XtbLsIfF7Rm8dG7FXYq7FXYq7FXYq7F&#xA;XYq7FXYqwz80vK+p67okDaUA9/YTevHCxA9RSpVlBNBXoRXNf2lpTmhQ5guf2fqI4p+rkXkc+ifm&#xA;FNEYZdCuivTaF+xrt9Oc/LQ5iKIPyd6NVh/nD5oM+UfPPbQrv/kS+VfyZk/my+SfzmL+cEOfIfnZ&#xA;3qdEvOTH/fLAb/Rl40eUbcJR+bxfzg90/K3ytf8Alzyv9U1Ci3dzO9zLECG9PmqIEJGxNI6mmdDo&#xA;MEsWOpcybdBr84y5LjyApl+ZrhOxV2KuIBBBFQdiDirzzzN+VMU8z3mgSpaSuS0ljKD6DE7koV3j&#xA;+VKfLNNqeyrN49vLp8O52un7SIFT38+rzzV/y783xTLKmkTLcIwJa3KyI48eUZJB9+PsRmvOmzR2&#xA;MD8N3Yx1eKXKQ+5W0b8uPOE8vqHTHSVj/fXTLGqA7bBizk+JpX5CgxjpM0uUSPfsieswx/iv3PSv&#xA;KX5aWelTx6hqcq32pJvEACIIW8UU7s3+U33ZtdJ2aIHimeKX2B1eq7QMxwx2j9pZtm0dc7FXYq7F&#xA;Xnv5r+Q7vXobW/0e39TV4G9OQh0jLQUJ358QxVunxDqeuavtLRnKAYi5fodn2dqxjJEj6f0vK5vI&#xA;3nyA8X0idj4rGz/inIZz8uzcg/gk7ka3Ef4g3D+WXn+9kWmlyAGnxSlIgAfaQqfwy/F2dl6RI97G&#xA;evwj+J9BeWtEttE0Oz0y3QIsEYD71JkO7sTtUlic6jBiGOAiOjzWfKckzIpnlrU7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FUq802WrXmh3UOk3TWmoceUEiEAkrvw5H7PLpX+G2UaiEpQIiak3aecYzBkLDwGXzZ55jZSPMN+&#xA;ld+LsjnYkEEcI96jOVPaM48zL5l6X8njPSPyTfy9+ZfnWLVLGzudWW6huJkiYT28a05sFq0vMkKK&#xA;1OZWn7TySkAD16tGbQY+EmunR7hb6zpFzKIba+t55T0jjlR2NPZSTnRxzQkaBB+Lz8sM4iyCPgjM&#xA;sa3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FUk8z+ctA8tRwtqs5ja45ehEil2bhTkdthSo6nMfUaqGE&#xA;Di6uRg008v09Ffy95l0fzDYm90ub1oVcxyVUqyuADQg+xGSwZ45Y8UWObBLGakmmXNLsVdirsVYj&#xA;+ZPmPVdC0u0m09lja6uPqzSlQ5QsjOpAbY/YO345r+0dRPFAGPfTn9n4IZJkS7nllz5o/MOSsi+Z&#xA;ZFWvRbZFA28Q2ac67J3l3A0eIfwhLF85/mApqfNNw/sbePb7mGY/8qy75M/yWP8AmhNNF/NDzpBq&#xA;cFpJqZ1EzyJEqS28cYrIQo3Uu3ftmTh7RyyIo8z1acugxUSQ+gM6d5t2KuxV2KuxVB6tq+naTZPe&#xA;6hOsFum3I7kseiqo3Zj2A3yvLljCPFI0GePHKZqIsvmzXb63n1W7mhjkihkuJ5IY3UhljklZ0BAr&#xA;vxYZwupqeQmPKy9fhiYwAPOggbUadLqVqNTM8emBwLqWAUkVD1KVB/VlmkERL1nZcvFwnh5vVNW/&#xA;KnyxJ5ZbWvJ91Ot7bwtcWk6TtKlwY6twcNWjGnEceND1750mTQYpY+LH8HR49fkjk4cnLqzD8tPM&#xA;k3mHyja31wS1yhaCdz+0yUo30qRmVocxyYwTzGzia7CMeQgcjuynMxxHYq8//MD8zbry/evp2m2s&#xA;VzfRxpKwncop9Suyn4RsN+v0Zq9b2gcU+EV8XZ6PQDLHiJeYXf50fms0jGC1SNNzxS3EoA/1gDmE&#xA;dfkP8X3OeOz8Q6faUrm/OD81uFHldAehFuVP6sj+byH+Jn+TxfzWoPzg/NQAhJ3kPU1g5H9WP5vI&#xA;P4ip0eL+amFr+c35srx5wiSMd2tuNfmxGEa7IP4vuYnQYj/D970DyN+buq6tqVrp2s2lvBNdOIo/&#xA;Rfk5YivJgCwHhTbMrTdoylMRNbuJqezoxgZRJ2eqZuHTuxVJPN3mux8taPLqNyvq8CoWFSAx5txB&#xA;PUhR3NDlGozjFHiO7fp8Byy4QwN/znjuULW1za26t9mPi0ki/wCydok/4XNXLtSXSh+Pg7OPZkRz&#xA;ssM87a3qHmy1gtbrVwtvA5lReMIJfiVB5IEYbHpWmYWXVzybSNj4Obh0scZuI3+Kv5S81635a0uP&#xA;TrfV4pLOEs0cbRw7c2LNVyCxqT3OHHrckBQOyMujxzNkbsmh/PI2x/05LW4UCgELNGxPz/ej8Myo&#xA;dqz6gH8fFxJ9lRPIkPTdB1uz1rSrbUbWqx3May+k1OacxUBgCaHNziyicRIOoy4jCRiUwyxrdirB&#xA;/wA4YeflAS/8s93BJ95Mf/G+aztaN4D5EOx7LNZveC87eMHyxI4HxC63Pt6X9uaGX92XdX+8+DEM&#xA;1DmKNhJqCa9bTadbtd30EyTW9uiGUu8NHA4Lu32dxmz0gl6eEWWnNw8J4jQeu+Tvzpe/1ddH8w2S&#xA;2F28ghEqB4wkpNAksUtXSp71/rnQYO0SZcOQUXR5+zgI8WM2HqmbV1TsVdirsVeCfmD52hv/ADXe&#xA;I9wgttJY2tjAWFDLXjJKR4lgQPYDOV7T1Ep5CB9Mfvel7PwCGMHrJiMkjyuZHbkzbljmiJJ5uyQ7&#xA;3dqHMbSKG6EE9z2OSGOXOkWGcfk95vOj6vc6ReS00ydJZ15dI5YELsw/1o0NfcDOi7K1XCeE/SRb&#xA;qu09NxR4h9QZn+Q1tLD5GZnFBNdyOg9hHHH/AMSQ5seyx+7J75FwO1D+9A7oh6Nmyda7FXhH5w21&#xA;9Z+f4bmOLlDfWqMj8QwLx1jZfjaNaiimle/bOb7WxgZRI9Xoey53iruLAJ9QEckiTRUkQ0IqqAfN&#xA;XIZfx9q5pZYKOxdmJKa6hdxkSSx0ibbpw+VGZv8AiQXHhB2B3/H42tbba/up5CsCEqn2j8LGp/2Q&#xA;UffXHhoeo/et9yXy35MjmRaONjQhem3RjUZkwx0EcTJ/ystb2/8APmkIsZ9OOb6xIQpAVIQXqW37&#xA;gDcDrmbosd5Y10cTWzrFK31FnUPLuxV4/wDml5J1GH9I+YBPBcWMkkLyLKHFxEWkWMLHTkjCrDrT&#xA;bbsM0HaekkIzyAivt+DvOz9XE8OOiD9jDtQ0jTTYWkhtoy0tt6jMVBJbm2/3AZqTGoAjudlGRJPv&#xA;Y7+j7H/fEf8AwIzB8afe5HCGv0bYf74T7sfHn3rwhRu7eCEL6SBK1rTLsMzK7QQ9w/K3yVqViLLX&#xA;bmeCOCeyjMFtbepV1lQOGmL0HLfcAHfvsM6fQaSUSJkjePT9Lz+v1cZAwAOx6/oelZtnVOxViP5t&#xA;QmX8vNZUdVSKTYkf3c6P1UE/s9sxNeLwycvQms0fx0eCws9vpzCIehI7ghI43h5fD3idjHMB/ksJ&#xA;B7gnOcO8C9D/ABpNPPPIVWQkqeicHjBP+qf3j/IbeOYEYgcvvB/YG8lln5LQPP8AmLaEA+nbJcSM&#xA;vFiB+6ZB13Tdx9rbwzcdmxvLE+X6HA7RlWE/BPvz2hibzrpi2yH69JZKJOOxaszLD9NQ2ZHaw9Yr&#xA;m09lH0G+VvdlDBQGPJgNzSlT8s3roW8VdirsVfJkumyxz3UU8rrOJpRMENFDhyG+Ejf/AGWcHqch&#xA;GQgh7LGAYikMLG7UcFK8P8mR4x/wABp9DDIeLE7/AKAftZcJVV01RFwMrBiP2dkH/PPdSPnXIHNv&#xA;dfj3p4Vvl3y9e6t5itdLglWN7mUxiT4yqqQeR4VNPhrmz08fEIiOZaM0xCJkej6q0HRbTRNHtdLt&#xA;K+hapwDHqxrVmPuzEnOrw4hjiIjo8rlymcjI9UfljW7FWOee/J8HmfRvqwYQ31ufVsbg9FkpQq1N&#xA;+LjY/f2zE1mlGaHCefRytJqThnfTq8E1iC5tbk2erQG01S1+F0kH217MrdCPAjrnH6nBOBqQ3D1G&#xA;LJGYuJsIBpIgPiYU9zmIIltQk12gUxwig7kCn3ZkQwm7ki1CC2muZ44IImmnkYLFGilnZj0Cgbk5&#xA;lAEmgwJAFl9B/lZ+XzeWrF72/CnWLxQJFG/ox9fTB7kndv7KnpNBo/CFy+o/Y85r9Z4pofSPtZ5m&#xA;wde7FWI/mzE8v5fasqGjgQMpB47pcRt1o3h4Zhdo14ErczQf30fx0eHXcOtXWnWSTOyxCA8eRRQV&#xA;5MOkXxNuD1ZflnN2OAe56GI9R96RnTpojyt3AbuABGf+FBU/7JTmB4wPP9f4+bfwtsupSDjUoO5J&#xA;RfxXkfupiDAJ3Q17p5REIcc99+NP+GqX+85dhy2SgxfV3lJGTyroyNsy2NsCNuohUdgv6s7XB/dx&#xA;9weQz/3kveU1y1qdiqU+bbf6z5W1iACpksrhV/1vSan45TqI3jkPIt2nlWSJ8w8PiWG58qXccqLI&#xA;lYX4sARUq2+/yzkomsZenkP3g+LForaCIlo0Csdi3U0+ZzWSmTzckBk/5Ua3oug6tqmt6nKsYhsz&#xA;FCg3kkaSRW4Rjuf3fyHfOg7NyxxkykeQdb2hilkiIxHVN/IWk6n5188z+bdTQiyt5hKAfsc4xSCB&#xA;NhURgAsfv3bMnSwlqM3iS+kfgNGqnHBi8OP1H8F7jm9dE7FXYq7FXz/+aGgvo3m24l40s9VJurd+&#xA;3qMf3yV8efxfIjOQ7Y0phk4hyk9P2bn48YHWOzFM0zsFk0ojjLHr2Hvk4R4jSs5/Ivy/Jda/Prci&#xA;n6vp6NHE/jPMOO3yjLV+YzpeysNz4+kXUdq5qgIdS91zoHn3Yq7FXYqw/wDMD8vE82/VZBeG0ntF&#xA;dUDJ6iMHIO45IQfh6jMDW6Lx63ohztHrPBva7edXP5EeZ0Y+hcWUy9v3kqN9xjYfjmql2RmHKQLs&#xA;49rY+oKlD+Q/m6R/3lzZQp7ySMfopHT8clHsnL1MVPa2LoCznyD+U6+WNT/Sk+oG6ufTaNYkj9OM&#xA;c6VJJZi3T2zYaTs/wpcRNlwNX2h4seECg9BzZOtdirsVSTzrplzqnlXUrG1j9W4mi/cx1A5MrBgK&#xA;nb9nMbWYzPFKI5kORpcghkjI8reGXcj2sEFpepJaXMMJjMNwjRNUOx2DgV+12zlJRMI8MgQQHpoE&#xA;SJINhIs1bkuJA67Yqug0XVtZnjt9LtJbyTlRvSUsq1p9th8Kj3JzO0mCcjsC1ZcsYC5Gn1Dp0D2+&#xA;n2sElPUiijjem4qqgHO4gKiA8fM3IlEZJi7FVlxCs9vLC32ZUZG77MKYCLFJBo2+dtPZl8v3MT7M&#xA;Ej5D3QkHOL5QIeuP1AsfY0UnwGa0c3IZZ+Vf5dab5nS5vtSlkFraSrGLeKi+oaciGfcgdOm/vnSa&#xA;DRRy2Zcg6rX6yWKhHmXvNhp9lp9nFZ2UK29rCOMUSCigZ0MICIobB5+czI2dyr5Ji7FXYq7FWP8A&#xA;nnyrH5m8vzacPTW6qslpPKCRG6kVPw77rVfp6HMbV6fxYGPXo5Ol1HhT4unV5JJ+S/niJuEclvKv&#xA;8yS1H/Dqh/DOfl2Nl7on4u7HauLz+S1PyR86zyASyW0Q7vJISKewRXyePsnL/RHx/YiXauLzL2Ty&#xA;h5di8veXrTS14GSJa3EkYIDytuzb1J+nN/psPhwEXR6jN4kzJOcvaHYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYqsnt7e4jMc8SSxnqjqGX7jgIB5pBI5JTN5K8oTHlJotkW6lhbxqT8yFFcpOlxHnGPybhqso/&#xA;iPzbg8neUrc8otGslYbhvq8Rb/gitcY6bEOUY/JTqch5yPzTaOOOJBHGoRF2VFAAHyAy4Cmkm12F&#xA;DsVdirsVeL6h+WHnqO4vI7NbOWznlkMZ9VlcRs5ZeVVUV3zncvZeUk1VF3+PtLFQu7CVN+UPn1lK&#xA;+hbCop/fD+mYo7Eygt38qYvP5PT/AMsfKV/5Y8vzWN+Y2uZrl5yYmLLxKIgFSF/kzf6HTyxQqXO3&#xA;T67UDLO48qZdma4TsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVaZlRSzEKqirMdgAO5xVj3lzz75f8wanqGm6e7/Wd&#xA;OfhMJAoDEMy1SjMT9g9QMxsOqjkkYi9vxs5ObSyxxEj1ZFmS4zsVdirsVdirsVdirxH83NXmt/Ns&#xA;ktlK8M9pbwQgox/vmZpK08eDrnO9p5P323MB6Hs2H7nfkS9c8uWmo2miWkGpXLXd8sYNxM/Xm25X&#xA;349KnN5ghKMAJGy6PPOMpkxFBMsuanYq7FUHrOofo7Sbu/4er9VheX0xXfgtewP6sryz4ImXcGzF&#xA;DikI95eO67+bnma8tU0+zFrFc3JR/rNm7syRn/dbBh8LE9SG/XXNBqO1J8FbWe77neYezYCVm6He&#xA;wXUU1c3L/Wr+7Mp3al1Lx337ls1c9WQakHYxxDop22r63pUy3Frf3YevVrmVhX5ArkserJ5GiiWG&#xA;J5i3oujfnTrbWEH1iG0kkt+MdyZHcTz1IHKNFXiNuvv07DNvDtSfCNht8y6yfZkOI0Tv8g9ljfnG&#xA;r0K8gDxPUVHQ5vQ6MrsKHYq7FXYq7FXYqkWu+ctI0iQwSsZrkCrRR0+Dao5sTtXw3PtmHqNbDEaO&#xA;5crDpJ5NxsHeWfOGl6/6yW1UuIADLExB2YkAqe/vtktNq45rrYhGo0ssVXyKe5lOM7FUh80+a18v&#xA;C3lnspprKVuM96lPShqaLz6tViQBUBffMXU6nwgCQSO/ucnT6fxSQCAU4tby3urSK7hcNBKgkR/8&#xA;kiu+XwmJREhyLRKBiaPN8+eavO+s3Ov6gyMt5ZfWZVsncHisKsVQxU5CjKK1Cj6eucvqdZxZDZ2v&#xA;Z6bTaYRgNqNbscXVmgZ5YrCGKR/tOCwJ77/AMxhkB6uTwPQ/y2/NGGyhvo/MeocLOJFe1R1d2DfZ&#xA;4R05mlBuDt4U3rt9BreGxM7dHV67RcVGA36vQfLf5l+UPMV39T067P1ogmOGVShegqeBOxIHatc2&#xA;eHW48hoHd1mbRZMYsjZlGZTiuxV2KuJAFTsB1OKoaTVNNiYrJdwow6hpEB/E5A5YjqGYxSPQvBYZ&#xA;o/Mf5jWTOw9C8v2u25HYwRHlGD84o+Oc1AjLqLPIyejkDi09dRF9BKysOSkMD0I3GdQC8zTeKuxV&#xA;2KuxV86641p/jzWZooY4Ybe4lQRxKqKPQXgaBQBUkVPvnGa6Q8c9wt6zSA+DG+5IZpXmlaVzVmNT&#xA;mrkbNuWoXChoHHtX7t8ljNSCCyr8lGtv8bJHPDHKZLeT0TIoYpIhVw6EjZqKRUZ0HZdeLv3Ot7Tv&#xA;wtu99C50rzbsVdirsVdiriQBU9MVYL5x/MK2s4ZLfTpl5ColvARRfER9if8AK6eFT01Os7QA9MOf&#xA;e7PS6Ey3l8v1pX5U8hXGr8NT15Xjs3+OCwJKySg785j9pVPXj9o96dDVpOz+L1ZPl+tt1OuEPTj5&#xA;9/6mf6foGiadO8+n2EFpLKoSRoI1j5KvQHiBm3hhhE3EAOrnmnIVIko/LGt2KsY/M61lufIesRxA&#xA;lkiWYgfywyLK3/Cocw+0I8WGQcvQyrNF4ZaeZPMk2nDy9aag0GlzhnmXY0QfEUBI5BWP2hWnz3zl&#xA;MGpyRgcZPp7no56eBlx16kqvLzWLsqjFI1jHFWUACniPtf8AER9GUTnAtwBQrpqMoELcUXfnKKGo&#xA;7U3/AIDIAwG4Tugke/t51KFfUhcMkhCkVU1Boag/StMzoSG0gwIsU9X83z22oaP5T89WaR22tS3K&#xA;W956I4+pIlTyIG54PCQPZqeGbfUzEoQyjaVup08TGc8R3jT2/N46N2Ksa/MXWb/R/Ktzf2RKyI8a&#xA;O67MqSOEJBoaHfMPX5JQxEx5uXoccZ5QJcnznrL+atQuGml1yZy+6+sZEPE9BWPnXOZ/Nxl9X2vS&#xA;DFw8hSUppGt+ujTXnqRgjlSVySPCjUxOeFbFIiUfq1pf3MtbSQQBeIRy/EhVFP2anIQyQHMsyCoW&#xA;MnmCxmWRNdeJ0II9JppGBHgHCr+OXDKBuGs475voP8ofMGq61ol1JeyyXCW0ywxXE27uwQM9TU/z&#xA;A07Vze9mZZzgeI3u6LtLFGExwitmeZsnWuxV2KvmfzZPDaedNet2JSSS8nIDBlr6rc9iwANa9s4r&#xA;tGBGaR971mjkDij7glMs0US8pGCr0Fe58B45rYxJ5OUSh5L63MbK3KMspC+ojICSOxYDLYYjYRbM&#xA;fyStjN55jkAJFvbTSH2BAj/43zfdlxvN7gXXdqSrD7yH0LnSPNuxV2KvKNa/PeO1uJIdO0K5vETp&#xA;PUFT81TkR75qJdqC/SPtdtDss16ikFx/zkTrwakXl8Jt0k9Qmv0UyB7Sn0AbR2ZDvKWX/wCcHmLW&#xA;PhubG6W1PWGCMrGQf5twSP8AWamYmfVZMmxOzk4tHjhyG7Lfyy8s2evXk3mDUD68FnKsdnZmnBZQ&#xA;iuzOASCycxQdsyOzdLGVzO9HZxu0NQYAQjtY3euZvXSOxV2KuxVZcW8NxBJbzoJIZkaOVD0ZWFGB&#xA;+YOCUQRRSCQbD5s84+UtX8m6xJGtu9xp1zySyvN+JVt+DMAaSAVBHfqM5LXaM4ib+nvep0urjlj/&#xA;AEuoY9+k0YUjjZpe6eB96VP4Zq/BPU7OXxNHU0IAjjZpjWsZ2pQVNetMIwHqdl4kukv1Z2JQiQn7&#xA;Hf8Ar+GZkcdCmPE9X/K7ytrmvnSbrVI2h8vaMzzWcbCgmmeTnUVoWHKlWpTanjm30OnnkMTL6I8v&#xA;N1Wu1EMfEI/XLn5Pcs3zoXYqgtb0q31fSLvTLj+5u4miY91JGzD3U7jK8uMTiYnq2YshhISHR8w6&#xA;vPd2d49ldwcZrCQ2lxTlUshIBB48N/2RyqfDOKz6YxNHmHrceUSFjkUFNqkS0Eal2Jp8QZB8twST&#xA;7AZjRwk82wyc2qQCD1KHmf2N6fPkART3H68RgN0vEl0dyZJOBQ82OwUMak9BSgav0Zn8Hcx4n1T5&#xA;D8uHy95WstOcD6yF9W7I/wB/SfEw/wBj9n6M6rSYfDxiPV5XV5vEyGXRkGZLjOxV2KvAPzo0IRed&#xA;JblSyjUreKapq0ZaMeiylD8J2RT9Oct2yODKJdC9H2XPixV3FgcemuXBkYIAKfAzsxHgGckoPZfv&#xA;zUHMK2/H63Y8Ld5YwLbt6ZZCdtiSD7MpqDhw5CZbpMXp/wDzjxobpPq2ruFoqJaQsvLfkfUkG5IF&#xA;OKZ0vZMbMpfB0na09ox+L2vN06V2KuxV8r6pcQW8tzBLEyTWlzPBMpBNCshpViAB/sqZw2pwkTNd&#xA;5exxTuIPkgF1OEROxVl47lQK1r03Gw+n9WUcE7oFnYQdzeq0tGQoVUbAMf1hT+GZGKBrna2+hfyQ&#xA;tzH5CgnK8Rd3E0y7g1Ab0q7f8Y86jsyFYveXm+05Xl9wZ9mwde7FXYq7FXYqgNc0TTtb02XTtQj9&#xA;S3lHbZlYfZdD2YdjlebFHJExlyLZiyyxy4o83z95m8meYtE1O4t0s7i7so2pb3oifi6EAgkoGWu9&#xA;OuchquzZY5kAS4e+np9PrIZIgkgHuY69lrNw/pJaTO1aGOONmNelCACcqx6fuBv3N5yR7w9C/LD8&#xA;rJLy5bUvMdnNBb2zKbeynjKCZtzVw1G4rttTf5bZudDoOI8UxsOne6vXa/hHDA7nr3PcAAAABQDY&#xA;AZv3QuxV2KuxV5j+cPlVXtj5ht4hIqIIdViAryi6JLTxQ7H29hmj7X0nEPEjzHP8eTuOy9TR8M8j&#xA;yeNxQWkJMiADkKcyamnhUk7Zy8pSOzvgAgrkWzSVjTvyJqaE+PHp9OZWKMgN0F6R+THkZNS1MeYr&#xA;6Ktpp70sgdudwN+XusfX508Dm77M03EeM8h97qe09Twx4BzP3Pd837oHYq7FXYq82/PHSfW0Gz1Z&#xA;BV9On4yn/iqeikn/AGYXNR2zg48V9zteyctZDHv/AEPHc456JCX77Kn0nMnTx5lBfRH5VaN+ivJF&#xA;grLSa7BvJe2826f8kwozsuz8XBiHnu8rr8vHlPlsy7M1w3Yq7FXiX5mfllqC67da1ptpJd2d83rS&#xA;x245SxTn7Z4gGTi5q3wdzvnO9p6LJxGUBYLvtBrIcIjI0Q81vtPgt3pNC8Ljb0mUruN/2hVfelM0&#xA;ojkGxFO1BieSI0jyNr2u3aRWGnSnm3xS8CkKb9WcjitPbfM/DgyT2iC05c+OAsl9PeXdEt9D0Oy0&#xA;m3NYrOJY+X8zdXc/6zEnOpxYxCIiOjy2bIZyMj1THLGt2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVQ1&#xA;Cygv7C5sbgEwXUTwTBTQ8JFKtQ/I5GcBKJB5FlCRiQRzDynUfyDUuW0/VRwPSO5h+Ib93jZa/wDA&#xA;ZpJ9i/zZF3EO1/50fkhrT/nH+5MtbzWI0i/lhhZifarMtPxww7HPWX2MpdrjpF6r5d0Gx0DR7fSb&#xA;Isbe2DcWkILsXYuzMQB1LZt8OIY4iI5B1GbKckjI8ymOWtTsVdirsVQGvaPb6zo15pdwSsV3E0Zc&#xA;CpUn7LAeKtQ5XlxicTE9WzFkMJCQ6PKpvyG1VDxttbjeMdPUgKGn0M+aOXYe/MO5j2wOsftXWv5A&#xA;3DzK9/rKlAfjSKEkkeAZnFPuyePsauctvcxn2v3R+17BHGkUaxxqFjQBUUdAAKAZvAKdKTa7Ch2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2Kv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F87F117407206811822AB2A6B75D99AD</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stRef:instanceID>
            <stRef:documentID>xmp.did:0880117407206811822A8072EAEFE205</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC3D3EC9D6DEE611ADF3FA58164AFD71</stEvt:instanceID>
                  <stEvt:when>2017-01-20T09:07:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T18:36:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T21:11:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:577FABBD61206811822AA8872E1D75D1</stEvt:instanceID>
                  <stEvt:when>2019-04-07T19:22:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stEvt:instanceID>
                  <stEvt:when>2019-05-11T00:15:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</stEvt:instanceID>
                  <stEvt:when>2019-05-18T09:11:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>4008.000000</stDim:w>
            <stDim:h>4008.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -4008 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 4008 li
4008 4008 li
4008 0 li
cp
clp
4008 4008 mo
0 4008 li
0 0 li
4008 0 li
4008 4008 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
3135.8 3472.62 mo
3138.44 3535.48 3136.68 3669.66 3194.27 3716.73 cv
3251.86 3763.5 3437.21 3770.52 3493.63 3717.9 cv
3546.54 3668.49 3546.25 3505.36 3559.11 3448.36 cv
3562.03 3435.5 3645.35 3361.53 3656.75 3351.59 cv
3703.53 3310.08 3759.66 3265.36 3777.2 3266.82 cv
3806.14 3269.45 3829.52 3293.13 3826.89 3256.58 cv
3824.26 3219.75 3790.35 3193.73 3727.5 3214.78 cv
3705.57 3222.09 3672.25 3262.72 3628.98 3298.39 cv
3548.29 3364.46 3450.36 3439.59 3450.36 3439.59 cv
3359.15 3444.85 3216.78 3439.88 3135.8 3472.62 cv
3135.8 3472.62 li
cp
.24506 .695979 1 .133181 cmyk
ef
3721.07 3212.73 mo
3700.02 3218.29 3673.71 3242.55 3659.09 3254.54 cv
3560.57 3335.81 3519.35 3384.04 3424.34 3420.59 cv
3391.89 3432.86 3349.8 3434.33 3307.41 3436.08 cv
3267.65 3437.83 3223.8 3440.47 3191.93 3446.6 cv
3142.82 3456.54 3118.26 3472.04 3149.84 3485.78 cv
3201 3508 3304.48 3515.01 3393.65 3509.75 cv
3457.08 3505.95 3515.55 3499.52 3541.57 3484.32 cv
3560.57 3473.21 3511.46 3440.76 3553.85 3409.19 cv
3624.01 3356.86 3708.79 3290.5 3752.05 3256.88 cv
3769.3 3243.14 3819 3249.28 3819 3249.28 cv
3822.8 3226.47 3793.57 3193.44 3721.07 3212.73 cv
3721.07 3212.73 li
cp
.163729 .496834 .793271 .0141909 cmyk
ef
3342.49 3451.87 mo
3442.47 3451.87 3523.45 3461.51 3523.45 3473.5 cv
3523.45 3479.93 3499.18 3485.78 3460.89 3489.87 cv
3429.02 3493.09 3387.22 3497.76 3341.9 3497.18 cv
3299.51 3496.89 3261.22 3492.5 3230.23 3489.58 cv
3188.43 3485.78 3161.53 3479.93 3161.53 3473.5 cv
3161.53 3462.39 3242.51 3451.87 3342.49 3451.87 cv
3342.49 3451.87 li
cp
.310002 .776455 1 .310887 cmyk
ef
3802.63 3216.83 mo
3807.31 3220.33 3809.35 3224.14 3794.74 3222.67 cv
3781.29 3221.5 3776.03 3222.09 3755.27 3224.72 cv
3746.5 3225.89 3727.79 3234.95 3723.7 3238.17 cv
3709.08 3249.57 3682.19 3271.79 3666.4 3284.36 cv
3642.43 3303.36 3610.86 3332.59 3586.88 3351.89 cv
3567.88 3367.09 3553.56 3378.78 3538.35 3390.77 cv
3527.25 3399.83 3505.91 3417.37 3504.44 3432.28 cv
3493.04 3429.65 3481.93 3426.43 3459.13 3425.26 cv
3485.15 3415.32 3492.75 3406.85 3521.11 3386.68 cv
3538.06 3374.4 3560.28 3355.1 3578.11 3340.78 cv
3629.56 3299.85 3702.36 3236.71 3731.3 3215.66 cv
3747.38 3203.96 3782.46 3205.43 3802.63 3216.83 cv
3802.63 3216.83 li
cp
.13901 .351934 .728115 .000366217 cmyk
ef
3156.56 3495.43 mo
3149.84 3577.87 3180.53 3688.37 3206.26 3705.03 cv
3229.94 3720.23 3248.94 3726.08 3265.02 3728.71 cv
3287.24 3732.22 3311.79 3735.44 3333.43 3722.28 cv
3401.83 3681.35 3429.31 3601.25 3429.02 3518.23 cv
3403 3522.03 3398.91 3524.07 3342.78 3524.07 cv
3286.94 3524.07 3189.01 3516.47 3156.56 3495.43 cv
3156.56 3495.43 li
cp
.203006 .606439 1 .057557 cmyk
ef
3227.89 3700.65 mo
3194.86 3631.65 3191.64 3564.13 3186.38 3539.28 cv
3182.87 3522.32 3179.66 3519.4 3176.44 3517.94 cv
3172.64 3515.89 3169.13 3517.94 3168.55 3530.8 cv
3167.96 3554.77 3168.55 3584.88 3189.3 3640.43 cv
3198.37 3664.1 3216.49 3692.46 3227.89 3700.65 cv
3227.89 3700.65 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
3151.3 3636.33 mo
3152.18 3639.55 3153.05 3642.76 3153.93 3645.69 cv
3157.44 3647.73 3161.24 3650.36 3165.04 3653.29 cv
3182.87 3667.61 3196.61 3673.75 3209.18 3673.75 cv
3222.04 3673.75 3233.74 3667.91 3247.19 3657.97 cv
3259.76 3648.32 3267.65 3642.76 3275.84 3643.06 cv
3283.73 3643.06 3292.21 3648.9 3305.95 3661.47 cv
3311.5 3666.44 3316.76 3669.95 3321.73 3672.29 cv
3331.09 3676.38 3339.56 3676.68 3346.87 3674.63 cv
3368.51 3669.07 3372.89 3648.61 3392.19 3641.89 cv
3403 3638.09 3415.87 3640.13 3432.53 3653.29 cv
3450.07 3667.61 3463.81 3673.75 3476.67 3673.75 cv
3489.24 3673.75 3500.94 3667.91 3514.38 3657.97 cv
3519.94 3653.58 3524.62 3650.07 3529 3647.73 cv
3529.88 3644.52 3530.75 3641.3 3531.34 3637.79 cv
3525.78 3640.43 3519.65 3644.81 3511.75 3650.95 cv
3498.89 3660.3 3488.07 3666.15 3476.38 3666.15 cv
3464.69 3665.86 3451.82 3660.01 3434.87 3646.56 cv
3417.03 3632.24 3402.71 3629.9 3390.72 3634.29 cv
3372.31 3640.72 3359.74 3663.23 3345.7 3667.03 cv
3339.27 3668.78 3331.67 3668.49 3323.49 3664.98 cv
3318.81 3662.94 3313.84 3659.43 3308.87 3655.04 cv
3294.25 3641.59 3284.9 3635.46 3275.54 3635.16 cv
3266.19 3635.16 3257.71 3640.72 3244.26 3650.95 cv
3231.69 3660.3 3220.88 3666.15 3209.18 3666.15 cv
3197.49 3665.86 3184.33 3660.01 3167.67 3646.56 cv
3161.82 3641.89 3156.56 3638.67 3151.3 3636.33 cv
3151.3 3636.33 li
cp
3145.16 3605.64 mo
3145.74 3608.27 3146.04 3611.19 3146.62 3613.82 cv
3152.18 3615.87 3158.31 3619.67 3165.04 3624.93 cv
3182.87 3639.26 3196.61 3645.4 3209.18 3645.4 cv
3222.04 3645.4 3233.74 3639.55 3247.19 3629.32 cv
3259.76 3619.96 3267.65 3614.41 3275.84 3614.7 cv
3283.73 3614.7 3292.21 3620.55 3305.95 3633.12 cv
3311.5 3638.09 3316.76 3641.59 3321.73 3643.93 cv
3331.09 3648.03 3339.56 3648.32 3346.87 3646.27 cv
3368.51 3640.43 3372.89 3620.25 3392.19 3613.53 cv
3403 3609.73 3415.87 3611.78 3432.53 3624.93 cv
3450.07 3639.26 3463.81 3645.4 3476.67 3645.4 cv
3489.24 3645.4 3500.94 3639.55 3514.38 3629.32 cv
3523.45 3622.59 3530.17 3617.62 3536.31 3615.58 cv
3536.89 3612.95 3537.48 3610.02 3537.77 3607.39 cv
3530.17 3608.85 3522.57 3614.11 3511.75 3622.59 cv
3498.89 3631.95 3488.07 3637.79 3476.38 3637.5 cv
3464.69 3637.5 3451.82 3631.65 3434.87 3618.21 cv
3417.03 3603.88 3402.71 3601.54 3390.72 3605.93 cv
3372.31 3612.36 3359.74 3634.87 3345.7 3638.67 cv
3339.27 3640.43 3331.67 3640.13 3323.49 3636.33 cv
3318.81 3634.29 3313.84 3631.07 3308.87 3626.39 cv
3294.25 3612.95 3284.9 3607.1 3275.54 3606.81 cv
3266.19 3606.51 3257.71 3612.36 3244.26 3622.59 cv
3231.69 3631.95 3220.88 3637.79 3209.18 3637.5 cv
3197.49 3637.5 3184.33 3631.65 3167.67 3618.21 cv
3159.48 3611.48 3152.18 3607.39 3145.16 3605.64 cv
3145.16 3605.64 li
cp
3141.36 3576.11 mo
3141.65 3578.74 3141.94 3581.37 3142.24 3584.3 cv
3148.96 3585.76 3156.56 3589.56 3165.04 3596.57 cv
3182.87 3610.61 3196.61 3616.75 3209.18 3617.04 cv
3222.04 3617.04 3233.74 3610.9 3247.19 3600.96 cv
3259.76 3591.31 3267.65 3586.05 3275.84 3586.05 cv
3283.73 3586.34 3292.21 3591.9 3305.95 3604.76 cv
3311.5 3609.73 3316.76 3613.24 3321.73 3615.28 cv
3331.09 3619.67 3339.56 3619.96 3346.87 3617.92 cv
3368.51 3612.07 3372.89 3591.9 3392.19 3584.88 cv
3403 3581.08 3415.87 3583.13 3432.53 3596.57 cv
3450.07 3610.61 3463.81 3616.75 3476.67 3617.04 cv
3489.24 3617.04 3500.94 3610.9 3514.38 3600.96 cv
3526.08 3592.19 3533.97 3586.64 3541.28 3586.34 cv
3541.86 3583.71 3542.16 3581.08 3542.45 3578.45 cv
3533.39 3578.45 3524.91 3584 3511.75 3593.94 cv
3498.89 3603.59 3488.07 3609.15 3476.38 3609.15 cv
3464.69 3609.15 3451.82 3603.3 3434.87 3589.85 cv
3417.03 3575.23 3402.71 3573.19 3390.72 3577.28 cv
3372.31 3584 3359.74 3606.51 3345.7 3610.31 cv
3339.27 3612.07 3331.67 3611.78 3323.49 3607.98 cv
3318.81 3605.93 3313.84 3602.71 3308.87 3598.04 cv
3294.25 3584.59 3284.9 3578.45 3275.54 3578.45 cv
3266.19 3578.16 3257.71 3584 3244.26 3593.94 cv
3231.69 3603.59 3220.88 3609.15 3209.18 3609.15 cv
3197.49 3609.15 3184.33 3603.3 3167.67 3589.85 cv
3158.02 3581.96 3149.25 3577.57 3141.36 3576.11 cv
3141.36 3576.11 li
cp
.310002 .776455 1 .310887 cmyk
ef
2367.41 3806.9 mo
2306.22 3598.26 2194.91 3329.41 2358.95 3156.9 cv
2385.32 3151.37 2440.32 3143.23 2495.66 3143.23 cv
2549.69 3142.91 2604.37 3151.04 2631.71 3156.9 cv
2795.75 3329.41 2684.44 3598.26 2622.92 3806.9 cv
2620.32 3815.68 2569.87 3823.17 2512.58 3826.1 cv
2503.14 3826.42 2489.47 3826.75 2481.01 3826.1 cv
2422.75 3823.17 2370.02 3815.68 2367.41 3806.9 cv
2367.41 3806.9 li
cp
.24506 .695979 1 .133181 cmyk
ef
2309.15 3311.83 mo
2292.88 3443.33 2309.48 3546.83 2337.14 3617.14 cv
2352.44 3655.87 2391.83 3786.72 2422.75 3784.76 cv
2451.72 3783.13 2529.51 3790.62 2538.95 3770.44 cv
2596.56 3648.06 2614.13 3492.15 2614.13 3394.83 cv
2614.13 3299.79 2589.72 3228.18 2546.11 3208.98 cv
2515.51 3208.33 2456.27 3210.28 2385.97 3199.54 cv
2356.02 3194.98 2312.41 3287.42 2309.15 3311.83 cv
2309.15 3311.83 li
cp
.203006 .606439 1 .057557 cmyk
ef
2348.86 3454.72 mo
2356.02 3321.6 2397.36 3278.31 2406.8 3264.31 cv
2410.7 3258.78 2417.21 3247.71 2419.17 3241.53 cv
2424.37 3227.53 2410.05 3216.14 2401.27 3216.14 cv
2384.99 3216.47 2358.95 3234.04 2346.91 3319.64 cv
2341.7 3356.75 2336.49 3384.74 2348.86 3454.72 cv
2348.86 3454.72 li
cp
.104463 .467597 .764004 .000732433 cmyk
ef
2494.35 3185.54 mo
2569.87 3185.54 2631.71 3174.15 2631.71 3160.16 cv
2631.71 3146.49 2569.87 3135.09 2494.35 3135.09 cv
2418.84 3135.09 2357.32 3146.49 2357.32 3160.16 cv
2357.32 3174.15 2418.84 3185.54 2494.35 3185.54 cv
2494.35 3185.54 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
2494.35 3173.18 mo
2556.52 3173.18 2607.3 3167.32 2607.3 3160.16 cv
2607.3 3153.32 2556.52 3147.46 2494.35 3147.46 cv
2432.51 3147.46 2381.74 3153.32 2381.74 3160.16 cv
2381.74 3167.32 2432.51 3173.18 2494.35 3173.18 cv
2494.35 3173.18 li
cp
.310002 .776455 1 .310887 cmyk
ef
2282.14 3492.15 mo
2281.49 3487.92 2280.84 3484.01 2280.18 3480.11 cv
2293.53 3476.85 2309.15 3476.85 2325.75 3482.39 cv
2335.19 3485.64 2345.28 3490.85 2355.37 3498.34 cv
2380.76 3517.21 2396.71 3525.35 2411.68 3525.03 cv
2426.65 3524.7 2441.63 3515.91 2465.06 3500.29 cv
2489.8 3483.69 2511.28 3473.6 2535.04 3472.95 cv
2558.8 3472.3 2584.51 3481.08 2617.06 3501.92 cv
2647.66 3521.44 2671.74 3524.05 2691.92 3517.21 cv
2696.48 3515.91 2700.71 3513.63 2704.94 3511.35 cv
2703.97 3516.24 2702.99 3521.12 2702.01 3526 cv
2699.73 3526.98 2697.13 3527.95 2694.85 3528.93 cv
2672.07 3536.42 2645.7 3533.81 2612.18 3512.66 cv
2581.26 3492.8 2557.17 3484.34 2535.36 3484.99 cv
2513.56 3485.64 2493.38 3495.08 2469.94 3510.7 cv
2445.21 3527.3 2428.93 3536.74 2411.68 3537.07 cv
2394.43 3537.39 2377.18 3528.61 2350.16 3508.75 cv
2340.73 3501.92 2331.61 3497.03 2322.82 3494.1 cv
2307.85 3488.9 2293.86 3488.9 2282.14 3492.15 cv
2282.14 3492.15 li
cp
2289.62 3532.84 mo
2288.97 3528.93 2288 3524.7 2287.35 3520.79 cv
2299.06 3519.17 2312.08 3520.14 2325.75 3524.7 cv
2335.19 3527.95 2345.28 3533.16 2355.37 3540.65 cv
2380.76 3559.2 2396.71 3567.66 2411.68 3567.34 cv
2426.65 3567.01 2441.63 3557.9 2465.06 3542.28 cv
2489.8 3526 2511.28 3515.91 2535.04 3515.26 cv
2558.8 3514.61 2584.51 3523.07 2617.06 3544.23 cv
2647.66 3563.76 2671.74 3566.04 2691.92 3559.53 cv
2692.9 3559.2 2694.2 3558.55 2695.18 3558.22 cv
2694.2 3562.78 2692.9 3567.34 2691.92 3571.89 cv
2670.12 3578.4 2644.08 3575.15 2612.18 3554.97 cv
2581.26 3534.79 2557.17 3526.65 2535.36 3527.3 cv
2513.56 3527.95 2493.38 3537.39 2469.94 3553.02 cv
2445.21 3569.62 2428.93 3579.06 2411.68 3579.38 cv
2394.43 3579.71 2377.18 3570.92 2350.16 3551.06 cv
2340.73 3543.9 2331.61 3539.35 2322.82 3536.42 cv
2310.78 3532.19 2299.71 3531.53 2289.62 3532.84 cv
2289.62 3532.84 li
cp
ef
2331.94 3197.26 mo
2332.26 3197.59 2327.38 3222.32 2317.29 3219.07 cv
2307.53 3215.81 2290.93 3208.33 2278.56 3210.61 cv
2274 3211.26 2267.17 3211.58 2265.21 3216.14 cv
2258.05 3234.04 2291.9 3236.32 2303.95 3236.65 cv
2326.4 3236.65 2327.38 3273.43 2308.18 3273.43 cv
2304.27 3273.43 2276.93 3271.15 2267.82 3266.92 cv
2256.1 3261.38 2243.73 3254.22 2237.55 3243.48 cv
2233.31 3235.34 2232.01 3218.09 2235.92 3209.96 cv
2238.52 3204.42 2241.45 3199.54 2245.68 3195.63 cv
2257.73 3185.87 2275.3 3183.59 2291.25 3185.54 cv
2303.95 3187.17 2327.71 3194.01 2331.94 3197.26 cv
2331.94 3197.26 li
cp
.24506 .695979 1 .133181 cmyk
ef
2280.51 3245.76 mo
2281.81 3245.11 2285.72 3240.88 2283.44 3239.58 cv
2279.86 3237.3 2269.77 3235.34 2264.56 3231.44 cv
2259.35 3227.53 2251.87 3222.32 2248.94 3215.49 cv
2246.99 3211.58 2248.61 3206.05 2251.22 3201.82 cv
2253.82 3198.24 2264.56 3193.36 2276.28 3191.73 cv
2289.62 3189.45 2301.99 3191.73 2300.04 3190.43 cv
2297.76 3188.47 2286.04 3185.87 2276.93 3186.52 cv
2265.86 3187.17 2262.61 3189.12 2253.5 3194.01 cv
2245.03 3198.24 2238.85 3206.38 2239.5 3213.21 cv
2239.82 3215.81 2240.15 3219.4 2241.78 3222.32 cv
2249.59 3235.67 2271.07 3250.64 2280.51 3245.76 cv
2280.51 3245.76 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
2661 3197.26 mo
2660.68 3197.59 2665.56 3222.32 2675.65 3219.07 cv
2685.41 3215.81 2702.01 3208.33 2714.38 3210.61 cv
2718.94 3211.26 2725.77 3211.58 2727.73 3216.14 cv
2734.89 3234.04 2701.04 3236.32 2688.99 3236.65 cv
2666.54 3236.65 2665.56 3273.43 2684.76 3273.43 cv
2688.67 3273.43 2716.01 3271.15 2725.12 3266.92 cv
2736.51 3261.38 2749.21 3254.22 2755.39 3243.48 cv
2759.62 3235.34 2760.93 3218.09 2757.02 3209.96 cv
2754.42 3204.42 2751.49 3199.54 2747.26 3195.63 cv
2735.21 3185.87 2717.64 3183.59 2701.69 3185.54 cv
2688.99 3187.17 2665.23 3194.01 2661 3197.26 cv
2661 3197.26 li
cp
.24506 .695979 1 .133181 cmyk
ef
2712.43 3245.76 mo
2711.13 3245.11 2707.22 3240.88 2709.5 3239.58 cv
2713.08 3237.3 2723.17 3235.34 2728.38 3231.44 cv
2733.59 3227.53 2741.07 3222.32 2744 3215.49 cv
2745.95 3211.58 2744.33 3206.05 2741.72 3201.82 cv
2739.12 3198.24 2728.38 3193.36 2716.66 3191.73 cv
2703.32 3189.45 2690.95 3191.73 2692.9 3190.43 cv
2695.18 3188.47 2706.9 3185.87 2716.01 3186.52 cv
2727.08 3187.17 2730.33 3189.12 2739.44 3194.01 cv
2747.91 3198.24 2754.09 3206.38 2753.44 3213.21 cv
2753.11 3215.81 2752.79 3219.4 2751.16 3222.32 cv
2743.02 3235.67 2721.87 3250.64 2712.43 3245.76 cv
2712.43 3245.76 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
1510.93 3803.34 mo
1564.24 3803.34 1614.15 3788.74 1657.61 3763.27 cv
1686.13 3712.34 1771.7 3595.54 1796.82 3504.55 cv
1805.31 3475.35 1811.08 3443.09 1801.58 3424.08 cv
1782.22 3394.88 1681.38 3387.75 1538.1 3380.96 cv
1427.07 3375.86 1303.82 3388.09 1250.17 3409.14 cv
1232.86 3415.93 1228.78 3415.25 1223.69 3422.72 cv
1214.52 3435.96 1215.88 3453.62 1218.6 3473.99 cv
1231.5 3563.96 1335.4 3707.59 1366.97 3763.61 cv
1409.75 3788.74 1458.65 3803.34 1510.93 3803.34 cv
1510.93 3803.34 li
cp
.24506 .695979 1 .133181 cmyk
ef
1377.16 3799.6 mo
1447.78 3830.16 1564.24 3840.34 1644.71 3799.6 cv
1664.06 3789.75 1665.08 3747.31 1644.71 3747.31 cv
1555.41 3747.31 1466.46 3747.31 1377.16 3747.31 cv
1356.79 3747.31 1357.46 3791.11 1377.16 3799.6 cv
1377.16 3799.6 li
cp
ef
1373.76 3779.23 mo
1411.79 3794.85 1465.78 3805.37 1518.74 3802.66 cv
1527.23 3802.32 1526.89 3790.77 1516.03 3791.11 cv
1464.76 3791.79 1409.41 3780.59 1374.44 3765.99 cv
1366.29 3762.59 1365.27 3775.49 1373.76 3779.23 cv
1373.76 3779.23 li
cp
.203006 .606439 1 .057557 cmyk
ef
1242.7 3460.75 mo
1261.72 3571.43 1315.7 3701.14 1406.36 3749.69 cv
1436.24 3765.65 1468.49 3746.97 1499.73 3732.37 cv
1598.53 3686.54 1636.9 3578.9 1636.9 3486.21 cv
1598.87 3490.29 1593.44 3492.66 1512.29 3492.66 cv
1431.14 3492.66 1289.9 3483.83 1242.7 3460.75 cv
1242.7 3460.75 li
cp
ef
1381.57 3702.83 mo
1319.44 3623.04 1313.67 3573.13 1303.48 3544.27 cv
1297.03 3524.58 1290.92 3493.34 1284.8 3491.3 cv
1277.67 3489.27 1270.88 3491.3 1269.86 3506.58 cv
1268.51 3534.42 1286.5 3575.17 1325.55 3639.34 cv
1342.19 3666.84 1360.52 3693.33 1381.57 3702.83 cv
1381.57 3702.83 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
1512.29 3482.82 mo
1672.21 3482.82 1802.93 3458.71 1802.93 3428.83 cv
1802.93 3398.95 1672.21 3374.5 1512.29 3374.5 cv
1352.03 3374.5 1221.65 3398.95 1221.65 3428.83 cv
1221.65 3458.71 1352.03 3482.82 1512.29 3482.82 cv
1512.29 3482.82 li
cp
ef
1512.29 3391.14 mo
1653.54 3391.14 1767.96 3408.12 1767.96 3428.83 cv
1767.96 3449.54 1653.54 3466.52 1512.29 3466.52 cv
1371.05 3466.52 1256.62 3449.54 1256.62 3428.83 cv
1256.62 3408.12 1371.05 3391.14 1512.29 3391.14 cv
1512.29 3391.14 li
cp
.310002 .776455 1 .310887 cmyk
ef
1745.89 3620.33 mo
1748.27 3615.91 1750.98 3611.5 1753.36 3607.09 cv
1746.91 3610.14 1740.8 3611.5 1734.01 3611.5 cv
1719.75 3611.5 1703.79 3603.69 1683.42 3586.03 cv
1661.35 3567.02 1643.69 3563.96 1629.09 3569.74 cv
1606.34 3578.22 1591.06 3607.76 1573.75 3612.86 cv
1565.94 3615.23 1556.77 3614.89 1546.59 3610.14 cv
1540.81 3607.09 1534.7 3603.01 1528.59 3596.9 cv
1510.59 3579.24 1499.05 3571.09 1487.85 3571.09 cv
1476.3 3570.75 1465.78 3578.22 1449.48 3591.47 cv
1434.2 3604.03 1420.62 3611.5 1406.36 3611.5 cv
1391.76 3611.5 1376.14 3603.69 1355.43 3586.03 cv
1333.7 3567.02 1316.04 3563.96 1301.1 3569.74 cv
1287.52 3574.83 1276.32 3587.39 1266.13 3600.97 cv
1267.83 3603.69 1269.19 3606.41 1270.54 3608.78 cv
1280.05 3595.88 1290.58 3584.34 1303.14 3579.58 cv
1316.38 3574.49 1332 3577.21 1352.37 3594.86 cv
1373.76 3613.54 1390.74 3621.68 1406.36 3621.68 cv
1422.32 3621.68 1436.58 3613.88 1452.87 3600.63 cv
1468.15 3588.07 1478 3580.94 1487.85 3581.28 cv
1497.69 3581.28 1508.22 3588.75 1525.19 3605.39 cv
1531.65 3612.18 1538.44 3616.59 1544.55 3619.65 cv
1555.75 3625.08 1566.28 3625.42 1575.11 3623.04 cv
1601.93 3615.23 1607.02 3588.75 1630.79 3579.58 cv
1644.03 3574.49 1659.99 3577.21 1680.02 3594.86 cv
1701.75 3613.54 1718.73 3621.68 1734.35 3621.68 cv
1738.42 3621.68 1742.16 3621.35 1745.89 3620.33 cv
1745.89 3620.33 li
cp
1724.5 3656.32 mo
1726.54 3653.26 1728.24 3650.21 1730.27 3646.81 cv
1716.69 3645.45 1702.09 3637.64 1683.42 3621.68 cv
1661.35 3602.67 1643.69 3599.62 1629.09 3605.39 cv
1606.34 3614.22 1591.06 3643.75 1573.75 3648.51 cv
1565.94 3650.88 1556.77 3650.55 1546.59 3645.79 cv
1540.81 3643.08 1534.7 3638.66 1528.59 3632.55 cv
1510.59 3614.89 1499.05 3606.75 1487.85 3606.75 cv
1476.3 3606.41 1465.78 3613.88 1449.48 3627.12 cv
1434.2 3639.68 1420.62 3647.15 1406.36 3647.15 cv
1391.76 3647.15 1376.14 3639.34 1355.43 3621.68 cv
1333.7 3602.67 1316.04 3599.62 1301.1 3605.39 cv
1292.61 3608.78 1285.14 3614.55 1278.35 3622.02 cv
1279.71 3624.74 1281.41 3627.12 1282.77 3629.83 cv
1288.88 3623.38 1295.67 3618.29 1303.14 3615.23 cv
1316.38 3610.48 1332 3613.2 1352.37 3630.51 cv
1373.76 3649.19 1390.74 3657.34 1406.36 3657.34 cv
1422.32 3657.68 1436.58 3649.53 1452.87 3636.29 cv
1468.15 3623.72 1478 3616.59 1487.85 3616.93 cv
1497.69 3616.93 1508.22 3624.74 1525.19 3641.38 cv
1531.65 3647.83 1538.44 3652.58 1544.55 3655.64 cv
1555.75 3661.07 1566.28 3661.41 1575.11 3658.69 cv
1601.93 3650.88 1607.02 3624.4 1630.79 3615.23 cv
1644.03 3610.48 1659.99 3613.2 1680.02 3630.51 cv
1697.34 3645.45 1711.6 3653.6 1724.5 3656.32 cv
1724.5 3656.32 li
cp
ef
1473.92 3465.84 mo
1503.46 3383.67 1529.27 3288.26 1555.41 3173.16 cv
1557.45 3163.99 1544.89 3150.07 1546.59 3141.24 cv
1550.32 3124.27 1667.8 3157.88 1663.39 3174.18 cv
1660.67 3182.67 1640.98 3187.76 1638.6 3195.91 cv
1611.1 3287.24 1590.05 3378.58 1574.43 3465.5 cv
1555.41 3465.84 1535.72 3466.18 1515.35 3466.18 cv
1501.43 3466.18 1487.51 3466.18 1473.92 3465.84 cv
1473.92 3465.84 li
cp
.24506 .695979 1 .133181 cmyk
ef
1550.32 3137.85 mo
1553.38 3136.83 1557.79 3134.79 1563.56 3135.13 cv
1587.33 3136.15 1623.32 3147.02 1647.77 3158.22 cv
1654.9 3161.62 1658.97 3166.37 1661.69 3169.43 cv
1655.58 3173.84 1633.85 3165.69 1604.65 3157.54 cv
1575.45 3149.39 1555.41 3144.98 1550.32 3137.85 cv
1550.32 3137.85 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
1592.76 3164.33 mo
1597.18 3165.35 1603.97 3169.43 1602.27 3176.22 cv
1522.48 3466.18 li
1515.35 3466.18 li
1509.24 3466.18 1503.12 3466.18 1497.01 3466.18 cv
1576.12 3168.07 li
1579.18 3156.86 1586.99 3163.31 1592.76 3164.33 cv
1592.76 3164.33 li
cp
.163119 .552666 .887388 .0211795 cmyk
ef
180.904 3344.71 mo
192.614 3346.62 203.606 3352.83 211.731 3360 cv
218.9 3365.98 224.635 3375.54 226.069 3407.8 cv
226.308 3417.59 224.396 3496.45 262.87 3553.33 cv
301.343 3610.2 311.858 3608.29 326.674 3614.26 cv
349.137 3623.58 340.295 3424.29 337.188 3422.61 cv
319.983 3414.25 290.829 3418.31 272.428 3381.03 cv
254.267 3343.52 248.054 3333.72 224.874 3327.74 cv
201.933 3321.77 204.084 3332.52 201.217 3334.43 cv
197.154 3337.3 182.099 3333.24 180.904 3344.71 cv
180.904 3344.71 li
cp
.203006 .606439 1 .057557 cmyk
ef
180.904 3344.71 mo
192.614 3346.62 203.606 3352.83 211.731 3360 cv
218.9 3365.98 224.635 3375.54 226.069 3407.8 cv
226.308 3417.59 224.396 3496.45 262.87 3553.33 cv
301.343 3610.2 311.858 3608.29 326.674 3614.26 cv
334.559 3617.61 310.902 3558.58 312.575 3527.04 cv
294.891 3523.22 261.675 3486.42 255.701 3466.34 cv
249.726 3446.03 241.841 3436.71 242.558 3402.06 cv
243.513 3367.41 226.308 3356.18 214.837 3348.29 cv
203.367 3340.65 202.889 3342.32 194.286 3342.08 cv
185.923 3341.84 184.489 3343.75 183.533 3339.21 cv
182.099 3340.41 181.143 3342.08 180.904 3344.71 cv
180.904 3344.71 li
cp
.24506 .695979 1 .133181 cmyk
ef
678.671 3384.86 mo
684.884 3379.12 696.832 3369.8 709.02 3361.92 cv
796.481 3315.32 854.072 3360.96 868.649 3430.02 cv
879.402 3482.12 867.454 3539.95 817.271 3590.37 cv
785.966 3621.91 758.007 3635.77 731.482 3640.55 cv
720.968 3601.36 li
738.651 3594.91 757.291 3587.5 776.886 3570.77 cv
804.845 3546.88 831.37 3509.36 833.282 3473.75 cv
835.91 3422.85 794.569 3349.25 725.986 3393.22 cv
716.188 3399.43 707.347 3405.89 703.523 3409.71 cv
678.671 3384.86 li
cp
ef
831.37 3489.05 mo
832.326 3471.36 831.131 3449.86 824.201 3430.98 cv
810.341 3392.74 779.275 3363.59 729.809 3391.55 cv
723.357 3395.61 717.383 3399.91 713.082 3403.26 cv
712.126 3394.18 li
770.195 3346.62 816.554 3380.79 831.131 3429.78 cv
836.627 3448.42 835.91 3469.69 831.37 3489.05 cv
831.37 3489.05 li
cp
.310002 .776455 1 .310887 cmyk
ef
543.655 3735.66 mo
677.715 3735.66 786.444 3642.7 786.444 3528.24 cv
786.444 3475.66 763.742 3427.87 725.986 3391.31 cv
708.78 3371.71 li
708.78 3371.71 688.229 3354.03 692.053 3336.59 cv
692.77 3332.52 695.159 3324.16 695.637 3319.38 cv
695.876 3315.79 696.115 3311.97 695.398 3309.82 cv
695.159 3307.91 694.203 3307.91 691.814 3306.48 cv
681.06 3300.98 655.969 3296.92 632.789 3293.57 cv
607.698 3289.75 576.632 3287.6 543.416 3287.6 cv
515.218 3287.6 488.932 3288.07 466.23 3290.94 cv
432.297 3295.01 403.86 3299.31 393.823 3307.43 cv
392.628 3307.91 392.15 3308.86 391.911 3309.82 cv
391.194 3311.73 391.672 3314.12 391.672 3317.23 cv
391.911 3322.96 394.301 3332.76 395.018 3336.59 cv
398.841 3354.03 378.29 3371.71 378.29 3371.71 cv
358.456 3394.18 li
322.611 3430.5 301.104 3477.1 301.104 3528.24 cv
301.104 3642.7 409.595 3735.66 543.655 3735.66 cv
543.655 3735.66 li
cp
.24506 .695979 1 .133181 cmyk
ef
690.38 3315.79 mo
681.299 3322.96 660.509 3328.46 633.028 3332.76 cv
607.937 3336.59 578.066 3338.26 544.611 3338.26 cv
514.262 3338.26 485.347 3337.3 461.69 3334.2 cv
443.767 3331.81 428.712 3328.7 417.003 3325.11 cv
385.937 3315.32 381.636 3306.95 415.33 3298.59 cv
443.528 3291.9 490.126 3287.36 542.938 3287.36 cv
610.565 3287.36 668.634 3294.29 689.902 3305.04 cv
693.487 3306.95 695.398 3308.15 695.398 3309.82 cv
695.398 3311.49 693.487 3313.64 690.38 3315.79 cv
690.38 3315.79 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
542.938 3326.31 mo
609.371 3326.31 663.616 3320.57 663.616 3313.41 cv
663.616 3306.48 609.371 3300.74 542.938 3300.74 cv
476.267 3300.74 422.26 3306.48 422.26 3313.41 cv
422.26 3320.57 476.267 3326.31 542.938 3326.31 cv
542.938 3326.31 li
cp
.310002 .776455 1 .310887 cmyk
ef
417.242 3733.03 mo
500.641 3756.93 584.996 3755.73 670.307 3733.03 cv
688.946 3728.01 689.424 3698.38 670.307 3698.38 cv
585.952 3698.38 501.597 3698.38 417.242 3698.38 cv
397.885 3698.38 398.363 3727.77 417.242 3733.03 cv
417.242 3733.03 li
cp
.24506 .695979 1 .133181 cmyk
ef
419.153 3718.45 mo
455.237 3728.97 506.376 3735.9 556.081 3734.22 cv
564.206 3733.75 563.967 3726.1 553.691 3726.34 cv
505.181 3727.06 453.087 3719.41 419.87 3709.85 cv
411.985 3707.46 411.268 3716.06 419.153 3718.45 cv
419.153 3718.45 li
cp
.203006 .606439 1 .057557 cmyk
ef
583.323 3376.01 mo
571.853 3364.07 488.932 3372.67 448.546 3363.11 cv
401.948 3351.88 356.783 3392.98 337.666 3457.74 cv
315.203 3534.21 321.895 3612.11 397.885 3667.08 cv
418.914 3682.13 438.988 3685.71 457.627 3687.63 cv
483.674 3690.26 508.049 3685.95 533.379 3676.16 cv
682.972 3619.28 666.483 3462.04 583.323 3376.01 cv
583.323 3376.01 li
cp
ef
341.728 3563.6 mo
363.474 3469.45 410.551 3430.26 424.411 3410.43 cv
428.473 3404.45 438.032 3395.37 441.138 3390.35 cv
448.307 3378.88 421.782 3372.43 411.506 3375.78 cv
392.39 3381.99 374.467 3397.28 351.765 3460.61 cv
341.968 3487.85 337.666 3536.84 341.728 3563.6 cv
341.728 3563.6 li
cp
.104463 .467597 .764004 .000732433 cmyk
ef
539.831 3267.05 mo
613.194 3267.05 673.174 3278.99 678.193 3296.68 cv
678.432 3297.39 678.432 3300.26 678.432 3300.98 cv
678.432 3319.62 616.3 3334.67 539.831 3334.67 cv
463.362 3334.67 401.231 3319.62 401.231 3300.98 cv
401.231 3300.02 401.231 3295.96 401.47 3295.01 cv
406.966 3277.56 466.947 3267.05 539.831 3267.05 cv
539.831 3267.05 li
cp
.310002 .776455 1 .310887 cmyk
ef
539.831 3251.51 mo
592.643 3251.51 638.524 3268.48 661.943 3278.76 cv
672.458 3283.3 678.432 3288.79 678.432 3294.29 cv
678.432 3295.01 678.432 3295.96 678.432 3296.68 cv
677.954 3298.83 672.935 3303.85 665.05 3307.43 cv
642.587 3317.95 594.555 3325.59 539.831 3325.35 cv
489.41 3324.88 444.962 3319.38 420.587 3310.06 cv
410.551 3306.24 404.577 3301.46 402.187 3296.92 cv
401.948 3296.44 401.231 3295.72 401.231 3294.29 cv
401.231 3288.55 407.444 3283.3 418.437 3278.52 cv
441.855 3268.24 487.498 3251.51 539.831 3251.51 cv
539.831 3251.51 li
cp
.24506 .695979 1 .133181 cmyk
ef
537.681 3251.27 mo
585.235 3251.27 633.267 3265.85 654.774 3276.13 cv
663.855 3280.67 669.59 3282.82 669.59 3286.64 cv
669.59 3298.59 608.893 3313.41 539.831 3313.41 cv
471.009 3313.41 407.205 3299.07 407.205 3286.88 cv
407.205 3283.06 423.694 3275.41 433.492 3272.3 cv
454.759 3265.61 490.365 3251.27 537.681 3251.27 cv
537.681 3251.27 li
cp
.163729 .496834 .793271 .0141909 cmyk
ef
508.049 3266.33 mo
502.792 3268.96 491.321 3274.21 475.788 3281.62 cv
458.822 3289.99 450.936 3295.96 447.352 3295.48 cv
442.333 3294.77 427.756 3292.14 427.517 3289.75 cv
427.279 3286.16 441.378 3282.34 452.131 3278.99 cv
472.682 3272.54 500.402 3266.09 508.049 3266.33 cv
508.049 3266.33 li
cp
.0729686 .275975 .419593 0 cmyk
ef
549.39 3253.43 mo
568.507 3253.43 581.889 3258.68 578.066 3264.18 cv
574.242 3269.67 565.64 3274.21 546.523 3274.21 cv
527.644 3274.21 515.696 3268.48 511.156 3263.22 cv
510.916 3262.98 509.483 3261.31 510.439 3259.88 cv
515.218 3254.14 543.177 3253.43 549.39 3253.43 cv
549.39 3253.43 li
cp
.24506 .695979 1 .133181 cmyk
ef
513.306 3261.31 mo
534.574 3233.83 516.413 3240.28 511.156 3229.29 cv
508.527 3223.79 511.634 3218.77 518.085 3215.43 cv
529.556 3209.46 551.302 3209.46 562.533 3216.39 cv
568.029 3219.73 570.658 3224.27 568.268 3229.29 cv
563.011 3240.28 544.85 3233.83 566.118 3261.31 cv
513.306 3261.31 li
cp
ef
558.949 3218.3 mo
562.294 3216.39 559.427 3214.23 553.691 3212.8 cv
549.151 3211.61 542.699 3210.89 536.247 3211.13 cv
534.335 3211.37 531.467 3211.61 529.317 3212.08 cv
523.343 3213.04 518.085 3214.95 516.891 3216.39 cv
512.111 3222.84 551.78 3222.12 558.949 3218.3 cv
558.949 3218.3 li
cp
.203006 .606439 1 .057557 cmyk
ef
513.306 3261.31 mo
517.608 3255.81 520.236 3251.51 521.909 3248.41 cv
523.343 3244.82 524.06 3242.19 522.626 3239.8 cv
522.626 3239.56 522.387 3239.56 522.387 3239.33 cv
526.927 3240.52 541.743 3243.15 558.232 3238.13 cv
554.647 3241.24 554.169 3246.02 566.118 3261.31 cv
562.772 3268 521.431 3269.2 513.306 3261.31 cv
513.306 3261.31 li
cp
.310002 .776455 1 .310887 cmyk
ef
188.551 3338.02 mo
184.489 3339.69 184.967 3340.89 192.853 3340.89 cv
200.977 3340.89 211.731 3338.97 211.014 3333.72 cv
210.058 3328.46 209.342 3327.03 205.04 3330.85 cv
200.977 3334.91 199.783 3337.06 195.242 3337.06 cv
190.463 3337.06 188.551 3338.02 188.551 3338.02 cv
188.551 3338.02 li
cp
ef
218.661 3341.36 mo
238.017 3346.86 254.028 3364.07 260.958 3375.54 cv
256.896 3358.09 250.922 3341.84 235.15 3334.43 cv
219.378 3327.27 213.404 3329.18 213.404 3329.18 cv
211.731 3333.72 207.669 3338.26 218.661 3341.36 cv
218.661 3341.36 li
cp
.0806592 .30753 .478737 0 cmyk
ef
752.033 3421.66 mo
750.599 3419.75 749.166 3417.83 747.732 3415.92 cv
741.758 3418.07 735.306 3422.14 727.181 3427.63 cv
714.516 3435.99 703.762 3441.01 692.053 3440.77 cv
680.344 3440.77 667.439 3435.76 650.712 3423.81 cv
632.789 3411.14 618.451 3409.23 606.503 3413.05 cv
588.103 3418.79 575.676 3438.38 561.338 3441.73 cv
555.125 3443.4 547.478 3443.16 539.354 3439.82 cv
534.574 3438.15 529.795 3435.28 524.776 3431.22 cv
510.2 3419.27 500.88 3414.01 491.56 3413.77 cv
482.241 3413.77 473.638 3418.79 460.256 3427.63 cv
447.83 3435.99 436.837 3441.01 425.128 3440.77 cv
413.419 3440.77 400.514 3435.76 383.787 3423.81 cv
367.298 3412.1 353.916 3409.71 342.446 3412.34 cv
340.056 3415.44 337.427 3418.79 335.037 3422.14 cv
337.188 3421.18 339.1 3420.22 341.25 3419.75 cv
352.004 3416.4 364.908 3418.07 381.158 3429.78 cv
398.841 3442.21 412.463 3447.7 425.367 3447.7 cv
438.271 3447.7 449.741 3442.45 463.123 3433.61 cv
475.55 3425.24 483.674 3420.46 491.56 3420.7 cv
499.685 3420.7 508.288 3425.72 521.909 3436.95 cv
527.405 3441.25 532.663 3444.36 537.681 3446.51 cv
547 3450.09 555.603 3450.33 562.772 3448.66 cv
584.279 3443.4 588.58 3425.72 607.937 3419.75 cv
618.69 3416.4 631.594 3418.07 648.083 3429.78 cv
665.527 3442.21 679.388 3447.7 692.053 3447.7 cv
704.957 3447.7 716.666 3442.45 729.809 3433.61 cv
739.129 3427.63 745.82 3423.33 752.033 3421.66 cv
752.033 3421.66 li
cp
766.849 3446.27 mo
765.415 3443.64 763.982 3440.77 762.309 3438.15 cv
761.114 3437.91 759.68 3437.67 758.246 3437.67 cv
749.166 3437.67 740.563 3442.69 727.181 3451.53 cv
714.516 3459.89 703.762 3464.91 692.053 3464.67 cv
680.344 3464.67 667.439 3459.41 650.712 3447.7 cv
632.789 3435.04 618.451 3433.13 606.503 3436.95 cv
588.103 3442.69 575.676 3462.28 561.338 3465.63 cv
555.125 3467.3 547.478 3467.06 539.354 3463.72 cv
534.574 3461.8 529.795 3458.94 524.776 3454.87 cv
510.2 3443.16 500.88 3437.91 491.56 3437.67 cv
482.241 3437.67 473.638 3442.69 460.256 3451.53 cv
447.83 3459.89 436.837 3464.91 425.128 3464.67 cv
413.419 3464.67 400.514 3459.41 383.787 3447.7 cv
366.103 3435.04 351.765 3433.13 339.578 3436.95 cv
331.931 3439.34 325.24 3444.12 319.027 3449.86 cv
316.637 3454.87 314.486 3459.89 312.336 3465.15 cv
312.575 3465.15 312.814 3465.15 313.053 3465.15 cv
321.178 3455.59 330.258 3446.99 341.25 3443.4 cv
352.004 3440.06 364.908 3441.97 381.158 3453.68 cv
398.841 3466.1 412.463 3471.6 425.367 3471.6 cv
438.271 3471.6 449.741 3466.34 463.123 3457.5 cv
475.55 3449.14 483.674 3444.36 491.56 3444.6 cv
499.685 3444.6 508.288 3449.62 521.909 3460.85 cv
527.405 3465.15 532.663 3468.26 537.681 3470.17 cv
547 3473.99 555.603 3474.23 562.772 3472.32 cv
584.279 3467.3 588.58 3449.62 607.937 3443.4 cv
618.69 3440.06 631.594 3441.97 648.083 3453.68 cv
665.527 3466.1 679.388 3471.6 692.053 3471.6 cv
704.957 3471.6 716.666 3466.34 729.809 3457.5 cv
742.475 3449.14 750.36 3444.36 758.485 3444.6 cv
761.114 3444.6 763.742 3445.08 766.849 3446.27 cv
766.849 3446.27 li
cp
776.408 3587.74 mo
777.125 3585.59 777.603 3583.44 778.32 3581.29 cv
770.673 3576.27 764.46 3573.88 758.246 3573.88 cv
749.166 3573.64 740.563 3578.9 727.181 3587.74 cv
714.516 3596.1 703.762 3601.12 692.053 3600.88 cv
680.344 3600.88 667.439 3595.62 650.712 3583.92 cv
632.789 3571.25 618.451 3569.34 606.503 3573.16 cv
588.103 3578.9 575.676 3598.49 561.338 3601.84 cv
555.125 3603.51 547.478 3603.27 539.354 3599.93 cv
534.574 3598.01 529.795 3595.15 524.776 3591.08 cv
510.2 3579.37 500.88 3574.12 491.56 3573.88 cv
482.241 3573.64 473.638 3578.9 460.256 3587.74 cv
447.83 3596.1 436.837 3601.12 425.128 3600.88 cv
413.419 3600.88 400.514 3595.62 383.787 3583.92 cv
366.103 3571.25 351.765 3569.34 339.578 3573.16 cv
329.063 3576.27 320.699 3583.92 312.814 3592.28 cv
313.531 3594.43 314.486 3596.58 315.442 3598.73 cv
323.089 3590.37 331.214 3582.72 341.25 3579.61 cv
352.004 3576.27 364.908 3578.18 381.158 3589.89 cv
398.841 3602.32 412.463 3607.81 425.367 3607.81 cv
438.271 3607.81 449.741 3602.55 463.123 3593.71 cv
475.55 3585.35 483.674 3580.57 491.56 3580.81 cv
499.685 3580.81 508.288 3585.83 521.909 3597.06 cv
527.405 3601.36 532.663 3604.47 537.681 3606.38 cv
547 3610.2 555.603 3610.44 562.772 3608.53 cv
584.279 3603.51 588.58 3585.83 607.937 3579.61 cv
618.69 3576.27 631.594 3578.18 648.083 3589.89 cv
665.527 3602.32 679.388 3607.81 692.053 3607.81 cv
704.957 3607.81 716.666 3602.55 729.809 3593.71 cv
742.475 3585.35 750.36 3580.57 758.485 3580.81 cv
763.742 3580.81 769.239 3582.96 776.408 3587.74 cv
776.408 3587.74 li
cp
768.283 3607.09 mo
769.239 3604.94 770.195 3603.03 771.151 3601.12 cv
766.61 3598.97 762.309 3597.77 758.246 3597.77 cv
749.166 3597.54 740.563 3602.55 727.181 3611.4 cv
714.516 3620 703.762 3624.78 692.053 3624.78 cv
680.344 3624.78 667.439 3619.52 650.712 3607.81 cv
632.789 3595.15 618.451 3593.23 606.503 3596.82 cv
588.103 3602.79 575.676 3622.39 561.338 3625.73 cv
555.125 3627.17 547.478 3627.17 539.354 3623.82 cv
534.574 3621.91 529.795 3619.04 524.776 3614.98 cv
510.2 3603.27 500.88 3597.77 491.56 3597.77 cv
482.241 3597.54 473.638 3602.55 460.256 3611.4 cv
447.83 3620 436.837 3624.78 425.128 3624.78 cv
413.419 3624.78 400.514 3619.52 383.787 3607.81 cv
366.103 3595.15 351.765 3593.23 339.578 3596.82 cv
332.409 3599.21 325.957 3603.51 319.983 3608.77 cv
320.938 3610.92 322.133 3612.83 323.089 3614.74 cv
328.585 3609.72 334.559 3605.66 341.25 3603.51 cv
352.004 3600.16 364.908 3602.08 381.158 3613.79 cv
398.841 3626.21 412.463 3631.47 425.367 3631.71 cv
438.271 3631.71 449.741 3626.45 463.123 3617.61 cv
475.55 3609.25 483.674 3604.47 491.56 3604.71 cv
499.685 3604.71 508.288 3609.72 521.909 3620.95 cv
527.405 3625.26 532.663 3628.36 537.681 3630.27 cv
547 3634.1 555.603 3634.1 562.772 3632.43 cv
584.279 3627.41 588.58 3609.48 607.937 3603.51 cv
618.69 3600.16 631.594 3602.08 648.083 3613.79 cv
665.527 3626.21 679.388 3631.47 692.053 3631.71 cv
704.957 3631.71 716.666 3626.45 729.809 3617.61 cv
742.475 3609.25 750.36 3604.47 758.485 3604.71 cv
761.592 3604.71 764.698 3605.42 768.283 3607.09 cv
768.283 3607.09 li
cp
.310002 .776455 1 .310887 cmyk
ef
3508.85 2307.99 mo
3521.55 2304.61 3543.97 2301.65 3566.82 2299.95 cv
3586.71 2299.11 3607.44 2299.11 3623.94 2300.8 cv
3665.41 2305.88 3692.06 2314.34 3714.91 2333.8 cv
3756.38 2368.5 3765.26 2419.27 3752.15 2478.09 cv
3744.53 2511.51 3730.57 2550.86 3700.95 2590.21 cv
3655.25 2651.57 3603.63 2686.26 3521.55 2698.11 cv
3560.05 2626.6 li
3640.44 2605.87 3684.03 2508.55 3688.68 2477.66 cv
3693.33 2445.51 3697.14 2397.69 3667.95 2375.27 cv
3652.71 2363.84 3631.98 2357.5 3610.4 2354.96 cv
3598.55 2353.27 3581.63 2353.69 3565.13 2354.54 cv
3546.51 2355.81 3529.59 2357.92 3521.12 2360.46 cv
3508.85 2307.99 li
cp
.24506 .695979 1 .133181 cmyk
ef
3625.63 2588.1 mo
3653.98 2557.63 3680.64 2515.75 3688.68 2477.66 cv
3695.45 2445.51 3697.14 2397.69 3667.95 2375.27 cv
3652.71 2363.84 3631.98 2357.5 3610.4 2354.96 cv
3598.55 2353.27 3581.63 2353.69 3565.13 2354.54 cv
3552.86 2355.38 3541.43 2356.65 3532.55 2357.92 cv
3537.2 2344.38 li
3559.2 2339.73 3587.55 2336.76 3610.83 2339.73 cv
3655.68 2346.07 3684.03 2360.46 3697.56 2388.39 cv
3708.57 2411.66 3709.84 2445.93 3700.53 2475.97 cv
3680.64 2542.4 3649.33 2566.94 3625.63 2588.1 cv
3625.63 2588.1 li
cp
.310002 .776455 1 .310887 cmyk
ef
3545.66 2833.93 mo
3626.9 2179.79 li
3506.31 2179.79 3325.64 2179.79 3205.05 2179.79 cv
3271.48 2832.24 li
3318.03 2838.16 3365.84 2841.55 3415.34 2841.55 cv
3459.77 2841.55 3503.35 2838.59 3545.66 2833.93 cv
3545.66 2833.93 li
cp
.24506 .695979 1 .133181 cmyk
ef
3283.75 2800.08 mo
3224.94 2192.9 li
3337.07 2205.6 3438.19 2210.25 3542.28 2202.64 cv
3527.89 2405.31 3505.47 2599.52 3491.08 2802.62 cv
3420.84 2811.08 3355.68 2811.51 3283.75 2800.08 cv
3283.75 2800.08 li
cp
.203006 .606439 1 .057557 cmyk
ef
3290.95 2786.54 mo
3242.29 2209.41 li
3240.17 2191.63 3241.44 2189.1 3260.9 2195.02 cv
3280.37 2200.52 3316.33 2198.83 3329.87 2200.94 cv
3342.57 2202.64 3355.68 2202.21 3364.15 2202.21 cv
3370.49 2201.79 3374.72 2203.91 3374.72 2211.94 cv
3365.84 2789.08 li
3365.41 2803.89 3348.91 2800.51 3324.8 2798.39 cv
3304.91 2796.7 3291.79 2795.85 3290.95 2786.54 cv
3290.95 2786.54 li
cp
.160281 .525414 .832486 .0158083 cmyk
ef
3328.6 2248.76 mo
3337.49 2363 3341.72 2464.97 3342.14 2568.64 cv
3342.57 2640.57 3341.3 2712.92 3337.91 2790.35 cv
3333.26 2795.43 li
3334.95 2768.35 3326.07 2672.72 3317.6 2569.06 cv
3305.33 2409.12 3294.33 2229.29 3328.6 2248.76 cv
3328.6 2248.76 li
cp
.0603952 .20502 .437812 0 cmyk
ef
3415.77 2207.71 mo
3531.7 2207.71 3626.48 2194.6 3626.48 2178.94 cv
3626.48 2163.29 3531.7 2150.17 3415.77 2150.17 cv
3299.83 2150.17 3205.05 2163.29 3205.05 2178.94 cv
3205.05 2194.6 3299.83 2207.71 3415.77 2207.71 cv
3415.77 2207.71 li
cp
.0781262 .423621 .702022 9.15541e-005 cmyk
ef
3415.77 2164.13 mo
3514.78 2164.13 3594.75 2170.9 3594.75 2178.94 cv
3594.75 2183.6 3570.63 2187.4 3532.55 2189.94 cv
3501.24 2192.48 3459.77 2195.44 3414.92 2195.02 cv
3373.03 2195.02 3334.95 2192.06 3304.49 2189.94 cv
3263.02 2187.4 3236.36 2183.17 3236.36 2178.94 cv
3236.36 2171.32 3316.76 2164.13 3415.77 2164.13 cv
3415.77 2164.13 li
cp
.310002 .776455 1 .310887 cmyk
ef
3593.9 2445.51 mo
3595.17 2434.51 li
3591.78 2433.66 3588.4 2432.39 3584.59 2430.7 cv
3576.98 2427.74 3569.36 2423.08 3560.9 2415.89 cv
3537.63 2396 3522.82 2387.12 3507.58 2386.69 cv
3492.77 2386.69 3478.81 2395.16 3457.66 2409.97 cv
3437.35 2424.35 3420 2432.81 3400.96 2432.39 cv
3381.92 2432.39 3361.18 2423.5 3334.53 2403.62 cv
3305.76 2382.04 3282.48 2379.08 3263.02 2385.42 cv
3249.9 2389.66 3238.9 2398.54 3228.32 2408.7 cv
3230.02 2422.24 li
3240.59 2410.81 3252.02 2401.08 3265.56 2396.43 cv
3282.91 2390.92 3303.64 2393.89 3330.3 2413.77 cv
3358.65 2434.93 3380.65 2443.81 3401.38 2444.24 cv
3421.69 2444.24 3440.31 2435.35 3461.89 2420.54 cv
3482.2 2406.16 3494.89 2398.12 3508.01 2398.12 cv
3520.7 2398.54 3534.66 2407 3556.67 2425.62 cv
3565.13 2433.24 3574.01 2438.31 3582.05 2441.7 cv
3585.86 2443.39 3590.09 2444.66 3593.9 2445.51 cv
3593.9 2445.51 li
cp
3588.4 2488.24 mo
3590.09 2476.82 li
3588.4 2475.97 3586.28 2475.55 3584.59 2474.7 cv
3576.98 2471.74 3569.36 2466.66 3560.9 2459.89 cv
3537.63 2439.58 3522.82 2430.7 3507.58 2430.7 cv
3492.77 2430.27 3478.81 2438.74 3457.66 2453.97 cv
3437.35 2467.93 3420 2476.4 3400.96 2476.4 cv
3381.92 2476.4 3361.18 2467.51 3334.53 2447.62 cv
3305.76 2426.04 3282.48 2422.66 3263.02 2429.01 cv
3251.6 2432.81 3241.86 2440.01 3232.55 2448.47 cv
3233.82 2462.01 li
3243.56 2452.28 3253.71 2444.24 3265.56 2440.43 cv
3282.91 2434.51 3303.64 2437.89 3330.3 2457.35 cv
3358.65 2478.51 3380.65 2487.82 3401.38 2487.82 cv
3421.69 2488.24 3440.31 2479.36 3461.89 2464.12 cv
3482.2 2450.16 3494.89 2442.12 3508.01 2442.12 cv
3520.7 2442.55 3534.66 2450.58 3556.67 2469.63 cv
3565.13 2477.24 3574.01 2482.32 3582.05 2485.7 cv
3584.17 2486.55 3586.28 2487.4 3588.4 2488.24 cv
3588.4 2488.24 li
cp
3583.75 2526.75 mo
3585.02 2515.32 li
3584.59 2514.9 li
3576.98 2511.94 3569.36 2507.28 3560.9 2500.09 cv
3537.63 2480.2 3522.82 2471.32 3507.58 2470.89 cv
3492.77 2470.89 3478.81 2479.36 3457.66 2494.17 cv
3437.35 2508.55 3420 2517.01 3400.96 2516.59 cv
3381.92 2516.59 3361.18 2507.71 3334.53 2487.82 cv
3305.76 2466.24 3282.48 2463.28 3263.02 2469.63 cv
3253.29 2472.59 3244.4 2478.51 3236.36 2485.7 cv
3237.63 2498.82 li
3246.1 2490.78 3255.4 2484.01 3265.56 2480.63 cv
3282.91 2475.13 3303.64 2478.09 3330.3 2497.97 cv
3358.65 2519.13 3380.65 2528.02 3401.38 2528.44 cv
3421.69 2528.44 3440.31 2519.55 3461.89 2504.74 cv
3482.2 2490.36 3494.89 2482.32 3508.01 2482.74 cv
3520.7 2482.74 3534.66 2491.2 3556.67 2510.24 cv
3565.13 2517.44 3574.01 2522.51 3582.05 2525.9 cv
3583.75 2526.75 li
cp
ef
2258.31 2388.06 mo
2258.58 2388.32 2253.36 2411.52 2242.16 2408.39 cv
2231.47 2405.26 2213.49 2398.23 2199.94 2400.31 cv
2194.73 2401.09 2187.17 2401.35 2185.35 2405.78 cv
2177.27 2422.2 2214.53 2424.55 2227.82 2424.55 cv
2252.06 2424.81 2253.36 2458.95 2232.25 2458.95 cv
2227.82 2458.95 2198.12 2456.86 2188.21 2452.95 cv
2175.44 2447.74 2161.63 2440.96 2155.12 2430.8 cv
2150.43 2423.5 2149.12 2407.61 2153.29 2399.79 cv
2156.16 2394.84 2159.03 2390.15 2163.98 2386.5 cv
2177.27 2377.38 2196.29 2375.29 2213.75 2377.12 cv
2227.56 2378.68 2253.62 2384.94 2258.31 2388.06 cv
2258.31 2388.06 li
cp
.24506 .695979 1 .133181 cmyk
ef
2202.02 2433.15 mo
2203.33 2432.36 2207.76 2428.72 2205.41 2427.41 cv
2201.5 2425.33 2190.3 2423.5 2184.56 2419.86 cv
2178.83 2416.21 2170.75 2411.26 2167.36 2405.26 cv
2165.54 2401.35 2167.1 2396.14 2170.23 2392.49 cv
2172.84 2388.84 2184.83 2384.41 2197.59 2382.85 cv
2212.19 2380.77 2225.48 2382.85 2223.39 2381.55 cv
2220.79 2379.98 2208.02 2377.64 2198.12 2378.16 cv
2185.87 2378.68 2182.22 2380.5 2172.32 2384.94 cv
2163.2 2389.1 2156.42 2396.66 2157.2 2402.92 cv
2157.46 2405.26 2157.98 2408.91 2159.81 2411.52 cv
2168.41 2424.03 2191.6 2437.84 2202.02 2433.15 cv
2202.02 2433.15 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
2734.43 2388.06 mo
2734.17 2388.32 2739.65 2411.52 2750.59 2408.39 cv
2761.28 2405.26 2779.26 2398.23 2792.81 2400.31 cv
2798.02 2401.09 2805.58 2401.35 2807.66 2405.78 cv
2815.48 2422.2 2778.22 2424.55 2764.92 2424.55 cv
2740.69 2424.81 2739.39 2458.95 2760.76 2458.95 cv
2764.92 2458.95 2794.63 2456.86 2804.54 2452.95 cv
2817.31 2447.74 2831.12 2440.96 2837.63 2430.8 cv
2842.58 2423.5 2843.89 2407.61 2839.46 2399.79 cv
2836.59 2394.84 2833.72 2390.15 2828.77 2386.5 cv
2815.74 2377.38 2796.72 2375.29 2779.26 2377.12 cv
2765.19 2378.68 2739.13 2384.94 2734.43 2388.06 cv
2734.43 2388.06 li
cp
.24506 .695979 1 .133181 cmyk
ef
2790.98 2433.15 mo
2789.42 2432.36 2785.25 2428.72 2787.6 2427.41 cv
2791.51 2425.33 2802.71 2423.5 2808.18 2419.86 cv
2813.92 2416.21 2822.26 2411.26 2825.38 2405.26 cv
2827.47 2401.35 2825.65 2396.14 2822.78 2392.49 cv
2819.91 2388.84 2808.18 2384.41 2795.42 2382.85 cv
2780.82 2380.77 2767.53 2382.85 2769.62 2381.55 cv
2771.96 2379.98 2784.73 2377.64 2794.63 2378.16 cv
2806.88 2378.68 2810.53 2380.5 2820.43 2384.94 cv
2829.55 2389.1 2836.59 2396.66 2835.55 2402.92 cv
2835.29 2405.26 2835.03 2408.91 2833.2 2411.52 cv
2824.6 2424.03 2801.41 2437.84 2790.98 2433.15 cv
2790.98 2433.15 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
2242.16 2328.91 mo
2751.11 2328.91 li
2763.36 2328.91 2774.05 2339.07 2773.52 2351.32 cv
2760.23 2709.38 li
2759.71 2721.63 2749.29 2727.11 2737.82 2731.8 cv
2609.61 2783.92 2399.56 2788.35 2255.45 2731.8 cv
2243.98 2727.11 2233.56 2721.63 2233.04 2709.38 cv
2219.75 2351.32 li
2219.22 2339.07 2229.91 2328.91 2242.16 2328.91 cv
2242.16 2328.91 li
cp
.24506 .695979 1 .133181 cmyk
ef
2497.03 2309.1 mo
2643.22 2309.1 2763.1 2323.95 2773 2346.11 cv
2773.26 2347.15 2773.52 2350.54 2773.52 2351.58 cv
2773.52 2375.03 2649.74 2394.06 2497.03 2394.06 cv
2344.31 2394.06 2220.53 2375.03 2220.53 2351.58 cv
2220.53 2350.54 2220.27 2345.32 2220.79 2344.28 cv
2231.73 2322.13 2351.35 2309.1 2497.03 2309.1 cv
2497.03 2309.1 li
cp
.310002 .776455 1 .310887 cmyk
ef
2497.03 2289.29 mo
2602.31 2289.29 2693.78 2310.66 2740.69 2323.69 cv
2761.54 2329.43 2773.52 2336.2 2773.52 2343.24 cv
2773.52 2344.02 2773.52 2345.32 2773.52 2346.11 cv
2772.74 2348.97 2762.58 2355.23 2746.94 2359.92 cv
2701.86 2372.95 2606.48 2382.59 2497.03 2382.07 cv
2396.17 2381.55 2307.57 2374.77 2258.84 2362.78 cv
2239.03 2358.09 2226.78 2352.1 2222.09 2346.63 cv
2221.57 2345.84 2220.53 2344.8 2220.53 2343.24 cv
2220.53 2335.94 2232.78 2329.17 2254.41 2323.43 cv
2301.31 2310.4 2392.26 2289.29 2497.03 2289.29 cv
2497.03 2289.29 li
cp
.24506 .695979 1 .133181 cmyk
ef
2254.93 2385.2 mo
2393.57 2411.26 2532.47 2407.87 2674.76 2407.35 cv
2684.66 2407.35 2695.34 2405.26 2695.34 2413.6 cv
2694.56 2721.63 li
2694.3 2741.96 2587.72 2750.82 2545.76 2754.73 cv
2435.78 2764.89 2315.13 2738.31 2269.52 2721.37 cv
2260.14 2717.72 2247.37 2710.69 2247.11 2702.09 cv
2236.42 2399.79 li
2236.16 2391.45 2245.02 2383.37 2254.93 2385.2 cv
2254.93 2385.2 li
cp
.203006 .606439 1 .057557 cmyk
ef
2270.82 2398.23 mo
2275.25 2397.97 2292.19 2400.57 2311.48 2402.14 cv
2336.5 2404.48 2364.38 2407.35 2364.64 2424.55 cv
2370.37 2723.46 li
2370.63 2731.28 2368.29 2738.05 2365.42 2737.27 cv
2307.05 2723.46 2313.82 2730.23 2280.99 2714.86 cv
2277.86 2713.29 2276.04 2708.08 2275.78 2700.26 cv
2265.87 2412.04 li
2265.61 2404.22 2267.96 2398.23 2270.82 2398.23 cv
2270.82 2398.23 li
cp
.169345 .514488 .818448 .0173342 cmyk
ef
2492.34 2289.03 mo
2587.45 2289.03 2683.36 2307.54 2726.36 2320.31 cv
2744.86 2325.78 2755.8 2328.65 2755.8 2333.34 cv
2755.8 2348.71 2634.62 2367.47 2497.03 2367.47 cv
2359.43 2367.47 2232.25 2348.97 2232.25 2333.86 cv
2232.25 2328.91 2265.35 2319.52 2284.64 2315.62 cv
2327.11 2307.02 2398.26 2289.03 2492.34 2289.03 cv
2492.34 2289.03 li
cp
.163729 .496834 .793271 .0141909 cmyk
ef
2433.7 2308.06 mo
2423.02 2311.18 2399.82 2317.7 2369.07 2327.34 cv
2335.19 2337.77 2319.56 2345.32 2312.26 2344.8 cv
2302.1 2343.76 2273.43 2340.63 2272.91 2337.51 cv
2272.39 2332.81 2300.53 2328.38 2322.16 2323.95 cv
2362.82 2315.88 2418.32 2307.54 2433.7 2308.06 cv
2433.7 2308.06 li
cp
.0729686 .275975 .419593 0 cmyk
ef
2516.05 2291.64 mo
2554.1 2291.64 2580.94 2298.42 2573.38 2305.45 cv
2565.82 2312.23 2548.36 2317.96 2510.58 2317.96 cv
2472.53 2317.96 2448.81 2310.92 2439.69 2303.89 cv
2439.17 2303.63 2436.57 2301.8 2438.39 2299.98 cv
2447.51 2292.68 2503.54 2291.64 2516.05 2291.64 cv
2516.05 2291.64 li
cp
.24506 .695979 1 .133181 cmyk
ef
2444.12 2299.72 mo
2486.34 2255.68 2450.12 2265.84 2439.43 2248.38 cv
2434.22 2239.78 2440.74 2231.7 2453.77 2226.23 cv
2476.44 2216.59 2519.96 2216.59 2542.37 2227.53 cv
2553.32 2233 2558.53 2240.3 2553.84 2248.38 cv
2543.15 2265.84 2506.93 2255.68 2549.15 2299.72 cv
2444.12 2299.72 li
cp
ef
2535.33 2230.66 mo
2541.59 2227.79 2535.86 2224.14 2524.39 2221.8 cv
2515.53 2219.97 2502.76 2218.93 2489.99 2219.45 cv
2485.82 2219.45 2480.35 2219.97 2475.92 2220.5 cv
2464.19 2222.32 2453.51 2225.19 2450.9 2227.79 cv
2441.52 2237.96 2520.74 2236.91 2535.33 2230.66 cv
2535.33 2230.66 li
cp
.203006 .606439 1 .057557 cmyk
ef
2444.12 2299.72 mo
2452.72 2290.86 2457.94 2284.08 2460.8 2279.13 cv
2464.19 2273.14 2465.23 2269.23 2462.63 2265.32 cv
2462.37 2265.06 2462.11 2264.8 2461.84 2264.28 cv
2471.23 2266.62 2500.67 2270.79 2533.77 2262.45 cv
2526.47 2267.4 2525.69 2275.22 2549.15 2299.72 cv
2542.89 2310.66 2460.28 2312.23 2444.12 2299.72 cv
2444.12 2299.72 li
cp
.310002 .776455 1 .310887 cmyk
ef
2298.45 2409.43 mo
2301.84 2474.32 2302.88 2532.7 2301.57 2591.85 cv
2300.53 2632.51 2298.45 2673.94 2295.32 2717.98 cv
2292.19 2715.38 li
2293.76 2700 2289.85 2651.01 2286.72 2591.85 cv
2281.77 2500.64 2278.12 2398.23 2298.45 2409.43 cv
2298.45 2409.43 li
cp
.0603952 .20502 .437812 0 cmyk
ef
2765.19 2573.87 mo
2764.92 2586.9 li
2748.77 2573.61 2731.05 2561.36 2709.94 2556.15 cv
2688.31 2550.94 2662.51 2553.28 2629.67 2569.18 cv
2594.23 2586.64 2566.61 2593.68 2541.07 2593.42 cv
2515.27 2593.16 2492.07 2585.08 2465.49 2572.05 cv
2440.21 2559.54 2424.06 2552.24 2407.9 2552.24 cv
2392 2551.98 2374.8 2559.02 2347.44 2574.39 cv
2336.5 2580.65 2325.81 2584.82 2315.65 2587.42 cv
2297.14 2592.37 2279.94 2592.37 2265.35 2589.77 cv
2251.02 2586.9 2239.03 2581.43 2231.21 2575.44 cv
2230.17 2574.39 2228.87 2573.61 2227.82 2572.57 cv
2227.56 2558.76 li
2230.95 2559.8 2236.69 2566.57 2237.99 2567.62 cv
2244.76 2572.83 2255.19 2577.78 2267.96 2580.13 cv
2280.73 2582.47 2295.84 2582.47 2312.26 2578.04 cv
2321.64 2575.7 2331.54 2571.79 2341.71 2566.05 cv
2370.9 2549.64 2389.66 2542.34 2408.16 2542.34 cv
2426.92 2542.6 2444.12 2550.16 2470.71 2563.19 cv
2495.98 2575.7 2517.87 2583.25 2541.33 2583.51 cv
2565.04 2584.04 2590.84 2577 2624.46 2560.58 cv
2660.16 2543.12 2688.83 2540.78 2713.07 2546.77 cv
2733.39 2551.72 2750.07 2562.14 2765.19 2573.87 cv
2765.19 2573.87 li
cp
2766.49 2540.78 mo
2765.97 2553.54 li
2749.55 2539.99 2731.57 2527.22 2709.94 2522.01 cv
2688.31 2516.8 2662.51 2518.88 2629.67 2535.04 cv
2594.23 2552.24 2566.61 2559.54 2541.07 2559.28 cv
2515.27 2558.76 2492.07 2550.94 2465.49 2537.65 cv
2440.21 2525.14 2424.06 2518.1 2407.9 2517.84 cv
2392 2517.84 2374.8 2524.62 2347.44 2540.25 cv
2336.5 2546.25 2325.81 2550.42 2315.65 2553.28 cv
2297.14 2558.24 2279.94 2558.24 2265.35 2555.37 cv
2251.02 2552.76 2239.03 2547.29 2231.21 2541.04 cv
2229.65 2539.73 2228.09 2538.43 2226.52 2536.87 cv
2226.26 2524.36 li
2229.39 2523.58 2236.42 2532.18 2237.99 2533.22 cv
2244.76 2538.69 2255.19 2543.38 2267.96 2545.73 cv
2280.73 2548.33 2295.84 2548.07 2312.26 2543.9 cv
2321.64 2541.3 2331.54 2537.39 2341.71 2531.65 cv
2370.9 2515.24 2389.66 2507.94 2408.16 2508.2 cv
2426.92 2508.2 2444.12 2515.76 2470.71 2529.05 cv
2495.98 2541.56 2517.87 2549.11 2541.33 2549.38 cv
2565.04 2549.64 2590.84 2542.86 2624.46 2526.44 cv
2660.16 2508.72 2688.83 2506.64 2713.07 2512.37 cv
2733.91 2517.58 2751.11 2528.27 2766.49 2540.78 cv
2766.49 2540.78 li
cp
.310002 .776455 1 .310887 cmyk
ef
1511.68 2689.23 mo
1702.6 2689.23 1857.22 2556.74 1857.22 2393.56 cv
1857.22 2382.64 1853.97 2337.78 1848.37 2328.64 cv
1825.94 2300.9 1709.09 2293.82 1542.96 2287.62 cv
1414.6 2282.6 1271.48 2294.11 1209.22 2314.47 cv
1189.15 2320.96 1184.43 2320.08 1178.53 2327.16 cv
1173.51 2333.36 1170.27 2343.39 1167.91 2360.51 cv
1166.73 2371.42 1165.84 2382.34 1165.84 2393.56 cv
1168.2 2552.01 1320.76 2689.23 1511.68 2689.23 cv
1511.68 2689.23 li
cp
.24506 .695979 1 .133181 cmyk
ef
1331.38 2685.39 mo
1450.3 2719.33 1570.4 2717.85 1691.68 2685.39 cv
1718.53 2678.31 1719.12 2635.82 1691.68 2635.82 cv
1571.58 2635.82 1451.48 2635.82 1331.38 2635.82 cv
1303.94 2635.82 1304.53 2677.72 1331.38 2685.39 cv
1331.38 2685.39 li
cp
ef
1334.04 2664.44 mo
1385.38 2679.49 1458.27 2689.52 1529.38 2686.87 cv
1540.89 2686.28 1540.3 2675.66 1525.84 2675.66 cv
1456.5 2676.54 1382.43 2665.92 1335.22 2652.05 cv
1324 2648.8 1322.82 2661.2 1334.04 2664.44 cv
1334.04 2664.44 li
cp
.203006 .606439 1 .057557 cmyk
ef
1200.66 2363.16 mo
1189.45 2450.8 1216.3 2528.11 1303.94 2591.26 cv
1333.74 2612.8 1362.37 2618.11 1388.92 2620.77 cv
1426.1 2624.31 1460.63 2618.11 1496.92 2604.24 cv
1611.42 2560.57 1657.74 2475.59 1657.45 2387.36 cv
1613.48 2391.49 1606.99 2393.56 1513.15 2393.56 cv
1419.02 2393.56 1255.25 2385.29 1200.66 2363.16 cv
1200.66 2363.16 li
cp
ef
1350.27 2603.06 mo
1278.27 2521.62 1271.48 2441.95 1260.27 2412.44 cv
1252.3 2392.38 1245.22 2388.83 1238.14 2387.06 cv
1229.87 2385 1222.2 2387.06 1221.32 2402.41 cv
1219.55 2430.74 1221.32 2466.15 1266.46 2531.65 cv
1285.94 2559.98 1326.07 2593.33 1350.27 2603.06 cv
1350.27 2603.06 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
1513.15 2384.41 mo
1698.47 2384.41 1849.84 2361.39 1849.84 2333.06 cv
1849.84 2304.74 1698.47 2281.42 1513.15 2281.42 cv
1327.55 2281.42 1176.17 2304.74 1176.17 2333.06 cv
1176.17 2361.39 1327.55 2384.41 1513.15 2384.41 cv
1513.15 2384.41 li
cp
ef
1513.15 2297.36 mo
1676.63 2297.36 1809.42 2313.29 1809.42 2333.06 cv
1809.42 2352.83 1676.63 2368.77 1513.15 2368.77 cv
1349.38 2368.77 1216.59 2352.83 1216.59 2333.06 cv
1216.59 2313.29 1349.38 2297.36 1513.15 2297.36 cv
1513.15 2297.36 li
cp
.310002 .776455 1 .310887 cmyk
ef
1848.37 2460.24 mo
1849.25 2457 1850.14 2453.75 1850.73 2450.51 cv
1830.66 2434.28 1817.68 2426.9 1804.7 2426.6 cv
1791.42 2426.6 1779.02 2433.69 1760.14 2446.38 cv
1742.14 2458.18 1726.79 2465.26 1709.97 2465.26 cv
1693.45 2465.26 1674.86 2457.88 1651.25 2441.06 cv
1625.88 2423.06 1605.51 2420.11 1588.1 2425.42 cv
1561.84 2433.69 1544.43 2461.72 1524.07 2466.74 cv
1515.22 2468.8 1504.3 2468.51 1492.5 2463.79 cv
1486.01 2461.13 1478.92 2457.29 1471.84 2451.39 cv
1451.19 2434.57 1437.91 2426.9 1424.63 2426.6 cv
1411.35 2426.6 1398.96 2433.69 1380.07 2446.38 cv
1362.37 2458.18 1346.73 2465.26 1330.2 2465.26 cv
1313.38 2465.26 1295.09 2457.88 1271.18 2441.06 cv
1245.81 2423.06 1225.45 2420.11 1208.04 2425.42 cv
1194.76 2429.85 1183.25 2439 1173.22 2449.62 cv
1173.81 2452.87 1174.69 2456.41 1175.87 2459.65 cv
1185.91 2448.74 1197.12 2439 1210.4 2435.16 cv
1225.74 2430.15 1244.04 2432.8 1267.35 2449.33 cv
1292.43 2467.33 1312.2 2475 1330.2 2475 cv
1348.5 2475 1365.02 2467.62 1383.91 2454.93 cv
1401.91 2443.13 1413.42 2436.34 1424.63 2436.64 cv
1436.14 2436.64 1448.23 2443.72 1467.71 2459.65 cv
1475.38 2465.85 1483.05 2470.28 1490.43 2473.23 cv
1503.42 2478.24 1515.51 2478.54 1525.84 2476.18 cv
1556.53 2468.8 1563.02 2443.72 1590.47 2435.16 cv
1605.81 2430.15 1624.1 2432.8 1647.42 2449.33 cv
1672.5 2467.33 1691.97 2475 1710.27 2475 cv
1728.56 2475 1745.09 2467.62 1763.97 2454.93 cv
1781.97 2443.13 1793.48 2436.34 1804.7 2436.64 cv
1816.2 2436.64 1828.3 2443.72 1847.78 2459.65 cv
1848.37 2460.24 li
cp
1839.52 2487.1 mo
1840.7 2484.15 1841.88 2481.2 1842.76 2478.24 cv
1827.12 2466.44 1815.91 2460.83 1804.7 2460.83 cv
1791.42 2460.54 1779.02 2467.62 1760.14 2480.31 cv
1742.14 2492.11 1726.79 2499.49 1709.97 2499.2 cv
1693.45 2499.2 1674.86 2491.82 1651.25 2475 cv
1625.88 2457 1605.51 2454.05 1588.1 2459.65 cv
1561.84 2467.62 1544.43 2495.95 1524.07 2500.67 cv
1515.22 2502.74 1504.3 2502.44 1492.5 2497.72 cv
1486.01 2495.36 1478.92 2491.23 1471.84 2485.33 cv
1451.19 2468.51 1437.91 2460.83 1424.63 2460.83 cv
1411.35 2460.54 1398.96 2467.62 1380.07 2480.31 cv
1362.37 2492.11 1346.73 2499.49 1330.2 2499.2 cv
1313.38 2499.2 1295.09 2491.82 1271.18 2475 cv
1245.81 2457 1225.45 2454.05 1208.04 2459.65 cv
1198 2462.6 1189.15 2468.8 1180.89 2475.88 cv
1182.07 2479.13 1183.25 2482.08 1184.43 2485.03 cv
1192.4 2477.95 1200.96 2472.05 1210.4 2469.1 cv
1225.74 2464.08 1244.04 2466.74 1267.35 2483.56 cv
1292.43 2501.26 1312.2 2508.93 1330.2 2508.93 cv
1348.5 2509.23 1365.02 2501.56 1383.91 2489.16 cv
1401.91 2477.06 1413.42 2470.28 1424.63 2470.57 cv
1436.14 2470.57 1448.23 2477.65 1467.71 2493.59 cv
1475.38 2499.79 1483.05 2504.21 1490.43 2507.16 cv
1503.42 2512.47 1515.51 2512.77 1525.84 2510.11 cv
1556.53 2503.03 1563.02 2477.65 1590.47 2469.1 cv
1605.81 2464.08 1624.1 2466.74 1647.42 2483.56 cv
1672.5 2501.26 1691.97 2508.93 1710.27 2508.93 cv
1728.56 2509.23 1745.09 2501.56 1763.97 2489.16 cv
1781.97 2477.06 1793.48 2470.28 1804.7 2470.57 cv
1814.43 2470.57 1824.76 2475.88 1839.52 2487.1 cv
1839.52 2487.1 li
cp
ef
572.705 2263.87 mo
581.613 2259.27 598.507 2253.43 616.016 2249.13 cv
631.375 2245.75 647.655 2242.99 661.17 2242.99 cv
685.744 2242.68 711.853 2247.59 733.662 2261.11 cv
774.823 2286.6 790.489 2338.82 794.482 2384.59 cv
801.547 2463.23 780.967 2568.89 711.546 2588.25 cv
703.56 2591.01 695.266 2591.93 686.358 2590.7 cv
692.502 2548.93 li
694.345 2549.23 696.188 2549.23 697.724 2548.62 cv
748.406 2534.18 760.694 2452.78 754.857 2391.66 cv
751.786 2360.33 740.42 2314.86 711.546 2297.05 cv
697.109 2288.14 678.986 2284.76 661.477 2284.76 cv
651.648 2285.07 638.44 2287.22 625.538 2290.29 cv
611.409 2293.67 598.507 2297.66 592.364 2301.04 cv
572.705 2263.87 li
cp
.24506 .695979 1 .133181 cmyk
ef
740.727 2506.23 mo
755.164 2473.67 758.543 2428.82 754.857 2391.66 cv
751.786 2360.33 740.42 2314.86 711.546 2297.05 cv
697.109 2288.14 678.986 2284.76 661.477 2284.76 cv
651.648 2285.07 638.44 2287.22 625.538 2290.29 cv
616.323 2292.44 607.415 2294.9 600.965 2297.35 cv
600.965 2283.84 li
617.245 2276.77 649.498 2275.24 668.542 2275.24 cv
736.12 2276.16 750.557 2323.16 761.308 2381.21 cv
771.751 2439.27 753.936 2483.19 740.727 2506.23 cv
740.727 2506.23 li
cp
.310002 .776455 1 .310887 cmyk
ef
725.676 2263.26 mo
710.932 2254.04 681.75 2251.59 664.242 2251.59 cv
658.099 2251.89 627.689 2253.43 609.566 2259.27 cv
603.729 2261.42 603.115 2249.13 633.218 2245.75 cv
658.099 2242.99 673.15 2240.84 698.645 2246.06 cv
713.389 2249.13 727.519 2254.66 739.806 2265.1 cv
749.021 2272.78 757.929 2280.77 764.994 2291.21 cv
782.503 2316.71 791.411 2350.19 793.561 2377.53 cv
787.725 2355.1 783.117 2297.66 725.676 2263.26 cv
725.676 2263.26 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
361.986 2826 mo
451.065 2847.19 541.374 2846.27 632.603 2826 cv
652.569 2821.39 653.184 2794.66 632.603 2794.66 cv
542.295 2794.66 452.294 2794.66 361.986 2794.66 cv
341.405 2794.66 342.02 2821.08 361.986 2826 cv
361.986 2826 li
cp
.24506 .695979 1 .133181 cmyk
ef
337.719 2161.89 mo
336.183 2167.42 339.869 2176.64 345.091 2182.47 cv
384.102 2224.86 393.624 2258.96 393.624 2333.6 cv
205.022 2437.73 231.745 2666.88 355.535 2797.12 cv
450.451 2818.01 548.439 2816.78 639.975 2797.12 cv
744.414 2670.57 782.81 2442.65 602.501 2335.44 cv
602.501 2335.44 600.658 2267.56 612.33 2210.43 cv
613.559 2204.59 614.48 2198.75 615.094 2193.84 cv
615.709 2187.7 619.088 2186.77 616.323 2180.32 cv
614.48 2176.02 600.043 2170.19 573.319 2165.27 cv
510.042 2153.91 394.546 2146.53 355.842 2153.6 cv
351.542 2154.52 338.948 2157.9 337.719 2161.89 cv
337.719 2161.89 li
cp
ef
368.129 2194.76 mo
409.597 2241.76 400.996 2334.52 400.996 2334.52 cv
425.877 2339.74 495.912 2363.09 553.353 2330.84 cv
565.947 2212.27 li
540.452 2214.73 505.435 2213.8 478.711 2211.96 cv
428.949 2208.58 389.938 2202.75 368.129 2194.76 cv
368.129 2194.76 li
cp
.203006 .606439 1 .057557 cmyk
ef
320.518 2418.38 mo
303.931 2448.48 283.35 2515.75 283.043 2552.92 cv
283.043 2575.96 286.422 2603.6 288.572 2618.04 cv
305.774 2732 404.068 2806.34 526.015 2776.23 cv
672.843 2740.3 688.816 2323.77 544.138 2363.4 cv
524.479 2368.93 452.294 2380.29 404.068 2355.1 cv
382.566 2343.74 331.883 2397.49 320.518 2418.38 cv
320.518 2418.38 li
cp
ef
321.132 2511.45 mo
339.869 2431.28 382.873 2404.86 393.01 2396.26 cv
397.003 2392.89 404.068 2386.13 406.525 2382.44 cv
412.669 2373.84 400.075 2367.39 391.782 2367.7 cv
376.423 2368 350.313 2379.06 331.269 2430.67 cv
322.975 2452.78 315.603 2469.68 321.132 2511.45 cv
321.132 2511.45 li
cp
.104463 .467597 .764004 .000732433 cmyk
ef
400.075 2209.81 mo
416.048 2240.22 416.97 2296.43 416.662 2336.98 cv
424.956 2338.82 li
423.727 2294.59 426.492 2239.3 417.277 2214.42 cv
413.283 2211.96 405.911 2211.35 400.075 2209.81 cv
400.075 2209.81 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
351.849 2153.6 mo
399.768 2145.31 518.95 2152.68 592.057 2168.96 cv
624.924 2176.33 625.538 2189.54 595.743 2195.68 cv
574.548 2199.98 541.988 2201.52 499.291 2198.14 cv
470.11 2195.99 422.806 2193.53 389.017 2186.77 cv
360.143 2181.24 342.634 2171.72 338.948 2165.89 cv
334.648 2159.44 341.712 2155.44 351.849 2153.6 cv
351.849 2153.6 li
cp
.0781262 .423621 .702022 9.15541e-005 cmyk
ef
507.585 2166.81 mo
569.633 2174.18 597.586 2177.56 597.279 2182.47 cv
596.972 2187.39 557.346 2192 507.278 2187.7 cv
481.168 2185.54 431.714 2182.17 403.761 2178.17 cv
377.959 2174.79 348.163 2165.27 356.456 2161.28 cv
358.299 2160.66 372.43 2161.28 392.703 2160.97 cv
424.034 2160.97 469.495 2162.2 507.585 2166.81 cv
507.585 2166.81 li
cp
.310002 .776455 1 .310887 cmyk
ef
364.75 2814.94 mo
399.461 2822.62 428.027 2828.45 472.26 2829.99 cv
496.834 2830.91 531.544 2832.14 562.568 2826.92 cv
574.548 2825.07 574.241 2815.55 558.575 2817.4 cv
499.905 2825.07 422.498 2821.7 364.75 2805.11 cv
352.771 2801.42 352.771 2812.48 364.75 2814.94 cv
364.75 2814.94 li
cp
.203006 .606439 1 .057557 cmyk
ef
260.312 2520.05 mo
259.391 2525.89 258.776 2531.73 258.469 2537.56 cv
272.599 2521.9 287.958 2507.15 306.695 2501.01 cv
325.432 2494.87 348.163 2497.02 377.037 2515.45 cv
408.061 2535.41 432.021 2543.4 454.444 2542.78 cv
477.175 2542.17 497.448 2532.65 520.793 2516.98 cv
542.909 2502.55 557.039 2493.94 571.169 2493.64 cv
584.992 2493.33 600.043 2501.32 624.31 2518.83 cv
633.832 2525.89 643.047 2530.81 651.955 2533.88 cv
668.235 2539.41 683.286 2539.1 695.881 2536.03 cv
708.474 2532.65 718.611 2526.5 725.369 2519.44 cv
724.755 2514.83 724.14 2510.22 723.219 2505.62 cv
721.683 2507.77 720.454 2509.3 719.84 2509.92 cv
714.004 2516.06 704.788 2521.9 693.73 2524.66 cv
682.672 2527.73 669.156 2527.73 654.719 2522.82 cv
646.733 2520.05 637.825 2515.75 629.225 2509 cv
603.422 2490.26 587.142 2481.96 570.862 2482.27 cv
554.582 2482.58 539.531 2491.49 516.185 2507.15 cv
494.069 2521.9 475.025 2530.81 454.444 2531.42 cv
433.557 2532.03 411.133 2524.35 381.645 2505.31 cv
350.313 2485.34 325.125 2483.19 303.931 2489.95 cv
287.036 2495.48 273.213 2506.85 260.312 2520.05 cv
260.312 2520.05 li
cp
257.548 2562.75 mo
271.063 2548.62 285.807 2536.03 303.931 2529.88 cv
325.125 2522.82 350.313 2525.28 381.645 2545.24 cv
411.133 2563.98 433.557 2571.97 454.444 2571.35 cv
475.025 2570.74 494.069 2561.83 516.185 2547.08 cv
539.531 2531.42 554.582 2522.51 570.862 2522.2 cv
587.142 2521.9 603.422 2530.19 629.225 2548.93 cv
637.825 2555.38 646.733 2559.99 654.719 2562.75 cv
669.156 2567.67 682.672 2567.67 693.73 2564.59 cv
704.788 2561.83 714.004 2555.99 719.84 2549.85 cv
720.761 2548.93 724.447 2543.4 727.519 2540.63 cv
727.826 2545.86 727.826 2551.08 727.826 2556.3 cv
727.212 2557.22 726.598 2558.14 725.983 2558.76 cv
718.918 2565.82 708.474 2572.58 695.881 2575.65 cv
683.286 2579.03 668.235 2579.34 651.955 2573.81 cv
643.047 2570.74 633.832 2565.82 624.31 2558.76 cv
600.043 2540.94 584.992 2533.26 571.169 2533.57 cv
557.039 2533.88 542.909 2542.17 520.793 2556.91 cv
497.448 2572.58 477.175 2582.1 454.444 2582.72 cv
432.021 2583.33 408.061 2575.04 377.037 2555.38 cv
348.163 2536.95 325.432 2534.49 306.695 2540.94 cv
287.958 2547.08 272.292 2561.83 257.855 2577.8 cv
257.548 2572.89 257.548 2567.97 257.548 2562.75 cv
257.548 2562.75 li
cp
.310002 .776455 1 .310887 cmyk
ef
3348.85 1840.86 mo
3439.41 1862.33 3530.91 1861.4 3623.02 1840.86 cv
3643.56 1836.5 3643.87 1809.42 3623.02 1809.42 cv
3531.84 1809.42 3440.35 1809.42 3348.85 1809.42 cv
3328 1809.42 3328.62 1836.19 3348.85 1840.86 cv
3348.85 1840.86 li
cp
.24506 .695979 1 .133181 cmyk
ef
3350.41 1190.13 mo
3350.1 1192 3380.91 1313.05 3380.91 1342.31 cv
3189.83 1447.81 3217.21 1679.96 3342.32 1811.91 cv
3438.48 1832.76 3538.06 1831.52 3630.49 1811.91 cv
3736.3 1683.39 3775.51 1452.79 3592.52 1343.86 cv
3592.21 1323.64 3612.13 1187.95 3612.13 1187.64 cv
3599.37 1158.39 3356.01 1171.15 3350.41 1190.13 cv
3350.41 1190.13 li
cp
ef
3371.57 1212.22 mo
3387.44 1251.12 3395.53 1340.13 3404.87 1344.17 cv
3424.78 1352.58 3501.03 1370.94 3559.22 1340.44 cv
3571.98 1217.83 li
3498.23 1227.78 3405.49 1223.43 3371.57 1212.22 cv
3371.57 1212.22 li
cp
.203006 .606439 1 .057557 cmyk
ef
3307.15 1427.89 mo
3290.03 1458.7 3269.18 1526.85 3269.18 1564.51 cv
3269.18 1587.85 3272.61 1615.54 3274.78 1630.48 cv
3291.9 1745.94 3391.8 1821.25 3515.03 1790.75 cv
3663.79 1754.34 3679.97 1332.35 3533.4 1372.49 cv
3513.79 1377.78 3440.35 1389.61 3391.8 1364.09 cv
3369.7 1352.58 3318.66 1406.73 3307.15 1427.89 cv
3307.15 1427.89 li
cp
ef
3307.46 1534.94 mo
3323.02 1453.72 3365.03 1426.95 3374.99 1418.24 cv
3378.73 1414.82 3385.88 1407.97 3388.37 1404.24 cv
3393.98 1395.52 3380.91 1388.99 3372.5 1388.99 cv
3356.94 1389.61 3331.11 1400.81 3314.31 1453.1 cv
3306.84 1475.5 3299.99 1492.62 3307.46 1534.94 cv
3307.46 1534.94 li
cp
.104463 .467597 .764004 .000732433 cmyk
ef
3391.8 1217.2 mo
3403.31 1248.64 3406.11 1305.59 3414.83 1346.04 cv
3423.23 1347.91 li
3420.12 1302.78 3419.81 1246.77 3409.22 1221.56 cv
3404.87 1219.07 3397.4 1218.76 3391.8 1217.2 cv
3391.8 1217.2 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
3351.65 1829.96 mo
3386.82 1837.43 3416.07 1843.66 3460.57 1845.21 cv
3485.78 1845.84 3520.95 1847.39 3552.07 1842.1 cv
3564.52 1840.23 3563.89 1830.28 3548.33 1832.45 cv
3488.89 1840.23 3410.47 1836.81 3351.65 1819.69 cv
3339.51 1816.27 3339.51 1827.16 3351.65 1829.96 cv
3351.65 1829.96 li
cp
.203006 .606439 1 .057557 cmyk
ef
3717.32 1531.21 mo
3717.94 1537.12 3718.56 1542.72 3718.87 1548.64 cv
3704.56 1532.76 3689 1518.14 3670.01 1511.91 cv
3651.03 1505.69 3628 1507.87 3598.75 1526.54 cv
3567.32 1546.46 3543.04 1554.86 3520.32 1554.24 cv
3497.3 1553.61 3476.76 1543.97 3453.1 1528.1 cv
3430.7 1513.16 3416.38 1504.76 3402.07 1504.44 cv
3388.06 1504.13 3372.81 1511.91 3348.23 1529.96 cv
3338.89 1537.12 3329.25 1542.1 3320.22 1545.21 cv
3303.73 1550.81 3288.48 1550.5 3275.72 1547.08 cv
3263.27 1543.97 3253 1537.43 3246.15 1530.27 cv
3246.78 1525.61 3247.71 1521.25 3248.64 1516.58 cv
3250.2 1518.76 3251.44 1520.63 3251.76 1520.94 cv
3257.98 1527.47 3266.69 1533.08 3277.9 1535.88 cv
3289.41 1538.99 3302.79 1538.99 3317.42 1534.01 cv
3325.82 1531.21 3334.54 1526.54 3343.25 1520 cv
3369.39 1501.02 3385.88 1492.62 3402.38 1492.93 cv
3418.87 1493.24 3434.12 1502.27 3457.77 1518.14 cv
3480.18 1533.08 3499.47 1542.1 3520.64 1542.72 cv
3541.49 1543.34 3564.52 1535.25 3594.08 1516.27 cv
3625.82 1496.04 3651.34 1493.55 3672.81 1500.71 cv
3689.93 1506.31 3704.25 1518.14 3717.32 1531.21 cv
3717.32 1531.21 li
cp
3719.81 1574.47 mo
3706.11 1559.84 3691.18 1547.08 3672.81 1541.17 cv
3651.34 1534.01 3625.82 1536.5 3594.08 1556.73 cv
3564.52 1575.71 3541.49 1583.49 3520.64 1582.87 cv
3499.47 1582.25 3480.18 1573.22 3457.77 1558.28 cv
3434.12 1542.41 3418.87 1533.39 3402.38 1533.08 cv
3385.88 1532.76 3369.39 1541.17 3343.25 1560.46 cv
3334.54 1567 3325.82 1571.35 3317.42 1574.47 cv
3302.79 1579.44 3289.41 1579.13 3277.9 1576.33 cv
3266.69 1573.22 3257.36 1567.62 3251.44 1561.39 cv
3250.51 1560.15 3246.78 1554.55 3243.66 1552.06 cv
3243.35 1557.35 3243.35 1562.64 3243.35 1567.93 cv
3243.98 1568.86 3244.6 1569.49 3245.53 1570.42 cv
3252.38 1577.58 3262.96 1584.11 3275.72 1587.54 cv
3288.48 1590.96 3303.73 1590.96 3320.22 1585.36 cv
3329.25 1582.25 3338.89 1577.58 3348.23 1570.42 cv
3372.81 1552.37 3388.06 1544.59 3402.07 1544.59 cv
3416.38 1544.9 3430.7 1553.61 3453.1 1568.55 cv
3476.76 1584.42 3497.3 1593.76 3520.32 1594.69 cv
3543.04 1595.32 3567.32 1586.91 3598.75 1567 cv
3628 1548.32 3651.03 1545.83 3670.01 1552.37 cv
3689.31 1558.59 3704.87 1573.53 3719.18 1589.4 cv
3719.49 1584.42 3719.81 1579.44 3719.81 1574.47 cv
3719.81 1574.47 li
cp
.310002 .776455 1 .310887 cmyk
ef
3716.69 1614.92 mo
3716.07 1619.28 3715.76 1623.01 3714.83 1627.99 cv
3709.85 1622.7 3709.54 1622.39 3704.25 1617.72 cv
3693.98 1608.08 3682.77 1599.98 3670.01 1595.94 cv
3651.03 1589.4 3628 1591.89 3598.75 1610.57 cv
3567.32 1630.48 3543.04 1638.88 3520.32 1638.26 cv
3497.3 1637.64 3476.76 1627.99 3453.1 1612.12 cv
3430.7 1597.18 3416.38 1588.78 3402.07 1588.47 cv
3388.06 1588.16 3372.81 1595.94 3348.23 1613.99 cv
3338.89 1621.15 3329.25 1626.13 3320.22 1629.24 cv
3303.73 1634.84 3288.48 1634.53 3275.72 1631.1 cv
3263.27 1627.99 3253 1621.46 3246.15 1614.3 cv
3244.29 1599.05 li
3255.18 1608.08 3263.58 1616.17 3277.9 1619.9 cv
3289.41 1622.7 3302.79 1623.01 3317.42 1618.03 cv
3325.82 1615.23 3334.54 1610.57 3343.25 1604.03 cv
3369.39 1585.05 3385.88 1576.33 3402.38 1576.95 cv
3418.87 1577.27 3434.12 1586.29 3457.77 1601.85 cv
3480.18 1616.79 3499.47 1626.13 3520.64 1626.75 cv
3541.49 1627.37 3564.52 1619.28 3594.08 1600.3 cv
3625.82 1580.07 3651.34 1577.58 3672.81 1584.73 cv
3689.93 1590.34 3703.93 1601.85 3716.69 1614.92 cv
3716.69 1614.92 li
cp
ef
3481.42 1213.16 mo
3553.62 1213.16 3612.44 1202.27 3612.44 1189.2 cv
3612.44 1175.81 3553.62 1165.23 3481.42 1165.23 cv
3409.22 1165.23 3350.41 1175.81 3350.41 1189.2 cv
3350.41 1202.27 3409.22 1213.16 3481.42 1213.16 cv
3481.42 1213.16 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
3481.42 1201.64 mo
3540.86 1201.64 3589.1 1196.04 3589.1 1189.2 cv
3589.1 1182.35 3540.86 1176.75 3481.42 1176.75 cv
3421.98 1176.75 3373.75 1182.35 3373.75 1189.2 cv
3373.75 1196.04 3421.98 1201.64 3481.42 1201.64 cv
3481.42 1201.64 li
cp
.310002 .776455 1 .310887 cmyk
ef
2496.64 1165.4 mo
2687.22 1165.4 2842.16 1320 2842.16 1510.92 cv
2842.16 1701.84 2687.22 1856.45 2496.64 1856.45 cv
2305.72 1856.45 2150.78 1701.84 2150.78 1510.92 cv
2150.78 1320 2305.72 1165.4 2496.64 1165.4 cv
2496.64 1165.4 li
cp
.203006 .606439 1 .057557 cmyk
ef
2496.64 1183.06 mo
2677.56 1183.06 2824.17 1330 2824.17 1510.92 cv
2824.17 1691.85 2677.56 1838.79 2496.64 1838.79 cv
2315.38 1838.79 2168.77 1691.85 2168.77 1510.92 cv
2168.77 1330 2315.38 1183.06 2496.64 1183.06 cv
2496.64 1183.06 li
cp
.24506 .695979 1 .133181 cmyk
ef
2789.51 1388.64 mo
2806.17 1427.29 2815.17 1469.61 2815.17 1514.25 cv
2815.17 1690.18 2672.56 1832.79 2496.64 1832.79 cv
2337.37 1832.79 2205.09 1715.5 2181.77 1562.57 cv
2195.09 1607.55 2201.76 1621.54 2207.76 1630.87 cv
2219.75 1648.87 2232.41 1646.87 2243.74 1618.88 cv
2249.74 1604.55 2273.06 1623.88 2287.39 1620.54 cv
2303.05 1616.88 2309.71 1603.88 2329.37 1597.89 cv
2364.36 1587.56 2406.34 1576.9 2456.65 1576.9 cv
2610.26 1576.9 2706.88 1419.96 2706.88 1323.67 cv
2706.88 1307.34 2708.88 1297.68 2712.21 1293.01 cv
2717.54 1285.68 2726.54 1290.68 2736.2 1301.34 cv
2756.86 1324.33 2782.18 1373.65 2789.51 1388.64 cv
2789.51 1388.64 li
cp
.169345 .514488 .818448 .0173342 cmyk
ef
2496.64 1307.34 mo
2608.92 1307.34 2699.89 1398.64 2699.89 1510.92 cv
2699.89 1623.21 2608.92 1714.51 2496.64 1714.51 cv
2384.02 1714.51 2293.05 1623.21 2293.05 1510.92 cv
2293.05 1398.64 2384.02 1307.34 2496.64 1307.34 cv
2496.64 1307.34 li
cp
.203006 .606439 1 .057557 cmyk
ef
2598.93 1390.64 mo
2611.26 1399.97 2654.57 1437.95 2633.91 1407.3 cv
2607.92 1368.32 2572.94 1341.33 2587.27 1349.66 cv
2643.58 1381.31 2681.56 1441.62 2681.56 1510.92 cv
2681.56 1613.21 2598.59 1696.18 2496.64 1696.18 cv
2433 1696.18 2377.02 1664.19 2343.7 1615.55 cv
2332.04 1598.55 2382.02 1649.2 2416 1648.2 cv
2441.66 1647.53 2412 1636.54 2397.68 1628.21 cv
2362.69 1607.55 2351.36 1577.89 2341.7 1548.91 cv
2322.04 1488.93 2351.36 1424.63 2381.68 1394.64 cv
2412.34 1364.32 2500.3 1317.34 2598.93 1390.64 cv
2598.93 1390.64 li
cp
.24506 .695979 1 .133181 cmyk
ef
2496.64 1370.98 mo
2573.94 1370.98 2636.58 1433.62 2636.58 1510.92 cv
2636.58 1588.22 2573.94 1650.86 2496.64 1650.86 cv
2419.33 1650.86 2356.69 1588.22 2356.69 1510.92 cv
2356.69 1433.62 2419.33 1370.98 2496.64 1370.98 cv
2496.64 1370.98 li
cp
.169345 .514488 .818448 .0173342 cmyk
ef
2734.87 1676.52 mo
2735.54 1686.52 2736.2 1697.18 2734.2 1707.84 cv
2731.87 1718.5 2727.21 1728.5 2717.88 1737.16 cv
2703.88 1749.82 2684.56 1747.49 2663.9 1744.83 cv
2657.24 1743.83 2650.24 1743.16 2643.58 1742.83 cv
2608.59 1741.16 2573.6 1769.15 2550.61 1795.8 cv
2543.95 1803.47 2536.62 1811.46 2527.96 1817.46 cv
2518.96 1823.46 2508.3 1827.46 2495.64 1826.79 cv
2476.98 1825.79 2464.98 1810.13 2451.99 1793.81 cv
2447.66 1788.47 2443.66 1783.14 2438.99 1778.15 cv
2415.34 1752.16 2371.02 1747.49 2336.04 1749.82 cv
2325.71 1750.49 2315.04 1751.16 2304.38 1748.82 cv
2293.72 1746.82 2283.72 1742.16 2275.06 1732.83 cv
2262.73 1718.84 2265.07 1699.51 2267.4 1678.52 cv
2268.4 1671.86 2269.06 1665.19 2269.4 1658.53 cv
2271.06 1623.21 2243.07 1588.56 2216.42 1565.57 cv
2208.76 1558.9 2200.76 1551.57 2195.09 1542.58 cv
2188.76 1533.58 2185.1 1523.25 2185.77 1510.59 cv
2186.76 1491.6 2202.09 1479.6 2218.42 1466.94 cv
2223.75 1462.61 2229.08 1458.61 2234.08 1453.95 cv
2260.07 1430.29 2264.73 1385.64 2262.4 1350.66 cv
2261.73 1340.66 2261.4 1329.66 2263.4 1319.34 cv
2265.4 1308.67 2270.06 1298.68 2279.39 1290.01 cv
2293.39 1277.35 2313.05 1279.68 2333.7 1282.35 cv
2340.37 1283.02 2347.03 1284.02 2353.7 1284.35 cv
2389.01 1286.02 2423.67 1258.03 2446.66 1231.37 cv
2453.32 1223.71 2460.65 1215.71 2469.65 1209.71 cv
2478.64 1203.72 2488.97 1199.72 2501.97 1200.38 cv
2520.63 1201.38 2532.62 1217.04 2545.62 1233.37 cv
2549.61 1238.7 2553.95 1244.03 2558.28 1249.03 cv
2581.93 1275.02 2626.58 1279.68 2661.57 1277.35 cv
2671.56 1276.69 2682.56 1276.02 2692.89 1278.02 cv
2703.55 1280.35 2713.88 1285.02 2722.21 1294.35 cv
2734.87 1308.34 2732.54 1327.66 2729.87 1348.66 cv
2729.21 1355.32 2728.21 1361.98 2727.87 1368.65 cv
2726.21 1403.63 2754.53 1438.62 2780.85 1461.61 cv
2788.52 1468.27 2796.51 1475.6 2802.51 1484.27 cv
2808.51 1493.6 2812.51 1503.93 2811.84 1516.59 cv
2810.84 1535.58 2795.51 1547.57 2778.85 1560.24 cv
2773.52 1564.57 2768.19 1568.57 2763.19 1573.23 cv
2737.2 1596.89 2732.54 1641.2 2734.87 1676.52 cv
2734.87 1676.52 li
cp
2643.91 1735.5 mo
2651.24 1735.83 2657.9 1736.83 2664.57 1737.5 cv
2683.89 1739.83 2701.55 1742.16 2713.21 1731.83 cv
2721.21 1724.5 2725.21 1715.84 2727.21 1706.51 cv
2728.87 1696.85 2728.54 1686.52 2727.87 1676.85 cv
2725.21 1638.54 2728.87 1594.55 2758.53 1567.9 cv
2763.53 1563.23 2769.19 1558.9 2774.52 1554.57 cv
2789.51 1542.91 2803.84 1531.91 2804.51 1516.25 cv
2805.18 1505.26 2801.84 1496.26 2796.51 1488.6 cv
2791.18 1480.27 2783.52 1473.27 2776.19 1466.94 cv
2747.2 1441.95 2718.88 1408.3 2720.88 1368.32 cv
2721.21 1361.32 2721.88 1354.32 2722.88 1347.66 cv
2725.21 1328.66 2727.21 1310.67 2716.88 1299.34 cv
2709.55 1291.01 2700.88 1287.02 2691.56 1285.35 cv
2681.89 1283.35 2671.56 1283.68 2661.9 1284.35 cv
2623.92 1287.02 2579.93 1283.35 2552.95 1253.7 cv
2548.28 1248.7 2543.95 1243.03 2539.95 1237.7 cv
2527.96 1222.71 2516.96 1208.38 2501.3 1207.71 cv
2490.64 1207.05 2481.31 1210.38 2473.65 1215.71 cv
2465.32 1221.38 2458.65 1228.71 2452.32 1236.04 cv
2427 1265.02 2393.35 1293.35 2353.36 1291.35 cv
2346.36 1291.01 2339.37 1290.35 2332.7 1289.35 cv
2313.71 1287.02 2295.72 1285.02 2284.39 1295.35 cv
2276.06 1302.68 2272.06 1311.34 2270.4 1320.67 cv
2268.4 1330.33 2269.06 1340.66 2269.73 1350.32 cv
2272.4 1389.97 2269.73 1431.29 2239.08 1459.28 cv
2233.75 1463.94 2228.41 1468.27 2222.75 1472.61 cv
2207.76 1484.27 2193.76 1495.26 2192.76 1510.92 cv
2192.1 1521.92 2195.76 1530.91 2200.76 1538.58 cv
2206.42 1546.91 2213.75 1553.9 2221.08 1560.24 cv
2250.07 1585.22 2278.73 1618.88 2276.73 1658.86 cv
2276.39 1665.86 2275.39 1672.86 2274.73 1679.52 cv
2272.4 1698.51 2270.06 1716.5 2280.39 1727.83 cv
2287.72 1736.16 2296.72 1740.16 2306.05 1741.83 cv
2315.38 1743.83 2325.71 1743.49 2335.37 1742.83 cv
2373.69 1740.16 2417.67 1743.83 2444.32 1773.48 cv
2448.99 1778.48 2453.32 1784.14 2457.65 1789.47 cv
2469.31 1804.47 2480.64 1818.8 2495.97 1819.46 cv
2506.97 1820.13 2515.96 1816.8 2523.96 1811.46 cv
2531.96 1805.8 2538.95 1798.47 2545.28 1791.14 cv
2570.27 1762.15 2604.26 1733.83 2643.91 1735.5 cv
2643.91 1735.5 li
cp
.310002 .776455 1 .310887 cmyk
ef
2708.55 1658.19 mo
2708.88 1667.19 2709.55 1676.52 2707.55 1685.85 cv
2705.88 1695.51 2701.55 1704.51 2693.22 1711.84 cv
2680.89 1723.17 2663.57 1721.17 2645.24 1718.84 cv
2639.24 1718.17 2633.25 1717.17 2627.25 1717.17 cv
2596.26 1715.5 2565.27 1740.49 2544.95 1763.82 cv
2538.95 1770.81 2532.29 1777.81 2524.62 1783.14 cv
2516.63 1788.47 2507.3 1792.14 2495.97 1791.47 cv
2479.31 1790.47 2468.65 1776.81 2457.32 1762.15 cv
2453.65 1757.49 2449.66 1752.82 2445.66 1748.49 cv
2425 1725.17 2385.35 1721.17 2354.36 1723.17 cv
2345.03 1723.83 2335.7 1724.17 2326.37 1722.5 cv
2317.04 1720.5 2307.71 1716.5 2300.38 1708.17 cv
2289.06 1695.51 2291.39 1678.52 2293.39 1660.19 cv
2294.39 1654.2 2295.05 1648.2 2295.39 1642.2 cv
2296.72 1610.88 2271.73 1580.23 2248.41 1559.57 cv
2241.41 1553.57 2234.41 1547.24 2229.08 1539.58 cv
2223.75 1531.58 2220.42 1522.25 2220.75 1510.92 cv
2221.75 1494.26 2235.41 1483.6 2250.07 1471.94 cv
2254.74 1468.27 2259.4 1464.61 2264.07 1460.61 cv
2287.06 1439.62 2291.05 1400.3 2289.06 1368.98 cv
2288.39 1359.98 2288.06 1350.66 2289.72 1341.33 cv
2291.72 1331.66 2295.72 1322.67 2304.05 1315 cv
2316.71 1304.01 2333.7 1306.01 2352.36 1308.34 cv
2358.03 1309.01 2364.36 1310.01 2370.02 1310.01 cv
2401.34 1311.67 2432 1286.68 2452.65 1263.03 cv
2458.65 1256.36 2464.98 1249.36 2472.98 1244.03 cv
2480.98 1238.7 2490.31 1235.04 2501.3 1235.7 cv
2517.96 1236.7 2528.62 1250.36 2540.28 1265.02 cv
2543.95 1269.69 2547.61 1274.35 2551.61 1278.69 cv
2572.6 1302.01 2612.25 1306.01 2643.24 1304.01 cv
2652.24 1303.34 2661.9 1303.01 2670.9 1304.67 cv
2680.56 1306.67 2689.56 1310.67 2697.22 1319 cv
2708.22 1331.33 2706.22 1348.66 2703.88 1366.98 cv
2703.22 1372.98 2702.55 1378.98 2702.22 1384.97 cv
2700.55 1416.3 2725.54 1446.95 2749.2 1467.61 cv
2755.86 1473.27 2763.19 1479.94 2768.19 1487.6 cv
2773.52 1495.6 2777.19 1504.92 2776.52 1516.25 cv
2775.52 1532.91 2761.86 1543.58 2747.53 1555.24 cv
2742.53 1558.57 2737.87 1562.57 2733.54 1566.57 cv
2710.21 1587.56 2706.22 1626.87 2708.55 1658.19 cv
2708.55 1658.19 li
cp
2627.58 1710.51 mo
2633.91 1710.84 2639.91 1711.84 2645.91 1712.51 cv
2662.9 1714.51 2678.89 1716.5 2688.89 1707.17 cv
2696.22 1700.84 2699.89 1692.85 2701.22 1684.85 cv
2702.88 1676.19 2702.55 1667.19 2701.88 1658.53 cv
2699.55 1624.54 2702.88 1585.56 2729.21 1561.9 cv
2733.87 1557.57 2738.87 1553.9 2743.53 1549.91 cv
2756.86 1539.58 2769.52 1529.58 2770.19 1515.92 cv
2770.86 1506.26 2767.52 1498.26 2762.86 1491.26 cv
2758.19 1483.93 2751.53 1477.94 2744.87 1472.27 cv
2719.21 1449.95 2693.89 1419.96 2695.89 1384.64 cv
2696.22 1378.31 2696.89 1372.31 2697.55 1366.32 cv
2699.55 1349.32 2701.55 1333.66 2692.22 1323.33 cv
2685.89 1316 2678.23 1312.67 2669.9 1311.01 cv
2661.23 1309.34 2652.24 1309.67 2643.58 1310.34 cv
2609.59 1312.67 2570.61 1309.34 2546.95 1283.02 cv
2542.62 1278.35 2538.95 1273.69 2535.29 1268.69 cv
2524.62 1255.36 2514.96 1242.7 2500.97 1242.03 cv
2491.3 1241.7 2483.31 1244.7 2476.31 1249.36 cv
2469.31 1254.03 2462.98 1260.69 2457.32 1267.36 cv
2435 1293.01 2405.34 1318.34 2369.69 1316.67 cv
2363.36 1316.34 2357.36 1315.34 2351.36 1314.67 cv
2334.37 1312.67 2318.71 1310.67 2308.38 1320 cv
2301.38 1326.33 2297.72 1334.33 2296.05 1342.33 cv
2294.39 1350.99 2294.72 1359.98 2295.39 1368.65 cv
2297.72 1403.97 2295.39 1440.62 2268.06 1465.27 cv
2263.73 1469.61 2258.73 1473.27 2254.07 1476.94 cv
2240.41 1487.6 2228.08 1497.26 2227.08 1511.26 cv
2226.75 1520.92 2229.75 1528.92 2234.41 1535.91 cv
2239.41 1542.91 2246.07 1549.24 2252.4 1554.9 cv
2278.06 1577.23 2303.38 1607.22 2301.72 1642.53 cv
2301.38 1648.87 2300.72 1654.86 2299.72 1660.86 cv
2297.72 1677.85 2295.72 1693.51 2305.05 1703.84 cv
2311.38 1711.17 2319.38 1714.51 2327.71 1716.17 cv
2336.04 1717.84 2345.03 1717.5 2353.7 1716.84 cv
2387.68 1714.51 2426.67 1717.84 2450.66 1744.16 cv
2454.65 1748.82 2458.65 1753.49 2462.32 1758.49 cv
2472.65 1771.81 2482.64 1784.14 2496.3 1785.14 cv
2505.97 1785.48 2513.96 1782.48 2520.96 1777.81 cv
2528.29 1773.15 2534.29 1766.15 2539.95 1759.82 cv
2562.28 1734.16 2592.26 1708.84 2627.58 1710.51 cv
2627.58 1710.51 li
cp
ef
2494.97 1596.55 mo
2519.96 1596.55 2547.61 1580.56 2566.94 1556.24 cv
2595.93 1519.59 2610.59 1472.94 2610.59 1510.92 cv
2610.59 1573.9 2559.61 1624.88 2496.64 1624.88 cv
2433.66 1624.88 2382.35 1573.9 2382.35 1510.92 cv
2382.35 1476.27 2385.68 1525.25 2409.67 1558.9 cv
2429.33 1585.89 2466.65 1596.55 2494.97 1596.55 cv
2494.97 1596.55 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
2208.09 1701.51 mo
2193.43 1679.19 2181.43 1655.53 2172.1 1630.21 cv
2158.44 1591.22 2152.45 1549.57 2152.45 1507.26 cv
2152.11 1495.93 2152.45 1484.6 2152.78 1473.6 cv
2170.44 1309.01 2303.38 1179.39 2468.98 1166.4 cv
2528.29 1162.73 2589.26 1173.73 2646.57 1201.72 cv
2705.55 1230.71 2752.86 1274.02 2785.85 1325.33 cv
2754.2 1283.68 2705.22 1238.37 2663.57 1218.04 cv
2621.92 1197.72 2599.59 1186.06 2565.27 1180.73 cv
2431 1151.74 2283.39 1211.71 2210.09 1329.33 cv
2177.77 1381.98 2162.11 1447.28 2160.44 1508.59 cv
2158.44 1576.56 2177.77 1653.2 2214.75 1710.51 cv
2212.42 1707.51 2210.09 1704.51 2208.09 1701.51 cv
2208.09 1701.51 li
cp
.0899062 .446326 .73611 0 cmyk
ef
1638.34 1300.25 mo
1711.76 1300.25 li
1772.53 1300.25 1821.89 1344.3 1821.89 1397.73 cv
1821.89 1642.06 li
1821.89 1695.49 1772.53 1739.14 1711.76 1739.14 cv
1638.34 1739.14 li
1638.34 1686.93 li
1701.97 1686.93 li
1737.05 1686.93 1765.6 1665.72 1765.6 1635.13 cv
1765.6 1404.67 li
1765.6 1373.67 1736.64 1352.46 1701.97 1352.46 cv
1638.34 1352.46 li
1638.34 1300.25 li
cp
.24506 .695979 1 .133181 cmyk
ef
1735.42 1679.59 mo
1753.36 1671.02 1765.6 1655.11 1765.6 1635.13 cv
1765.6 1404.67 li
1765.6 1373.67 1736.64 1352.46 1701.97 1352.46 cv
1638.34 1352.46 li
1638.34 1345.11 li
1644.05 1339.81 1650.57 1336.55 1658.32 1336.14 cv
1726.85 1332.88 1780.69 1341.03 1780.69 1392.43 cv
1780.69 1634.31 li
1780.69 1654.71 1755.4 1674.69 1735.42 1679.59 cv
1735.42 1679.59 li
cp
.310002 .776455 1 .310887 cmyk
ef
1246.35 1187.67 mo
1286.73 1186.04 1607.34 1164.82 1662.81 1195.01 cv
1668.11 1197.86 1673.82 1199.5 1673.82 1203.57 cv
1673.82 1782.38 li
1673.82 1823.17 1640.38 1856.61 1599.18 1856.61 cv
1278.17 1856.61 li
1235.75 1856.61 1201.48 1821.94 1201.48 1779.93 cv
1201.48 1201.54 li
1201.48 1190.93 1230.44 1188.07 1246.35 1187.67 cv
1246.35 1187.67 li
cp
.24506 .695979 1 .133181 cmyk
ef
1518.82 1228.86 mo
1520.05 1768.92 li
1520.46 1815.42 1405.43 1801.55 1320.59 1805.22 cv
1254.1 1808.07 1214.13 1792.57 1214.13 1759.13 cv
1213.72 1213.77 li
1262.26 1222.34 1378.92 1239.06 1518.82 1228.86 cv
1518.82 1228.86 li
cp
.203006 .606439 1 .057557 cmyk
ef
1342.61 1234.98 mo
1343.43 1792.57 li
1289.18 1793.39 1245.94 1792.57 1242.27 1779.93 cv
1239.01 1224.79 li
1260.63 1227.64 1300.19 1234.17 1342.61 1234.98 cv
1342.61 1234.98 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
1324.67 1232.54 mo
1265.93 1228.05 1205.56 1219.48 1201.48 1203.98 cv
1191.69 1165.64 1416.44 1165.23 1437.24 1165.23 cv
1447.44 1165.23 1498.43 1166.86 1550.64 1170.94 cv
1611.42 1175.84 1672.6 1188.07 1673.42 1202.35 cv
1674.64 1220.3 1619.98 1223.97 1562.06 1230.09 cv
1480.07 1239.47 1406.65 1239.06 1324.67 1232.54 cv
1324.67 1232.54 li
cp
ef
1436.43 1221.52 mo
1546.15 1221.52 1635.07 1212.14 1635.07 1201.13 cv
1635.07 1190.11 1546.15 1181.14 1436.43 1181.14 cv
1326.3 1181.14 1237.38 1190.11 1237.38 1201.13 cv
1237.38 1212.14 1326.3 1221.52 1436.43 1221.52 cv
1436.43 1221.52 li
cp
.310002 .776455 1 .310887 cmyk
ef
1287.14 1253.34 mo
1280.61 1362.25 1278.57 1456.88 1281.02 1555.99 cv
1283.06 1624.52 1287.14 1693.86 1293.67 1768.1 cv
1299.38 1773.4 li
1296.11 1747.3 1302.64 1657.15 1304.68 1558.03 cv
1307.94 1404.26 1313.65 1241.1 1287.14 1253.34 cv
1287.14 1253.34 li
cp
.0603952 .20502 .437812 0 cmyk
ef
1201.89 1441.38 mo
1216.57 1423.84 1237.78 1409.97 1258.18 1403.03 cv
1278.98 1395.69 1303.46 1398.14 1334.05 1418.53 cv
1362.6 1437.71 1384.63 1445.86 1404.61 1445.05 cv
1425.01 1444.64 1443.36 1435.26 1464.98 1420.57 cv
1487.82 1404.67 1502.51 1395.28 1518.42 1394.88 cv
1534.32 1394.88 1550.23 1403.03 1575.11 1422.61 cv
1583.68 1429.14 1591.84 1433.63 1599.99 1436.48 cv
1613.86 1441.38 1626.92 1441.38 1637.93 1438.52 cv
1648.94 1435.67 1657.51 1429.55 1663.63 1423.43 cv
1664.85 1421.8 1673.82 1409.97 1673.82 1412.82 cv
1673.42 1417.72 1673.42 1420.17 1673.42 1425.47 cv
1668.11 1434.85 1652.21 1446.27 1639.97 1449.94 cv
1627.73 1453.21 1613.05 1453.21 1597.14 1447.49 cv
1588.57 1444.64 1579.6 1439.74 1570.22 1432.4 cv
1546.56 1414.46 1532.28 1406.3 1518.42 1406.71 cv
1504.96 1407.11 1491.09 1415.68 1469.47 1430.77 cv
1446.63 1446.68 1427.05 1456.06 1405.02 1456.88 cv
1383 1457.69 1359.74 1449.13 1329.56 1429.14 cv
1301.42 1410.38 1279.39 1407.93 1261.04 1414.05 cv
1241.05 1424.25 1213.72 1440.97 1201.89 1456.88 cv
1201.89 1441.38 li
cp
1201.89 1383.86 mo
1216.57 1366.32 1237.78 1352.46 1258.18 1345.52 cv
1278.98 1338.18 1303.46 1340.63 1334.05 1361.02 cv
1362.6 1380.19 1384.63 1388.35 1404.61 1387.53 cv
1425.01 1387.13 1443.36 1377.75 1464.98 1363.06 cv
1487.82 1347.15 1502.51 1337.77 1518.42 1337.36 cv
1534.32 1337.36 1550.23 1345.52 1575.11 1365.1 cv
1583.68 1371.63 1591.84 1376.11 1599.99 1378.97 cv
1613.86 1383.86 1626.92 1383.86 1637.93 1381.01 cv
1648.94 1377.75 1657.51 1372.03 1663.63 1365.92 cv
1664.85 1364.28 1673.82 1352.46 1673.82 1355.31 cv
1673.42 1360.21 1673.42 1362.65 1673.42 1367.96 cv
1668.11 1377.34 1652.21 1388.76 1639.97 1392.43 cv
1627.73 1395.69 1613.05 1395.69 1597.14 1389.98 cv
1588.57 1387.13 1579.6 1382.23 1570.22 1374.89 cv
1546.56 1356.94 1532.28 1348.78 1518.42 1349.19 cv
1504.96 1349.6 1491.09 1358.17 1469.47 1373.26 cv
1446.63 1389.17 1427.05 1398.55 1405.02 1399.36 cv
1383 1399.77 1359.74 1391.61 1329.56 1371.63 cv
1301.42 1352.46 1279.39 1350.42 1261.04 1356.53 cv
1241.05 1366.73 1213.72 1383.46 1201.89 1399.36 cv
1201.89 1383.86 li
cp
.310002 .776455 1 .310887 cmyk
ef
275.633 1330.97 mo
791.761 1330.97 li
802.141 1330.97 809.35 1332.7 815.405 1341.35 cv
864.134 1413.15 li
877.398 1432.46 871.92 1439.67 864.711 1458.7 cv
800.123 1630.84 li
794.356 1646.12 787.724 1660.83 772.442 1660.83 cv
280.823 1660.83 li
265.541 1660.83 258.909 1645.84 253.142 1630.27 cv
185.094 1449.48 li
179.904 1435.64 178.174 1430.73 187.977 1416.32 cv
237.572 1342.79 li
247.087 1328.09 259.774 1330.97 275.633 1330.97 cv
275.633 1330.97 li
cp
.24506 .695979 1 .133181 cmyk
ef
275.633 1330.97 mo
791.761 1330.97 li
802.141 1330.97 809.35 1332.7 815.405 1341.35 cv
864.134 1413.15 li
875.091 1429 873.361 1436.79 868.459 1449.48 cv
185.094 1449.48 li
179.904 1435.64 178.174 1430.73 187.977 1416.32 cv
237.572 1342.79 li
247.087 1328.09 259.774 1330.97 275.633 1330.97 cv
275.633 1330.97 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
826.65 1560.49 mo
820.018 1577.5 li
815.405 1579.52 810.214 1580.96 804.448 1582.4 cv
787.724 1585.86 767.54 1586.15 745.915 1579.81 cv
734.093 1576.63 721.695 1571.16 709.008 1563.37 cv
676.713 1543.76 656.818 1534.83 638.076 1535.4 cv
619.334 1535.69 600.592 1544.92 571.181 1561.35 cv
540.04 1578.65 512.648 1589.32 482.66 1589.9 cv
452.961 1590.76 420.667 1581.54 379.435 1559.62 cv
341.085 1539.15 319.749 1535.69 294.663 1542.61 cv
274.479 1548.09 250.547 1567.12 234.688 1580.67 cv
229.786 1567.98 li
245.933 1554.72 270.154 1535.98 290.914 1530.21 cv
319.172 1522.43 343.681 1526.17 385.49 1548.38 cv
424.704 1569.14 454.98 1577.79 482.372 1577.21 cv
509.764 1576.63 535.427 1566.54 564.837 1550.11 cv
595.978 1532.81 616.162 1523 637.788 1522.71 cv
659.413 1522.14 681.327 1531.36 715.639 1552.41 cv
727.173 1559.62 738.706 1564.52 749.664 1567.7 cv
768.982 1573.17 786.859 1573.17 801.565 1570 cv
811.08 1567.7 819.73 1564.52 826.65 1560.49 cv
826.65 1560.49 li
cp
850.294 1497.34 mo
841.067 1521.85 li
831.84 1528.77 819.442 1534.83 804.448 1538 cv
787.724 1541.75 767.54 1541.75 745.915 1535.69 cv
734.093 1532.23 721.695 1527.04 709.008 1519.25 cv
676.713 1499.36 656.818 1490.71 638.076 1491 cv
619.334 1491.29 600.592 1500.8 571.181 1516.95 cv
540.04 1534.54 512.648 1544.92 482.66 1545.78 cv
452.961 1546.36 420.667 1537.42 379.435 1515.22 cv
341.085 1494.75 310.81 1492.15 285.436 1499.07 cv
260.062 1506.28 239.013 1523.29 219.695 1541.17 cv
214.793 1528.19 li
234.112 1510.6 255.449 1494.17 281.976 1486.96 cv
310.233 1479.18 343.681 1481.77 385.49 1503.97 cv
424.704 1525.02 454.98 1533.67 482.372 1533.1 cv
509.764 1532.23 535.427 1522.43 564.837 1505.99 cv
595.978 1488.69 616.162 1478.6 637.788 1478.31 cv
659.413 1478.02 681.327 1487.25 715.639 1508.3 cv
727.173 1515.51 738.706 1520.41 749.664 1523.58 cv
768.982 1529.06 786.859 1528.77 801.565 1525.6 cv
816.559 1522.43 828.668 1516.08 836.742 1509.16 cv
838.184 1507.72 846.546 1496.76 850.294 1497.34 cv
850.294 1497.34 li
cp
.310002 .776455 1 .310887 cmyk
ef
816.847 1434.19 mo
236.418 1434.19 li
228.921 1434.19 214.793 1434.48 209.891 1429.87 cv
202.971 1423.24 209.314 1415.45 214.504 1407.67 cv
253.142 1347.4 li
255.16 1344.23 265.541 1342.5 280.823 1342.5 cv
772.442 1342.5 li
787.724 1342.5 798.105 1344.23 800.123 1347.4 cv
841.355 1411.42 li
845.104 1417.18 850.871 1424.68 842.509 1430.16 cv
837.607 1433.33 822.902 1434.19 816.847 1434.19 cv
816.847 1434.19 li
cp
ef
761.197 1434.19 mo
290.914 1434.19 li
256.602 1345.1 li
261.215 1343.37 269.577 1342.5 280.823 1342.5 cv
772.442 1342.5 li
780.804 1342.5 787.724 1343.08 792.626 1343.94 cv
761.197 1434.19 li
cp
.24506 .695979 1 .133181 cmyk
ef
294.375 1689.38 mo
545.519 1691.11 li
763.792 1689.38 li
799.546 1689.09 799.546 1650.45 763.792 1650.45 cv
607.512 1650.45 450.943 1650.45 294.375 1650.45 cv
258.621 1650.45 258.909 1689.09 294.375 1689.38 cv
294.375 1689.38 li
cp
ef
296.681 1674.38 mo
308.792 1675.54 330.129 1674.38 355.503 1674.96 cv
469.685 1676.98 691.419 1674.38 767.829 1676.4 cv
782.823 1676.98 782.246 1667.46 763.215 1667.75 cv
687.67 1666.02 468.532 1668.61 357.521 1666.02 cv
330.994 1665.44 304.755 1666.02 295.528 1666.02 cv
280.534 1666.02 281.976 1673.23 296.681 1674.38 cv
296.681 1674.38 li
cp
.203006 .606439 1 .057557 cmyk
ef
3481.87 241.719 mo
3604.41 241.719 3709.1 319.15 3749.39 427.94 cv
3764.1 443.137 3799.56 445.067 3818.86 445.067 cv
3829.23 497.411 3830.44 547.585 3818.86 594.623 cv
3800.53 595.106 3769.65 597.035 3751.32 621.157 cv
3712.48 732.601 3606.58 812.685 3481.87 812.685 cv
3357.16 812.685 3251.27 732.601 3212.19 621.399 cv
3194.1 597.035 3162.98 595.106 3144.41 594.623 cv
3133.55 545.897 3132.11 496.447 3144.41 445.067 cv
3163.95 445.067 3200.13 443.137 3214.36 427.458 cv
3254.89 318.909 3359.33 241.719 3481.87 241.719 cv
3481.87 241.719 li
cp
.24506 .695979 1 .133181 cmyk
ef
3480.91 271.389 mo
3622.02 271.389 3736.36 385.727 3736.36 526.841 cv
3736.36 667.954 3622.02 782.533 3480.91 782.533 cv
3339.8 782.533 3225.22 667.954 3225.22 526.841 cv
3225.22 385.727 3339.8 271.389 3480.91 271.389 cv
3480.91 271.389 li
cp
3480.91 256.433 mo
3630.22 256.433 3751.32 377.525 3751.32 526.841 cv
3751.32 676.396 3630.22 797.489 3480.91 797.489 cv
3331.35 797.489 3210.26 676.396 3210.26 526.841 cv
3210.26 377.525 3331.35 256.433 3480.91 256.433 cv
3480.91 256.433 li
cp
.163119 .552666 .887388 .0211795 cmyk
ef
3480.91 776.262 mo
3618.16 776.262 3730.33 664.336 3730.33 526.841 cv
3730.33 389.587 3618.16 277.419 3480.91 277.419 cv
3343.41 277.419 3231.49 389.587 3231.49 526.841 cv
3231.49 664.336 3343.41 776.262 3480.91 776.262 cv
3480.91 776.262 li
cp
.310002 .776455 1 .310887 cmyk
ef
3155.74 456.163 mo
3167.81 456.163 3179.63 456.163 3191.45 456.163 cv
3192.65 456.163 3193.86 457.369 3193.62 459.058 cv
3187.34 496.929 3186.38 537.454 3193.62 581.839 cv
3193.86 583.527 3192.65 584.733 3191.45 584.733 cv
3179.63 584.733 3167.81 584.733 3155.74 584.733 cv
3154.78 584.733 3154.06 583.527 3153.82 581.839 cv
3148.03 540.831 3147.78 500.065 3153.82 459.058 cv
3154.06 457.369 3154.78 456.163 3155.74 456.163 cv
3155.74 456.163 li
cp
.203006 .606439 1 .057557 cmyk
ef
3804.87 456.163 mo
3793.05 456.163 3781.23 456.163 3769.17 456.163 cv
3768.2 456.163 3767 457.369 3767.24 459.058 cv
3773.27 496.929 3774.47 537.454 3767.24 581.839 cv
3767 583.527 3768.2 584.733 3769.17 584.733 cv
3781.23 584.733 3793.05 584.733 3804.87 584.733 cv
3806.07 584.733 3806.8 583.527 3807.04 581.839 cv
3812.59 540.831 3812.83 500.065 3807.04 459.058 cv
3806.8 457.369 3806.07 456.163 3804.87 456.163 cv
3804.87 456.163 li
cp
ef
3480.91 758.411 mo
3608.27 758.411 3712.24 654.446 3712.24 526.841 cv
3712.24 399.476 3608.27 295.511 3480.91 295.511 cv
3353.3 295.511 3249.34 399.476 3249.34 526.841 cv
3249.34 654.446 3353.3 758.411 3480.91 758.411 cv
3480.91 758.411 li
cp
.24506 .695979 1 .133181 cmyk
ef
3682.33 625.258 mo
3645.42 698.83 3569.44 749.245 3481.87 749.245 cv
3357.65 749.245 3257.06 648.174 3257.06 523.222 cv
3257.06 480.285 3269.12 440.243 3289.86 405.989 cv
3274.43 436.624 3265.74 471.119 3265.74 507.784 cv
3265.74 531.665 3269.36 554.581 3276.11 576.049 cv
3299.51 668.436 3382.73 736.702 3481.87 736.702 cv
3504.07 736.702 3525.78 733.324 3546.04 726.811 cv
3603.45 712.097 3652.18 674.949 3682.33 625.258 cv
3682.33 625.258 li
cp
.163119 .552666 .887388 .0211795 cmyk
ef
3459.2 532.871 mo
3480.43 508.99 3507.44 498.859 3523.36 513.091 cv
3523.85 513.573 li
3646.87 375.113 li
3686.43 327.111 li
3699.94 343.513 li
3678.23 371.254 li
3666.17 390.31 li
3530.36 524.187 li
3535.42 539.625 3533.98 562.782 3515.16 584.01 cv
3496.35 605.478 3459.44 612.232 3443.52 598 cv
3427.6 584.01 3438.21 556.752 3459.2 532.871 cv
3459.2 532.871 li
cp
.310002 .776455 1 .310887 cmyk
ef
3454.38 533.112 mo
3471.98 513.332 3494.42 502.96 3509.37 506.819 cv
3697.28 281.761 li
3700.42 278.143 3706.21 277.902 3709.83 281.038 cv
3720.2 290.204 li
3723.82 293.34 3724.06 298.888 3720.92 302.506 cv
3523.12 518.639 li
3528.91 533.112 3521.43 556.752 3503.58 577.014 cv
3482.12 601.136 3453.89 611.026 3440.14 598.965 cv
3426.39 586.904 3432.91 557.475 3454.38 533.112 cv
3454.38 533.112 li
cp
.157534 .610803 1 .0244755 cmyk
ef
3458.23 535.042 mo
3477.53 513.332 3502.38 504.407 3513.72 514.779 cv
3525.05 525.152 3518.54 551.204 3499.24 572.913 cv
3479.94 594.623 3455.1 603.789 3443.76 593.176 cv
3432.42 582.803 3438.7 556.752 3458.23 535.042 cv
3458.23 535.042 li
cp
.24506 .695979 1 .133181 cmyk
ef
3706.69 286.827 mo
3712.24 291.169 li
3714.17 292.616 3716.1 296.235 3712.96 299.612 cv
3522.16 511.161 li
3515.65 506.578 li
3698.01 287.792 li
3700.9 284.174 3704.76 285.38 3706.69 286.827 cv
3706.69 286.827 li
cp
.163119 .552666 .887388 .0211795 cmyk
ef
3459.92 547.103 mo
3472.95 532.388 3485.01 524.911 3496.59 531.906 cv
3508.17 538.901 3501.41 559.646 3488.39 574.36 cv
3475.36 589.075 3456.55 591.487 3449.31 585.215 cv
3442.31 578.944 3446.9 561.817 3459.92 547.103 cv
3459.92 547.103 li
cp
ef
2496.32 836.19 mo
2687.41 836.19 2842.16 703.85 2842.16 540.62 cv
2842.16 465.819 2809.45 397.68 2756.15 345.592 cv
2731.32 317.429 li
2731.32 317.429 2702.25 292.595 2707.7 267.46 cv
2708.91 261.706 2711.94 249.895 2712.54 242.93 cv
2713.15 238.085 2713.45 232.634 2712.54 229.605 cv
2711.94 226.879 2710.73 226.577 2707.4 224.76 cv
2691.95 216.886 2656.22 211.132 2622.9 206.286 cv
2587.47 200.836 2542.96 197.807 2496.02 197.807 cv
2455.74 197.807 2418.19 198.413 2386.08 202.35 cv
2337.63 208.406 2297.35 214.463 2282.82 225.971 cv
2281 226.879 2280.7 228.091 2280.09 229.302 cv
2278.88 232.028 2279.79 235.662 2279.79 239.902 cv
2280.09 248.078 2283.42 262.009 2284.63 267.46 cv
2289.78 292.595 2260.71 317.429 2260.71 317.429 cv
2232.24 349.832 li
2181.37 401.315 2150.78 467.939 2150.78 540.62 cv
2150.78 703.85 2305.53 836.19 2496.32 836.19 cv
2496.32 836.19 li
cp
.24506 .695979 1 .133181 cmyk
ef
2705.28 238.085 mo
2692.25 248.078 2662.88 255.952 2623.51 262.009 cv
2587.78 267.46 2545.07 270.185 2497.53 270.185 cv
2454.53 270.185 2413.04 268.671 2379.42 264.129 cv
2353.98 260.797 2332.48 256.255 2315.83 251.107 cv
2271.61 237.176 2265.25 225.365 2313.4 213.555 cv
2353.68 203.864 2420 197.201 2495.11 197.201 cv
2591.71 197.201 2674.08 207.195 2704.37 222.64 cv
2709.52 225.365 2712.24 227.182 2712.24 229.302 cv
2712.54 231.725 2709.52 234.753 2705.28 238.085 cv
2705.28 238.085 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
2495.11 252.924 mo
2589.9 252.924 2666.82 244.747 2666.82 234.753 cv
2666.82 224.457 2589.9 216.28 2495.11 216.28 cv
2400.02 216.28 2323.09 224.457 2323.09 234.753 cv
2323.09 244.747 2400.02 252.924 2495.11 252.924 cv
2495.11 252.924 li
cp
.310002 .776455 1 .310887 cmyk
ef
2316.13 832.557 mo
2434.84 866.172 2555.37 864.657 2676.51 832.557 cv
2703.46 825.288 2704.07 782.891 2676.51 782.891 cv
2556.28 782.891 2436.36 782.891 2316.13 782.891 cv
2288.57 782.891 2289.48 824.683 2316.13 832.557 cv
2316.13 832.557 li
cp
.24506 .695979 1 .133181 cmyk
ef
2282.21 328.633 mo
2282.51 328.936 2275.55 352.86 2263.13 349.226 cv
2246.48 344.684 2207.71 330.753 2199.23 348.621 cv
2194.69 358.311 2209.83 364.368 2221.04 368.608 cv
2229.82 371.939 2235.57 369.819 2247.69 370.122 cv
2274.64 370.122 2242.24 399.194 2244.96 399.498 cv
2235.88 403.737 2233.76 408.885 2227.09 408.885 cv
2222.25 408.885 2214.07 406.463 2202.87 401.92 cv
2188.33 396.166 2172.58 388.595 2165.32 377.087 cv
2159.86 368.911 2158.35 350.437 2163.2 341.958 cv
2171.37 327.725 2187.42 318.64 2208.02 315.914 cv
2212.56 315.308 2221.64 315.005 2231.64 316.217 cv
2247.39 317.731 2276.76 324.999 2282.21 328.633 cv
2282.21 328.633 li
cp
ef
2218.31 379.51 mo
2219.83 378.904 2224.67 374.665 2222.25 373.15 cv
2217.71 370.728 2204.99 368.911 2198.63 364.671 cv
2192.27 360.431 2182.88 354.98 2179.25 348.015 cv
2176.82 343.775 2178.94 337.718 2182.27 333.479 cv
2185.61 329.542 2198.63 324.393 2213.16 322.576 cv
2229.82 320.457 2244.96 322.879 2242.54 321.365 cv
2239.81 319.548 2225.28 316.823 2214.07 317.429 cv
2200.14 318.034 2196.21 320.154 2185 324.999 cv
2174.4 329.845 2166.53 338.324 2167.74 345.289 cv
2168.04 348.015 2168.34 351.952 2170.46 354.98 cv
2180.16 369.214 2206.5 384.961 2218.31 379.51 cv
2218.31 379.51 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
2710.43 328.633 mo
2710.12 328.936 2717.09 352.86 2729.5 349.226 cv
2746.46 344.684 2784.92 330.753 2793.4 348.621 cv
2797.95 358.311 2782.8 364.368 2771.9 368.608 cv
2762.82 371.939 2757.06 369.819 2745.25 370.122 cv
2718 370.122 2750.4 399.194 2747.98 399.498 cv
2756.76 403.737 2758.88 408.885 2765.54 408.885 cv
2770.39 408.885 2778.56 406.463 2789.77 401.92 cv
2804.3 396.166 2820.05 388.595 2827.32 377.087 cv
2832.77 368.911 2834.29 350.437 2829.44 341.958 cv
2821.57 327.725 2805.52 318.64 2784.62 315.914 cv
2780.08 315.308 2770.99 315.005 2761 316.217 cv
2745.25 317.731 2715.88 324.999 2710.43 328.633 cv
2710.43 328.633 li
cp
.24506 .695979 1 .133181 cmyk
ef
2773.42 379.51 mo
2771.9 378.904 2767.06 374.665 2769.78 373.15 cv
2774.32 370.728 2787.04 368.911 2793.4 364.671 cv
2799.76 360.431 2809.15 354.98 2813.09 348.015 cv
2815.51 343.775 2813.39 337.718 2810.36 333.479 cv
2807.03 329.542 2793.71 324.393 2779.47 322.576 cv
2762.82 320.457 2747.67 322.879 2750.1 321.365 cv
2753.13 319.548 2767.36 316.823 2778.87 317.429 cv
2792.49 318.034 2796.73 320.154 2807.64 324.999 cv
2818.24 329.845 2825.81 338.324 2824.6 345.289 cv
2824.29 348.015 2823.69 351.952 2821.57 354.98 cv
2811.57 369.214 2785.23 384.961 2773.42 379.51 cv
2773.42 379.51 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
2318.85 811.358 mo
2370.03 826.5 2443.02 836.493 2514.19 833.768 cv
2525.69 833.465 2525.09 822.563 2510.55 822.563 cv
2441.2 823.471 2367.01 812.872 2320.07 798.941 cv
2308.86 795.913 2307.65 808.027 2318.85 811.358 cv
2318.85 811.358 li
cp
.203006 .606439 1 .057557 cmyk
ef
2552.65 323.485 mo
2536.29 306.829 2418.49 318.942 2360.95 305.315 cv
2294.32 289.567 2229.82 347.712 2202.87 440.078 cv
2170.77 548.797 2180.16 659.939 2288.57 738.374 cv
2318.55 759.875 2347.02 765.023 2373.67 767.749 cv
2410.92 771.383 2445.44 765.023 2481.78 751.396 cv
2694.68 670.235 2671.36 446.134 2552.65 323.485 cv
2552.65 323.485 li
cp
ef
2208.62 590.891 mo
2239.51 456.734 2306.44 401.011 2326.12 372.848 cv
2332.18 364.368 2345.81 351.346 2350.05 344.078 cv
2360.34 327.725 2322.79 318.64 2307.95 323.485 cv
2280.7 331.964 2255.26 354.071 2222.85 444.318 cv
2208.92 482.778 2202.56 552.734 2208.62 590.891 cv
2208.62 590.891 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
2151.39 560.608 mo
2170.16 541.226 2190.75 524.873 2215.28 516.393 cv
2246.78 506.096 2284.33 509.428 2330.97 539.712 cv
2374.88 567.875 2408.49 579.686 2439.38 578.778 cv
2469.97 577.869 2498.44 564.242 2531.45 542.134 cv
2566.27 518.816 2588.68 505.188 2612.91 504.885 cv
2637.14 504.279 2661.67 516.696 2699.83 545.163 cv
2712.85 554.854 2725.87 561.819 2737.98 566.059 cv
2759.48 573.327 2779.17 573.024 2795.83 568.784 cv
2812.48 564.544 2826.11 555.762 2835.19 546.374 cv
2837.92 543.649 2840.04 540.62 2842.16 537.591 cv
2842.16 540.62 li
2842.16 545.466 2841.86 550.311 2841.55 555.156 cv
2831.56 565.15 2816.72 573.932 2799.16 578.475 cv
2780.38 583.623 2757.97 583.623 2733.74 575.447 cv
2720.42 570.904 2706.49 563.636 2692.25 553.037 cv
2656.52 526.387 2634.11 514.576 2613.21 514.879 cv
2592.32 515.182 2571.12 527.901 2538.41 550.311 cv
2503.59 573.63 2473.3 587.863 2439.69 589.074 cv
2406.38 589.983 2370.34 577.566 2324.31 547.889 cv
2281.3 520.027 2247.39 516.696 2219.22 526.084 cv
2194.09 534.563 2172.58 553.642 2152.9 574.841 cv
2152.29 569.996 2151.69 565.15 2151.39 560.608 cv
2151.39 560.608 li
cp
2151.08 524.267 mo
2169.86 505.188 2190.45 488.229 2215.28 480.053 cv
2246.78 469.453 2284.33 473.087 2330.97 503.371 cv
2374.88 531.535 2408.49 543.346 2439.38 542.437 cv
2469.97 541.529 2498.44 527.901 2531.45 505.794 cv
2566.27 482.172 2588.68 468.848 2612.91 468.242 cv
2637.14 467.939 2661.67 480.355 2699.83 508.822 cv
2712.85 518.513 2725.87 525.175 2737.98 529.415 cv
2759.48 536.986 2779.17 536.683 2795.83 532.443 cv
2812.48 527.901 2826.11 519.421 2835.19 510.033 cv
2836.71 508.216 2838.22 506.702 2839.43 504.885 cv
2840.34 509.731 2840.65 514.273 2841.25 519.118 cv
2830.95 528.81 2816.42 537.591 2799.16 542.134 cv
2780.38 546.98 2757.97 547.283 2733.74 539.106 cv
2720.42 534.261 2706.49 526.992 2692.25 516.696 cv
2656.52 489.744 2634.11 477.933 2613.21 478.538 cv
2592.32 478.841 2571.12 491.56 2538.41 513.668 cv
2503.59 537.289 2473.3 551.523 2439.69 552.431 cv
2406.38 553.339 2370.34 541.226 2324.31 511.548 cv
2281.3 483.686 2247.39 480.053 2219.22 489.744 cv
2192.87 498.526 2170.77 518.513 2150.78 540.923 cv
2150.78 535.169 2150.78 529.718 2151.08 524.267 cv
2151.08 524.267 li
cp
.310002 .776455 1 .310887 cmyk
ef
1545.02 254.075 mo
1555.11 248.267 1572.83 241.238 1590.87 235.736 cv
1631.21 223.51 1663.3 225.65 1690.51 247.045 cv
1721.68 271.496 1724.74 321.011 1714.65 369.302 cv
1697.23 452.744 1650.16 582.643 1578.64 607.4 cv
1570.08 610.762 1561.83 612.29 1553.88 611.373 cv
1571.3 550.55 li
1572.83 550.856 1574.67 550.55 1576.19 549.938 cv
1628.77 531.294 1665.44 443.88 1678.59 379.389 cv
1685 346.073 1688.37 298.087 1666.67 280.971 cv
1655.66 272.413 1639.46 269.968 1622.65 271.191 cv
1613.48 271.802 1600.34 274.858 1587.2 278.832 cv
1572.83 283.416 1559.38 288.613 1552.66 292.28 cv
1545.02 254.075 li
cp
.24506 .695979 1 .133181 cmyk
ef
1629.99 501.953 mo
1653.83 466.497 1670.64 418.817 1678.59 379.389 cv
1685 346.073 1688.37 298.087 1666.67 280.971 cv
1655.66 272.413 1639.46 269.968 1622.65 271.191 cv
1613.48 271.802 1600.34 274.858 1587.2 278.832 cv
1577.72 281.888 1556.02 290.446 1548.99 293.503 cv
1547.46 282.5 li
1561.83 269.968 1603.09 259.271 1621.12 258.354 cv
1685 255.297 1706.71 306.645 1688.06 375.416 cv
1669.11 444.491 1649.55 476.584 1629.99 501.953 cv
1629.99 501.953 li
cp
.310002 .776455 1 .310887 cmyk
ef
1315.48 188.361 mo
1334.43 183.165 1366.83 183.165 1403.81 182.554 cv
1454.85 181.942 1514.15 182.554 1555.41 188.667 cv
1574.06 191.723 1575.28 196.307 1574.06 210.368 cv
1571.3 235.125 1559.69 272.413 1553.27 298.087 cv
1612.57 841.218 li
1525.46 841.218 1394.95 841.218 1307.84 841.218 cv
1356.44 299.31 li
1355.21 273.025 1336.26 243.683 1311.81 217.703 cv
1304.17 207.006 1297.75 192.946 1315.48 188.361 cv
1315.48 188.361 li
cp
.24506 .695979 1 .133181 cmyk
ef
1315.48 188.361 mo
1334.74 183.165 1368.36 182.248 1406.26 181.637 cv
1456.69 181.025 1514.76 182.554 1555.41 188.667 cv
1573.75 191.723 1575.28 196.307 1574.06 209.756 cv
1556.63 218.62 1520.87 224.427 1468.91 224.427 cv
1417.26 224.427 1313.04 212.812 1304.17 201.504 cv
1303.56 195.697 1306.31 190.807 1315.48 188.361 cv
1315.48 188.361 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
1317.01 857.417 mo
1398 878.507 1519.34 877.59 1602.17 857.417 cv
1620.21 853.138 1620.82 826.547 1602.17 826.547 cv
1520.26 826.547 1398.92 826.547 1317.01 826.547 cv
1298.36 826.547 1298.98 852.832 1317.01 857.417 cv
1317.01 857.417 li
cp
.24506 .695979 1 .133181 cmyk
ef
1322.82 846.414 mo
1386.7 856.195 1455.47 868.115 1556.94 850.693 cv
1571.3 848.248 1570.69 838.773 1552.35 841.218 cv
1482.97 851.304 1391.28 850.999 1322.82 836.633 cv
1308.45 833.577 1308.45 844.274 1322.82 846.414 cv
1322.82 846.414 li
cp
.203006 .606439 1 .057557 cmyk
ef
1470.14 192.946 mo
1518.43 192.946 1557.24 196.613 1557.24 201.504 cv
1557.24 206.394 1518.43 210.368 1470.14 210.368 cv
1422.15 210.368 1330.76 200.281 1330.76 195.391 cv
1330.76 190.501 1422.15 192.946 1470.14 192.946 cv
1470.14 192.946 li
cp
.310002 .776455 1 .310887 cmyk
ef
1345.13 226.872 mo
1356.13 244.294 1365.91 265.078 1374.16 289.529 cv
1382.72 301.755 1494.89 294.725 1527.9 293.503 cv
1538.91 230.846 li
1474.11 241.543 1379.97 233.902 1345.13 226.872 cv
1345.13 226.872 li
cp
.203006 .606439 1 .057557 cmyk
ef
1372.64 305.729 mo
1333.21 828.992 li
1381.19 833.883 1450.57 848.553 1564.58 827.158 cv
1553.88 653.552 1536.77 484.836 1526.07 311.23 cv
1472.28 317.343 1425.51 313.981 1372.64 305.729 cv
1372.64 305.729 li
cp
ef
1352.77 228.401 mo
1365.61 248.878 1372.02 261.41 1377.53 282.805 cv
1379.97 292.892 1403.2 295.337 1414.2 290.14 cv
1417.57 266.606 1412.06 247.962 1399.53 232.985 cv
1391.59 232.985 1365.61 231.151 1352.77 228.401 cv
1352.77 228.401 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
1377.53 324.067 mo
1341.15 821.656 li
1365.3 826.853 1384.25 828.992 1404.73 830.826 cv
1409.31 661.499 1419.71 500.119 1424.9 331.097 cv
1425.51 313.981 1404.42 311.536 1392.81 310.925 cv
1380.89 310.313 1378.44 312.147 1377.53 324.067 cv
1377.53 324.067 li
cp
ef
1381.81 235.431 mo
1389.45 246.739 1395.56 262.939 1400.45 285.25 cv
1401.67 290.14 1404.12 287.084 1403.81 284.028 cv
1402.28 261.41 1402.28 240.626 1381.81 235.431 cv
1381.81 235.431 li
cp
.0603952 .20502 .437812 0 cmyk
ef
1404.42 339.655 mo
1390.67 509.288 1386.08 646.828 1384.56 814.932 cv
1387 819.823 li
1386.39 758.388 1434.68 314.593 1404.42 339.655 cv
1404.42 339.655 li
cp
ef
1605.54 782.228 mo
1606.15 790.786 li
1604.01 791.703 1601.56 792.62 1599.12 793.232 cv
1590.56 795.677 1580.47 795.677 1569.47 792.009 cv
1563.36 789.564 1557.24 786.202 1550.83 781.312 cv
1534.63 768.475 1524.54 762.973 1515.07 763.279 cv
1505.59 763.584 1496.12 769.391 1481.14 780.089 cv
1465.55 791.092 1451.8 797.817 1436.52 798.428 cv
1421.54 798.733 1405.03 792.926 1384.56 778.867 cv
1364.99 765.723 1349.71 764.196 1336.88 768.475 cv
1328.01 771.531 1320.06 777.949 1312.73 785.285 cv
1313.95 773.976 li
1320.37 768.169 1327.4 763.584 1335.04 760.833 cv
1349.41 755.638 1366.22 757.471 1387.61 771.531 cv
1407.17 784.979 1422.46 790.481 1436.52 790.176 cv
1450.27 789.87 1463.11 783.451 1478.08 772.753 cv
1493.67 761.75 1503.76 755.332 1514.76 755.026 cv
1525.76 755.026 1536.77 760.833 1554.19 774.282 cv
1560 778.867 1565.8 781.923 1571.3 784.062 cv
1581.09 787.424 1589.95 787.424 1597.59 785.285 cv
1600.34 784.674 1603.09 783.451 1605.54 782.228 cv
1605.54 782.228 li
cp
1603.09 755.026 mo
1604.01 763.279 li
1602.17 763.89 1600.65 764.501 1599.12 765.112 cv
1590.56 767.252 1580.47 767.557 1569.47 763.584 cv
1563.36 761.445 1557.24 757.777 1550.83 752.887 cv
1534.63 740.355 1524.54 734.548 1515.07 734.854 cv
1505.59 735.159 1496.12 740.967 1481.14 751.664 cv
1465.55 762.667 1451.8 769.391 1436.52 770.003 cv
1421.54 770.308 1405.03 764.501 1384.56 750.441 cv
1364.99 737.299 1349.71 735.77 1336.88 740.05 cv
1329.23 742.8 1322.2 747.996 1315.48 754.109 cv
1316.7 743.412 li
1322.2 738.521 1328.32 734.548 1335.04 732.409 cv
1349.41 727.213 1366.22 729.046 1387.61 743.106 cv
1407.17 756.554 1422.46 762.056 1436.52 761.75 cv
1450.27 761.445 1463.11 755.026 1478.08 744.328 cv
1493.67 733.326 1503.76 726.907 1514.76 726.601 cv
1525.76 726.601 1536.77 732.409 1554.19 745.857 cv
1560 750.441 1565.8 753.804 1571.3 755.638 cv
1581.09 759.305 1589.95 758.999 1597.59 757.166 cv
1599.42 756.554 1601.26 755.943 1603.09 755.026 cv
1603.09 755.026 li
cp
.310002 .776455 1 .310887 cmyk
ef
733.385 350.352 mo
742.66 348.497 759.726 346.642 776.05 346.642 cv
887.719 352.578 884.381 433.084 854.33 501.718 cv
831.699 553.657 781.614 595.58 702.964 613.017 cv
653.622 624.147 624.684 624.147 596.859 614.13 cv
611.699 573.691 li
661.783 583.337 756.758 573.321 797.567 521.752 cv
819.085 495.04 832.812 458.312 831.699 429.374 cv
830.586 402.662 817.972 382.258 772.34 383.371 cv
758.984 383.371 746.741 384.483 740.434 385.597 cv
733.385 350.352 li
cp
.24506 .695979 1 .133181 cmyk
ef
787.921 534.737 mo
825.021 489.105 867.686 385.968 772.34 383.371 cv
763.436 383.371 755.274 383.742 748.967 384.483 cv
754.161 375.951 li
870.654 361.482 848.394 482.056 787.921 534.737 cv
787.921 534.737 li
cp
.310002 .776455 1 .310887 cmyk
ef
182.086 295.445 mo
202.491 321.786 213.621 354.804 213.621 374.838 cv
213.621 394.5 229.574 580.369 343.098 654.568 cv
456.252 728.767 359.051 711.702 330.484 741.381 cv
310.451 762.528 356.083 786.271 427.314 792.579 cv
451.429 794.805 527.854 794.805 552.34 792.208 cv
620.603 785.159 663.267 762.157 643.605 741.381 cv
615.409 711.702 511.53 728.767 625.055 654.568 cv
738.579 580.369 754.161 394.5 754.161 374.838 cv
754.161 354.804 765.662 321.786 785.696 295.445 cv
819.085 252.409 149.068 252.409 182.086 295.445 cv
182.086 295.445 li
cp
.24506 .695979 1 .133181 cmyk
ef
777.163 298.413 mo
758.984 307.687 717.803 315.479 662.896 321.043 cv
612.812 325.866 553.082 328.464 486.673 328.464 cv
426.201 328.464 368.326 326.98 321.21 322.898 cv
285.965 319.56 255.543 315.479 232.171 310.656 cv
170.214 297.671 161.682 286.541 228.832 275.411 cv
285.223 266.137 377.972 260.2 482.963 260.2 cv
618.006 260.2 733.385 269.476 776.05 283.944 cv
783.099 286.541 786.808 288.025 787.18 290.251 cv
787.18 292.477 783.099 295.445 777.163 298.413 cv
777.163 298.413 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
482.963 309.172 mo
623.942 309.172 737.837 301.752 737.837 292.106 cv
737.837 282.831 623.942 275.04 482.963 275.04 cv
342.356 275.04 228.09 282.831 228.09 292.106 cv
228.09 301.752 342.356 309.172 482.963 309.172 cv
482.963 309.172 li
cp
.310002 .776455 1 .310887 cmyk
ef
354.599 766.238 mo
372.407 774.029 396.893 780.336 429.911 781.82 cv
490.012 784.788 505.594 782.191 509.675 780.707 cv
513.756 778.852 504.481 777.368 479.996 772.915 cv
461.446 769.206 411.362 759.189 400.973 755.108 cv
350.147 735.816 413.588 718.009 400.603 711.331 cv
380.198 732.477 363.132 730.623 345.324 737.3 cv
328.629 743.236 334.194 756.963 354.599 766.238 cv
354.599 766.238 li
cp
.203006 .606439 1 .057557 cmyk
ef
258.14 359.627 mo
232.541 414.164 259.253 558.48 335.308 613.017 cv
389.844 652.342 450.687 664.214 512.272 608.194 cv
549.372 575.175 575.712 513.59 574.228 473.152 cv
572.373 425.293 584.987 383.371 527.854 366.305 cv
498.916 357.772 379.085 351.465 332.71 355.917 cv
303.773 358.514 264.818 346.271 258.14 359.627 cv
258.14 359.627 li
cp
ef
666.235 619.695 mo
652.508 621.55 640.636 621.921 629.506 621.179 cv
648.798 607.823 665.493 592.983 681.446 575.175 cv
690.35 574.062 699.624 572.579 708.9 570.352 cv
695.173 587.047 680.704 603.742 666.235 619.695 cv
666.235 619.695 li
cp
.24506 .695979 1 .133181 cmyk
ef
323.807 640.47 mo
330.114 645.664 336.421 650.117 343.098 654.568 cv
365.729 669.409 380.198 680.909 387.989 689.442 cv
396.521 693.894 398.006 697.233 405.797 707.25 cv
415.071 720.235 361.277 732.106 400.973 753.995 cv
412.845 760.302 457.736 773.658 502.255 777.739 cv
536.016 781.077 570.889 774.029 589.439 765.496 cv
640.636 742.123 623.942 730.993 586.471 717.638 cv
579.422 714.299 573.486 710.218 573.486 703.911 cv
574.228 693.523 589.439 677.941 625.055 654.568 cv
682.559 617.098 708.158 564.046 727.078 510.251 cv
723.368 515.445 719.658 521.381 715.949 527.688 cv
672.542 598.177 624.313 631.937 546.404 665.327 cv
474.06 696.12 375.746 665.698 323.807 640.47 cv
323.807 640.47 li
cp
.310002 .776455 1 .310887 cmyk
ef
723.739 515.445 mo
727.078 510.251 li
726.336 511.735 725.966 513.219 725.223 514.703 cv
723.739 515.445 li
cp
ef
388.731 611.533 mo
321.581 526.204 322.323 442.73 313.048 411.938 cv
306.741 390.791 299.692 387.452 292.643 385.226 cv
284.11 383 275.577 385.226 273.351 401.549 cv
268.528 431.229 267.044 468.329 308.225 536.963 cv
325.662 566.271 364.245 601.145 388.731 611.533 cv
388.731 611.533 li
cp
.123232 .49305 .79855 .00546273 cmyk
ef
235.139 492.073 mo
236.252 496.153 237.736 500.234 239.22 504.686 cv
251.092 493.556 263.705 484.282 278.545 479.459 cv
299.692 472.78 325.291 475.378 357.567 495.412 cv
392.07 517.3 419.152 526.204 444.38 525.462 cv
469.608 524.72 492.609 514.332 518.95 497.266 cv
543.807 480.943 559.388 471.668 575.341 471.297 cv
590.923 471.297 607.989 479.83 635.072 499.121 cv
645.83 506.912 656.218 512.106 666.235 515.816 cv
684.414 521.752 701.109 521.752 715.577 518.042 cv
718.916 516.929 722.256 515.816 725.223 514.703 cv
727.449 509.138 729.304 503.573 730.788 498.379 cv
725.594 501.347 719.658 503.944 712.98 505.8 cv
700.367 508.767 685.527 509.138 669.203 503.573 cv
660.299 500.606 650.282 495.782 640.636 488.362 cv
611.699 467.587 593.52 458.683 574.97 459.054 cv
556.791 459.425 539.726 469.071 513.756 486.136 cv
488.899 502.46 467.382 512.477 444.38 512.848 cv
421.007 513.59 395.409 505.057 362.761 484.282 cv
327.517 462.393 299.321 459.796 275.206 467.587 cv
260.366 472.409 247.011 481.313 235.139 492.073 cv
235.139 492.073 li
cp
226.235 458.683 mo
226.977 462.764 228.09 466.845 229.203 470.555 cv
243.672 455.344 259.625 441.988 278.545 435.681 cv
299.692 429.003 325.291 431.6 357.567 451.634 cv
392.07 473.522 419.152 482.427 444.38 481.684 cv
469.608 480.943 492.609 470.555 518.95 453.489 cv
543.807 437.165 559.388 427.89 575.341 427.519 cv
590.923 427.519 607.989 436.052 635.072 455.344 cv
645.83 463.135 656.218 468.329 666.235 472.039 cv
684.414 477.974 701.109 477.604 715.577 474.265 cv
725.594 471.668 734.127 467.216 741.176 462.393 cv
742.66 455.344 744.144 448.295 745.628 441.617 cv
744.144 443.472 743.031 444.956 742.66 445.698 cv
735.611 452.376 725.594 458.683 712.98 462.022 cv
700.367 464.99 685.527 465.361 669.203 459.796 cv
660.299 456.827 650.282 451.634 640.636 444.585 cv
611.699 423.809 593.52 414.905 574.97 415.276 cv
556.791 415.647 539.726 425.293 513.756 442.359 cv
488.899 458.683 467.382 468.7 444.38 469.071 cv
421.007 469.812 395.409 461.28 362.761 440.504 cv
327.517 418.616 299.321 416.018 275.206 423.809 cv
256.656 429.745 240.703 442.359 226.606 456.827 cv
226.235 458.683 li
cp
.310002 .776455 1 .310887 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.1.1
%%Title: (Set16CartoonCeramicPosudaKhar.eps)
%%CreationDate: 11/17/2019 12:43 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBjVe#pAb0_rI!`jOMsV_@.0#B6kh?o'9/H/0aOloftro?g]tUGr]f:=e_Sa]d`s+>@(:9udA!SBZS-Ido\A4kZe)-T)s80b
%^K**mh9rAueo9h#s1mNAr+Bp8=nOK4UmkP$Q@&:td62/%b<`&4frR'cSX%F]cVc"ZU3'/&PVV][>-7U5AtrBV?da/h48)7N=pp54
%G.lDM3&us'bnL*IlOJ?$(;TB$m[idpC$6u/G%inB2Q"f;^3KZ_I3oEd>['"+qQJrUNb@o9RUI'*Mm)B*Q'qYs(n=Yhh0,c%D)OR2
%@%I4U,G'5rZqB<[HI>DTVgmjn_b;45/+mX_Z(XiRMgk%GA?a!]B"s%^%Y)[DB`)GqM#9d@V0gTTpeOr2s5RfpJ&C_E`lqQE3<ocm
%4Mq^D*%b[RoW]RSTO2sE7cnu[5jr\hDq.J9J-kLS>0bE(`IHB%_T>1gSnRD<cLbeFRc`^:,NF&3=82A-Er[Q-9G%-##(NddSctr_
%d$D&a\%>/\rt8$X>(V7F%h<roT`)H!m1SP$*qKOe?8O/uN?F2s.+V!aH3I.E.;'Weg?1bgR'p/`JJ9UP:CBC6frOS,IKn_&>s;f6
%'f:r?Dg8<ce'n5blT0\ga0frBAm3,-]&U<=jK=tl/Lr*<lXb0$HodHn4p)1%\aVm;k]K-q]AKc_<uWZ]:Vu/hNb%A@G-qtS1QX)8
%nBs<mq:?/WPrg?UFLsg`"@Y7E2I@kqU#fT#iR(khb%@siP'$3V#-iT/UnuX)Q_29In7T*rY9dW9JWlEpqEhT@L&^qo9C\EoE_u)L
%LYM3.YI2h=C]<jrq0]#a)J%\-j_hD!7':(o:VY:!$^l:+g<=QK<2MP:mq>J!<,F4G=HMHW#9!%\I@'sBs-r0J,djFRiW[9a<oZ\H
%CUTI]`On#X*n3fA;EMc<6jrE_J']Ph_Ge)m-3i:MWR`>,Bb=Nn'qWm`r\Y@RO4$.*YM-Ll"HSi%h*7Cr9+\0;P[_=rB$mBsTNf.o
%?WN3dPD'N>h$^M)6)2kbE$>4>nI432Yr!tKQ>3hmH+VS;W0T4Ym9\s"F51T_U=BKr*^**nN'G0<;hEC+g5Z&cJEQ2rjb3U<P/7mi
%)<7V`h\u,4qJ_Uh&gCqg;C*&86klhqF7a+%G^ciBRYhuDIb%;a[;)T\Xfd[(OQ9Ba[G^7]V]2G[9h/dOg`RR_5DnqULMqjBhu+7N
%mB#"aa!#NRX*0+t2Oj@TSC,R.7B%"UL;K?KnWNSPfeq;tA[<U5R]_JXO5=]:K'L3a=cRsWXO(>C?L5?NDhNTn<6K559'r5q5$H4T
%s&H6[keeqpTNs_JFTYNP9/JB\DO:4_PV9&E8ip_U$mW*k6foZj&3m`j!B,?c:L;]/6>$%L(2]Qh-iGIDH?.T/eOoRFaL"F9/nWK8
%jLh=o#3I,.SmQS<5SHo*/TC8B-i$s3U3*,j#-(iu!>$U6(,/I+j-1C"1e_O52=/Ye!%p#'[\-=3Im6j3o5hQ1(e-V&KYO6g7dY9P
%FCM`25,CfU;%?'*6@<Po18;a+%A;+A["D,WQ:<N^'5n6u@l,`r?@BTD/c>t'BF]1UX[uenZU]Xj>3Z70G4<18baCq[oZb-&i#9k8
%DO'#1d/\?7*ca\`#a^pL;V;J25ede\dAABQ*i1]XNF,J:>9OU6lVTo*>=#khYt>AG`)CT4kDl"EFue1j6$<V8Bc-aSs/@a@3kX/`
%VAte=(q2+N*.rAn.SCp;^M+MN1615,EZmEcXNj/CYleV/69/fsb0<8`E<9R[6b0OHM*1[hb@\.<$g%WpF5+N9$ACHj_-DkVh(4k]
%`H&:eDALF?@_#VmG;]<'VC@g("jA72EZ;iUTQYESW\jaGMSm!+0a5s"3Zt:]hDq_2L?ZK&%1YGT8g3t,jV$9HDPfJnFr_LH#lRqN
%ju0o'm8C.:WKnGA_g-46rT4gL<_9%g/%;G[RqHB)TR.+SVGn"(dcgAH?ag8-3mBc9ZG+Y$2N^mt,3Sp]Ye<i,GgtX^UHYs,(K^UK
%(`nM[%-Pr?RV\ml2a)2&.q#/$mca;sB;KWf<%b#B94Ib"`HE]g,(](19'sl8UXLePdR_m<YM:%D>'^1Xrb=;0_2SGR^G;J`#Hi&\
%.<%-3Z(misMY+aFD+27>_"_gT0`HFb5/ompg?@t$9+!9L^24i];;IF:G38FUL!qi#LE*9b2"nZ/%C7#&H-.jZ)PC-uo"EI#;?<V;
%[<ka]\nTFm-V>+IgNhrk<81-3_<o`qN/$>4=M@B2!gCV`BY-r*Ls%NN__=%`0^.Ok#;Zetk4BM28IU2hP'!=\%.B+II3&BP;ss$H
%-TuqE/nS*I^InOlZRVSUd#:8UcXsLdgLpi.IoDl7N.$Q/^Z3a32AHmcI53he%+AM&PU:B,mLkifL5AL0<2sX(2jJ*Chb]#L48(V"
%U+\jF<2oT>B_-3&D0rt@G3]4#"]MAd0apFt<;DTe)OmVIAlG\KB$+nd]RGds:W:S5Bdi7@6]$ZI_5V=d9h%lqJu`9T;s;u@([``b
%h4KES'-lckMI%\"DLW!#:$CF4<#0u=?--6%K(1c`_[a(%anVY4@U_1e<(MHfT4\!ON)K.F-g_q:gV"SIR,Srmo:j`J"LY"t`inu)
%F/j6A/%5[h5/gCJc/H;2Q!:[TKkdMc/!U4LroHSJ245e()B/(p9=.r]KA4M(FAbqGEpREWO(R27BDe@)b`uQ.`35qej^6KHe`"GN
%eoB\,@FrWQR-V3qZ1ci9[kp?DN(QW^1NjCXQ_^p_^Gpd+DUN]oZ7>4B>-"JMSZ:Ke61&)q>!4'$e'^\/\h,Vi!B[9U@4>2+<P7EG
%"[MV->I2F#LiXK)V\1sLn$YJq1`L/-;_Ih0]k`Ym'D,-Kh\K>%C*P.'./]u>]SuTHV>r-<3l]2*XPKtUd;;#5[brRar[e"A+[Y6@
%FA)"cDM=I'>9Kb])H:\`+9%F3(bJV,q6st";?XPT1a-c.Q6V;cUKUHibEdV/%]5mR>Bq\J;7n?V6qKb&M2BSkPpg,cgp9V;@E.V6
%o<W/p1,5MpVN'11QD.(C3s/F7r,L&]cY?=shu$/8/P6p(-:V'4L#f0&C<""(,t6$5X$rH,U<I@LDPS4`[4(&NlV(5/8h,m6h!O9\
%!gHh>auJ^rBrFHl"2r-VKP@PW8S(I@,_c+G:MD/\VC%SZQk3FrG4W@G[=g>.9O;LiaW\T@h8O7!@&j&>k''Q-gem1o(FN'-d=+f$
%Djb>*7%P`$52BLVApWhkHHhlB[@(?j!54\M:M4ujVUoud[b<PnF4^CI*rlm/XZ"a6D<@tF[+Ytrg<<]hBse8oC,946VU\RY2>'B$
%j;6F,9VQQ#JV&AtME+N=J28pk\JVk50hR"KR2F2eW*bJnWdb2[K3IO&aY_emr-,d`ajr4jM?5fCf>CQFEm!/DeUQtZhAk8JA($gT
%k\1rg9L/=f4eo2!>"6!cVj=$+=6Xr*mj`aIq)p$qZS",A/i?]rRF3]FSJM(ON!=*m]$sD^GF)1(Gk,(N<#_+\XP+NjWosTE>!],l
%87fN"\[NK.gn`uR\@G),l!@d]m`p5A0IEZCs*kTahdU'p2nXW[U='S4V?=ucHE5^Bot90TnbVm7&Ybus1TAE(.<Y<nT8)1sFRLQ#
%k&401CkcsenQK=hH@D.5ea>jhkbd=HM,FR;;qht[(/k#6A)Bg%72GT;f_MBO"=Dq?$n:haAK!m?N]A,7_3og>+)a1K/"K>K?qucF
%SA^&9)qrq9M1B1srKa>Xr-'%tG0\B_BBR%9oAB'us(+sE$*^,*VW?IaRIBLdGBW-GDgO:^m*'ZsjuYZrSXoT%c?s8;^>kCHR.rJp
%9(hPPQfcO-A$6)76S^Bb?qS^i;^==Km5CFCEl]/5BQN8S@gnpdUSF(0dM&s*$`]gbXk*Dk1ha;^q*gVsABX1ARf^2#0AKa^+bc3K
%[Eg7G:J81XoTXN5gs!TVA]Ub0rO,$0=3oVecr_Th&?Jc/<BY9'rhq_j6$K^W<*#LU;Iepia"2AA1eXCa;J3>cfbC:.;L'=ir7NWN
%pA8O`Uc>@]C@kTM4H2,jem'OT"\bcm<pRHeYZKR*KIE@9bA!D3Q(u8\k_r`J9dtn&F\aKjM.HKY.k$UDDGSk9JLO1!:b4<>;7lfl
%#hs9sQm2cB;XSFa-+j#=Z)4&HmFGVrMCi]K@/Q9mianF#q1[*QdOZU4,-rtnJ!hThAr2jWianF#R3c0OM3hB)j`XaF$;)(G$)C]*
%l%U-;Oo`l[K/@`hUoEZ9E?d5uI:hh)hCH?8br"+u->M*!6)cn%eME%s?u#R49\\;=d[.\nRS8YJ%--2T,#*]EEGmUpL(=6l-53k'
%*+rQE-GV[>pLM;#0](1FT,G[(0eD@&*+p:ZVUIM"id(D1D!RnP7@\L->5D_9].Y11PUapBB<U1f40=hr;):r"FnQM$_e.NRa2N^*
%r,q]I08cj,GZ-%e\hu'bG1Hu2+@/)fUh$]d;$Ue@1s@Kr#kZa9_=6b``G\];pR0k:NA86+&[Y-'lHOp3EML`r4DL<)U<Fgg8Vk`8
%9:HmFTmp)nWTp&8]\B`.\sWbiM]c:C<&F-R^kniL=l\MV&O#"YPZcg;_1HBKpfhk!dfGTNci%XF`u'lQ`L5gB-HFN&pcO9ib@?L?
%3_2W2=WV(=`u%lDRhVmJne`$9PZ]&;'(QlqQ+NklFa:;aGoFtrbL;Od3GXu(h,<WOZ^RbQ?[Qc;5gf.49:(KTPLK03C%U]f7)U1H
%\mq\&D[RsFQ_KnmBrMa[gVNVjcmYfKeGA=b)Ya3iK",%MOE&dPG0@c9mYR/;jrIN=WL,=nHU?9^<&GS_P!27^flC`VVe0uGe>+j6
%BC0:oNCr,C[fskfG2,[L8ka]O*A*W;bt$T%)ZRKrHVhr?#6"8&95r[%TD!"F%$R(nS@Um-WA4e?*])$oKD[oiSZ5)WY"_j2="7T)
%WSf9b%O]0^@89^PoA<F;Q%fUc]]:RP#h*)KeK*b;9j/kb!)6<C5"3T9"K(1dl-72.;]9uubPaM3\TBlN(<tZq[*58T=Z#kkNTO-k
%q,oO5MrnX!goRgHh\"22BVdD6nQZF"B&VMrS=>4RZZ'dtcHX5:rWpT:VJn.&0U!3r]koYXkNu.c2*6`X`Zg_ll;J8=V#t2<j11D@
%IE,XYVQ?gdMJ-XS]1PcQ`Rft8/()#tP5HTiJQ\boak(@8"rS*,+QIVpN75ITGjMh=8iS.eaNnT8d"rQ)YFO09jic25(i$KOj_FPQ
%8ud8VVu*fdk4Cpa]4E]H!l0YWU(6oagmf![RVM.KFc#=h)LU<rd=8@OdW?h3a%a=FJ"c&8laG<)9T2=8ordrSUuYHB21g"@bm(p<
%5#$j^s,Aaf:@QY.\Wk6H9?b+%W;aG#FW7fEdh/%1^!9TV_"E39[bseU(t\#[cV!:A/_Q<9;qe$eZNa*pC$9QuV!+KdeEF*#).I1F
%XXP/E"k/e:>HRWtS^U%aDqTOg<*=e@V)scEqOJR6Mm=]fe3nV(2gPl!bR^/qe-WI\j6GTWEd%Tjp?G^s%DEOb1>M9J?`dob\.O8]
%=!lTLRe]?-TBP1q'-0X^SiK5Lk7gWr[eiO))LH+8<dd,cRNR!/r=l5^;S1YrW!B;Jcqflepl3gCj*a%01M(Me2pOl[EB1+T5m7=R
%`YjLfKXeZ`3i%R*08IeD^n?`I*JQEt9>Fr\N8r,Ar_&2[H<Q<A?+clc5I6>Z@TUS*2Q!1c\D,"[FSN>u`_"AscX&Lhq+f7Xdc7h)
%@NmgA$@DQ,CbRW$^AV$F-#K)4Zi7D"VU$.or?`gSiJi]Z-!DoiLP^l7iS4"lc8B/hPGl?:@[G)@+m9e<r\NcIBOirqr+d3N&Pg"3
%aKF*1^UR%i``l/2l#!rpmZK;961i+iaN17J>K=Ie`;VUNNm1<dF,B-TThTKi$)D]0PiM"C'0LEVFZ0RJ`no2D4)0(B@J@Og#:]'Q
%:5hNde%G!l,5pbqC%+\KW>"_sK.QK:Jp+EQSu.auDmD`oGUV?!SYe]j6t@[)9T%:9#5CpHlrITh/SgPZY>IKR82W.s9U9`U>%ZLA
%CjX06\'8O]oII8->:g?D&-l9gO5$L#k:FlI'ZQ6t!JO'6:RR8%Fif]6q9icFs1%UDW*/EGImFi&H-=fS^IJr2@YAf$%65lZKh3f"
%r(T8_iCf9pniOF+ZIPmA014_R)abu+RuIMRL"k6jjnM;a?>ZX5r:-DG/cNs-T,lF-oQ-Y^.75&s=.6$QAu"2J>\%0*)Q!%uS_7p_
%BTJoPb_T%R9=7sr>j,0Josi\V/^r$Pq-q.[b6s`.g^jLKgs0g<D92\V_6=q4E+OoEnGbA*s&K'op&"L&BDH`F#b@kT,`g7jbs*0F
%(PHi.,On-XeCnPESX78A/@.jsHE.fLPI/OtIY:]Xpuboh,DYn9kA%Tj3Z0O4fY4MXpr,!.e&pSna*7$8DY]a;s4)8DM19f;a"h(3
%cF]_DCR9MI7Upo\H87-/+$XP/arg97+[h!T>bMUIPrRDuj_#Y@;Eu7^Z\).-k]R%/gqbF,@r$f/(gPtg(`6=1%.)g%FN9P+Sc<q*
%hsY[AS1Z/D!Jkt""[8+lr:-D3nfZ`4+$MT!41!0r2t0a@4kPQL*c:@X<8OD5-Ra<V4(?@iA1H"Hr8H&LqJ!9jV>d*e:\mP94[Ets
%cn+qV'RUTe>sc`ia`9?@`l"DTlUV,8koB3_E'm$W,?+6L>36VaAXLH(41Wr%c^i9EBQR!uPhM\YOli5^j+EKQF0qE3o$<._eS2FB
%\"J^5$)G+bd\EK4P&ZWd?0_'YYlM3u!Il"QCX)E]0X?lXmj+G"/",Ch,N;n)C@3>fXfKMZV36coe@g"a6Re7HSSke5)qDf-5^>09
%\+1b,PaHeB:B.FI]$`%D@=o"87?a<Artf]s1qK"<J%_K=''7ElTAskHa$EB[[;'u5e@;>h?=s!e.+PI$3RqnsGn]_+JgU].F>"*c
%>pulc^4"qFL8.lrTc7.)brb\\/hlNj$CF;K1Q*94#u%.52O_nVi&PXtabSRXcFWo?lM9Xc.<"A6Qc@%)@/VK/`;EBonaIdE]T'lo
%l9VmY+U@<LCrZLqS%2U_=cu`HVp+9H3u$64>4]+#3t,<+=skkJS3,-8O#Lf>:cWF%hC+F[IWu.;3rEKl\b`:C8]^Kb\t4a64lhe!
%>+*'%j1JGS%l+C7<j*6UeZ]H8qN@I"[C`?];S/+NmckZ7F5@BN]T/N;NWR^m;bn&\#u/4I%WRoICf&()lud"Mc"Ol7>X-[e[=WS!
%;m#e/EEVN+?"Ri?ge+DCc,j+c';Dd4W`8h]YEq;:rF;[-[1fmY)!ePt+k8s8'85b?2tB%uI';;K*0rYATO%M7#dg9JVi/EB<iM&t
%lND(4688?sk``*K=HjI=gG\HXW7FsJO.<86HfX7Tgd=V7m50YT!UV#fjA-&E@sVaoE6+oGV8eQok9pAAZKOS9kQL8p60:0%X..eB
%<4f!UC9?4gGt"_<0n5>Zd1%#40"aq<UL]9,R0&I'K$HeQ/EWtV@6e5m\cW'P?eFgi>K!<^^1&O9P^C5Q?hI"k+gW!_#\jH\WFaAL
%NKYd?Wf8.Ml*d(JZ15Eb2^b`\;,DU?l4Q#=nNhN"d,C#j>J=e=?F*n:!CM^slAT5+H?aP10m,.IkLASLAU^Q0X49Nt]F!:gJb81,
%l8f9>V+.q_+fpnh.Ike3IYanVlH_FM,1.+6FdnYXe@$1@mXR4F$4(i?Jo).2'BmlH^UgZc:TE+Xp+'*RHd,`q[M+S`6\&j(>i#;i
%Zs1W0GHSfWI\G#6QMj*F,8hcm;W8)Gf4(abX0tQ4Oi$mOK_Cr"&;Qk\6FkdP"I0#cPZ`Iglm=s+*P&@:g.5ObKUp!;2F+%/(SY=u
%G2&=t2,A:keS`&'ljXP$FaiYhI[N8$'q8iK3T2-93c=0ZHDu>G\M@M6YaskG]hUh31XC_F:)j=intE3O$FLX')AKS9kY[mg/QWO"
%0s_#M/)%1V\t#[C/D&*_<U(h\[7:!uZmm;%'tM\9jrfhq>&?:g3^hFBq:ndNI62'[")1;IeX5*toUJ-fAg2iWh-:q:p!9_jM1]k,
%;AS6XTo4f-h.G_`\YLGT1L)cKXmEq]r1)eQ5<luSo>G7:&M'9uT:&$8PYlc5^Z#'L!<t6oPPl=<4tD2tCDL^.S"HIAl^rBT&U54@
%:"N'jQDaqWl?Pa>%ZMVf=\MS%=Ea)#4L9<6XT`DcQ9%?2>q74gSYX;+ODF5g4Z6igVNdPZ,'t,Dl#grQC1M>Z[G9A.DHCl'G*Nbe
%.B."dc9*=]F4"h(2i`Rr:?0d3&UIYDpcNa`#KfWsJH9LLL.pX.372Ic-iOq`BrBadQ%*,8YJd5WUN8"?e"eTVZB9>n*(hDWXjfso
%%QX&?!8(s^*(tJ@>.ol/nQXP!0ecB:qHFPjCZZ8MGH9P%KQ;f1e.RtfLSNJ!MlnePUF)8\c.8gR/^gfP``[B4]XC^u1@i!F7Sc\E
%c?07`H4u108MRiX_DQ)6C2-YV6-;r#b`6n1@^<S/6#q(ukiOA&&_^#SC:2BV=+0<3H(Ef+,a7@5C39g;3$K=*Mfd#DL"CVkd6"m.
%E*bk5E;_?_k2a[.7dps9P3H\>=KSH1]i#!k?p.!n3u=_ccjm4r(1m_UKG"aJ?]:%slh*tn#O26&>.J1j&gq>gVR<TepUWLulM7)4
%@*h;U*gMh,&8gHa,1[eiPmlOB:IRgt&T'kV&";0fQ*8Xr4JQs<q0>H+(Bkj5JkEFP=7Qs@64j"Q#S3_:Bm3HW%%_XnCQu#4(,8Ab
%W"HoUhAOWk2&]>dm@%`66\obgoqLS-S#%b5bJjGI_n>5H50`O9m:UOYZ.uFc@VD5'Bjk,b<[[oBo`>@YQ8Aoa=1*#g\+*'7$W+#+
%][d[QB/[@<5pFLn));nCk/7!4,sB_D*8<M6)O1n5E\g6p+t8^OZLFg6ICQ<s-5+FO59JuT,;_#q8'Pe4[Vg;@-C6]QH9=m5qWL45
%M>d2&F]JLk3g\A4\^6>ZPfnd-G6X4K[s>PPDMLhH20WS])Z);]Fd0rMNY(pRbLb-)c8A6AfcQ<@)SDEs6l&P>gL?RF,bR&,!pVJ%
%J@[de0Qb4q.8P-IFLBblaN?-M&_XILrbP^Mf]sk3Z^$n@80miAa'V-i'iLpIN#h*0%]Y!^[=b-#(;pVj.iE'+mWQ3A6,]'<2(CAZ
%h/=JP^EEI**q5S9Mf3U,rQ;TS6hun\>Dd&&pf<8bl0;\QUD`5c1Xu]m1Ze;/rlI[,+2NkAX]m*QL+18?^/d<&OCc%5^&#(EH2dJe
%aFBIT1:ecF"q\AjkY*7u:7V?o;lfRN?6C$\<EVVLn"<K>3U.50j38!Sqga1?NQr'<?e<0M0V<WM&e;Bigb-!<ULs'$3&SG_#=Cj:
%^iL_\8hjBI<c))S8Ahu,P5)N&l'lGWB;e4Z01[N)=b@,cfSn$4Ak5^l[(_b"o-.jY3i*o@<iM2^2&H%7+\go-A4dki.'Bi%F.rcA
%>ip0a(T*fFn\)lX5F]>[MtepRCh-)'itL:(=S06oCgV%8mq!2&>0>3EUBMP=5?O*b.L2@k$VMpI.uE`n`/,tkW)bL.UT+g,da3_m
%)?im%`J]R#bNBHZok;t%ZZnjf:8ZXQ`-%F%&.T2\JlXM5X0#7pScf?17g+N#+,SX,"?cq-8]AD/fU7%))estIo^q0Z1CN0k"7e^#
%Y"p[';if\`]"6oFW#0qZ3925-:=P6d]P"/OUO0IjC-+-+Ns(k,]>\s":?;8XftQ5YFgr'5'<Q@7j"OUWS6d;sVE^Zcm`@,NNFr!<
%[N$!;eO:eRo4k%p)W0j8'S#SO&K\dA[,8eNpF$^bhVu<^48df0mh@Tm2S+[Z:+F-@;13Q$c74q,A+0-$0@)X`0ajR8<XL)"+95Y?
%_8>_2YC>1R<GS.m-dsi:K!lgA*-G@H>jB:"*2NBi;$T#oDp1A6S;P,=%[s3$J,V#[;_7n?W`i`4qtY9^H(gtea\J+=i2.p[83h:q
%F+bYL1+J-%K-?*3IeEM;4ef6b'j8V)/4M]\B$6f)IuJnoOL4atM8:)[9uY3`&ik@a7%]As:Ee"SPs/:kY1Ibem?:SgVCYZU&Sp`4
%aOR;^<MNO/bsWkkj,q8ZdNf^MT^:iLA6n.K/!W+59Vm;Cf,GEd>R,:OK;J@7>Ja+j/@@l+<]+nW"t+StZ`7`-7Njg@9Z0++R5hEq
%6DL?--!tOK:J9NWda+TBq-+7@qg@!/]h^^pTm@V(^B/<\9ZbsLNA=A5?g4^kr*(QV'sSV[S7+Ch;%5nGr6aZPNb9.VS?;9,p,VI'
%re$8iCMt:Z>V3Wng,0u=B/eDrg\$Jio>[?WiglqALRZglY&iKGrG9Zf\$H!ZqoK63l,qk\LG.65]s:kt11#3H\n0^HZqfRaiI"5/
%^V9OjpLntlWRY/?4?&Sj1$bleGM;#Wh<r;YZWDM>CK>D]=ag4D>fc"JSmQco?KF=5cn,sp<nn5?h86YI)qKf2;SM#Clf<8M\eg9#
%S9qqY_7KYij'1p0>C'!%9\V]N\CuA_5BG_pqY2Lh]U=+&r2JtoQ-\c3Qc7;:/"KpnZ*6(:/'`'7cKI!AYMrWXB&W+J>BcjN?@0/%
%[W0^N]Pp+!$&j7[:akXVhq-JO5("jrU.ohi^RTdfdVfZ1(Nq8iG;cb`\,5urm(J/+`4JpD8!!2TbqGBlb4_n3bmWiJFY,gj5$6Tb
%\b(#aIIlF`ib$Pao]49b]o1E]\TE\cWf((oHPb\h]!bjagXZ1.=/oVN.iYn,V[p-$`D=2FhU-uE!+95`Fn`bKa#L,<5-O,gjbNNJ
%a"LJ[h>4%i<S(OES=01rGt25S>g];mbD"ct)oA-B0Q>p<>%OPA\Qg=&lRs=*B:"40RX7jI0YH;4>Mn4=]D$Jaag]Z1TWn%8\bF%u
%CjoMlHW0aM@[u<Pbj.H,bRmBAS4E<=QB0<qk>_V_HEqP$i++-d^8^I5qWE2Y$Ho9R#K8c_+51suK+G]c.QiD+URg8tZ1sC!-cIt=
%gY1Dak@4GQdahL)Rdo7e+V&t!/O"Hc[:BuCSj/MK]m[Q%>5@m_$WAk80s.q"@>Bo;=W>!#(-]cCd,uJm@THn,R!iVBE5LfcLZtf"
%HuQfbo>cQ'MhSM!kMNa@V2+e(SC?)net*UOT&bqcb2*!3rUPmEZ!i4fo'Y]8pZP88%pSM:54(d@'$Qj'eh<B[C0iLDIMNR`IC!m9
%ZrLP!d^l9/`@(C\h[1iAAU;SOM8&as_g8dr>]7))?<\p5hEGL#H$6U_&-X.-/T*ED0E'NsK!(h37$SlIQD2F$/jA^J(CN*K6ef"M
%kf:,4'am0E:7LRMa5+B'j5"VA.Q71&WLuGNrk%kEN#b9`IEtpbrM]!%qE]-#6#0p#_E%OuFfMQ,.Ko/4Oqo$"?B'+P0G:'hD``HS
%X#&)(A\T!(ZHmTGSSrC;C&pV#n*#,sH%,e:`f&j=frh7;cVH(1bt@ptCXN6*f\WPeO5Is845ITj+#]]2hg=.f$$m$I,M4Yc?d8iI
%XB0162PtZ+o!Wgd^]!cHo\38f]63ktpD6o5Q[Lhrh<?cB2QNCK_l>Nin\A8:\+;/*CGf4>:a_Yp>QBu$=F@dY@5iT!q'XU)-@Iqa
%pLq0c;Q8i?^?uc&X,lG%@Y(k@c^aq'Mrsj3S)^&;EQ`_%NZPO8W,6s?0[eZYC;)N^&"Jo/7/3@g<PJD1+FF4u9!'AgoRi28pIJ@L
%I[E@$[2u==?Bq+E.XYp?LDQ"lq<.4-)Y=k8UPBLXerSVlqjVriO7e/4H1[bKQ@JZU@1j'.`KQ!;(CUQui'ou+AY8[E)R9>i>UD"_
%o(>L`<k"Q&9?6/7KZI558]9NB?[VFs1&9;rdF*>NZW_cW!H<6:jgagXq6OmWD9H8D:DoVm7h%3Qpr3*b7Vu5MJR0F.6$9l=eOS3e
%Rm;&^%uo2poD/4urMXOGch0n:r3lM%Ytr-JHU;5=F`gAB7me$Q96+c=Ie3C5q.BEHDtMe9J&#Cu^E,Ria2F&7<fuN-4f$uL'uUe[
%k/Z\f/Tl]5V(T]IW>GE_:pqHoA,!9,OP:@o_X;(PnJL*k6cr']c\7?'0d]t3\G.fRH9[_VVQW1+DiM$>O5VDJ5<`)]^>%INUKOdm
%dZ9H7'q8\'Qh:oPCTeEt#aBd_pbH+990S(W6*4qdHNRaL;*mM]&];,b*TE!c.d);/&u$k,&MYs<;_SZe%j%:oKRbBnBG-ajA76=n
%D]rBV;tWpKAf,lRif+Imp/JP2I_!V3r0X2Q&iaN7KG[RZ`oM\qAHl#)DA=CN*WW27P'gZE7WLTUG8]>":D-IBHLt0&Rg:7u0hKe#
%oO1=r91$W@OccT_f,t;JX%I&mN'-&'kYB/TN:hBj"@EiMnk0Sfj"C^a4Q$'@bfHk;`)Cp_5CLB$%tA)N!/Q/jV#,GDonq8p2cCV]
%5MsO(St/(nL\#elc[Or9h`Pfkf6.%T*j\#=I6u5:4msd?9CLEd>4JD8r+LLY41MW,p#b):d'dNS.mA^I.J/Bml9'A$`sonb+fi8S
%"E1kI!R:3Fk99YS$Qk.Y>OLd3]jfj2]YDWe65$(_%Njmh??91h\$AY><oNl'n!<g;NKYK7fJn2J5O.[d[he_(kEDOhMX17H.uZIu
%(ZOpX4CRF5nb;t\k/IFK2U^ok-ZDF]._N)5XGR8BY*NE:k1rhFLP=RXUT]:caP5$)n)U+UI0C]rmd9]&j`Y9$BM4t:ce0F>r[AY;
%(:i`uMsKC1FudFd!irm"ld*E=_V)!8d;np<,B;kspJ'V*S&X9Ff1/J$6R@&;)D/pe$K+;pr[trm/:;ekZ<@.g/?bYqkK_3BIA@N[
%SpY\:_b(TSbJnF`oPfk+TAuc`cuQPY$9XhK;<$M*iB4aA<'9-)q;a%dE;L/)0,EG`/m"Z-?BOkPU+-bT>S?eoMK-!3AY[]4i#.`/
%Snd+LQ=3SY^>r.&-c9DR#>YK7a)Z.gXG4M8%M+`-J[/;U13gN)+B928?Vd9gL$eX&)+EpsL1Y7+0Da:KF_BZ3?OS/>D(C#'f2m[4
%f8JBeE*=e0$^E:eMB'q,9CnXe:h!e_*aB2=0=U`<o:pZOX[_c[1$@0%O9O4$mOs(^h"'=i`iF`7K'%L[V+_$ahTt:j]f^U>/1ac;
%%q;,K51&*.hW]U"p\_B58(.@X$0/oLBX<!Sl-@H2PO4QtOM=!BLlAn-)j`2namhSTMhQ?Y=d^o^QcA&InHVq.5[15;CDsIXrXoM:
%&EcIn'FoBaYC8<t2>Ql@Lg.DkMbi5p^5#KDG1Tff^V<Dbk/EnPiqrPHmE.A^c/Z7;rq_Z$FC6:TT'mNt)"3DJJ51H;dHNB^rE#e(
%kqQO;[)R)ul_LALY-5QgQrB/_L0_F'HIb1QQ9Th(H;@==WG0=IlR$K3=Z4^YrM^:fdqZkafeC.fUT);-(os^6'Orq]KY1WS28dO#
%.%FJWd7>umFojB^#=B:D%Vi&`K)NMfI.I:.UT7%ba9F'YmO;VXZ$16)-j=IZ34ljjm]_j[?[;J719t''cJ;r>;e?]""gb?"c"^\_
%h<K<BdYG[07I]Ch:th&DgFbUSlLaIR)j]C6W:)s%=\H7L0<L64T)!raIG!4VI,peH-7n:C0U-YYhKNmdjmDg-lIiMmoC\Am7<L&Q
%^I<tIT-=dT/&&IahKd,!/,!4Ce`J<Nn!8fb+'&b8CO_Cn%-QK=FUqtOiVE#%]CGLK2mp>/Z@#I:Dk1R$c\8^c!YWFU9?e9d]Y0p:
%\5b_k/bF<c17NPQG=gN=^[$'/?bXW(n#\qurTr)%YKa8[Z[OQWE4GgkV>A.m,HAM,"PP81O0DE@Q\fYS*g,4Jl#lN,ojYK3WQ(.j
%Fe\O(Sb;GIb<c%,kgdk'VlfQ\rp7mm*$[5V:HQ;j4^4Fpq?q_Dl)/ki7_D3$Ej=kqfo90@4!UW5r89\?fmgcNg@Fp;^r^jq)k-&<
%YF:N,cJg9'Q-/@cX&D2m$_%+S@<")B0([,;P.jfbmWk8+oY%iMZN$rE6rTAq'jfnKNQ:.)+%^\a0Cjn=leem$aM#l2p$mscqFYb1
%j?.SAD/[/DI.K18)kG@4\80Xca21UIn6j.[CNQaVs3&);A5'@3`VJ>fHiC?I`NF<E,p@?JDU4m(kP+R\L%BY`/U+%VgE\/GqC#ZB
%\:[oN/80Y05-?KmT0!(;YAKg_IqU.aEj7Rlpqcp(ilSk=7g.f1Vl_W0\n+W@?:F+%GO'A2d6'R(ji*ti0n4TKi(el8T'f#4m`D8j
%jGc<rP/BLK%H3I_pPPI9cf@0jmiX\o/1_gr;4:AKf>#OJ*Tp`.nD(LeDU]!:%;k;CfS'rIWJ,.ukr<_<*h*j54hY*-Hd]bcd7173
%4W(CmY]9KC]=VLb^\dl\j%n7D<3T!p0<rZImLqhIEp"a&-X0;F!1id0m,K]2U]do=hP1A9K-.;%U3h)j()PgLFS!i9lP8N\O.X1g
%'In6T.<4?5H^cCZ^OLMMCLa'$RpRgb7:`1"&#"Fg?T,Y6cMZL%iUfuicJSNQ?7Y/RNOt]Jm:.'=!"K-5?>_BF.Qi3p[Ocecj4.#8
%\>>hB(K^0_G=/CESL6dD]^.a5k+?HLF"P#.;l\)J;+7mF"iARJ6R^MjiVCdT9rQ@5,crZk%c/#R[I+>5^2[>ho4U^n3;5;Ej;T@1
%k#[_dVk12sq.P4C"JG1fq^"B(>+b+B_NT4H/^Eh7oDZ_,QhQAkK,7%s\X#[1k&#(ODJjj+@\K%C&cELB?$m3NGE;0/k3:c9lYG2/
%_ViIBeq7fbR6T*#/b?!Hh7Lm8o,FmBju]K5Ti:T4Htf.J%nm+hi9^@"O#bqK0G_ro#HjabgoV^'I\(Ialp"B8X6W0>\N^E.Y8)R9
%DuYqq&3qnD:cd>0Zotnsfd!B)lm\.1Hc==L!pfU65N/A4p7\&M(PUZD`L=ZV:Rn7nn^54:6f*q_8!1f;NR'.W"2Fb'T&ViCY>n]T
%>fBX:\@Qc@Nq9GpRVKuLQ*]KJo5.j21pcPL:\X?E/Uqlr3YMOjiS6TRW8I9^.1Xl(Ze"kA4C``UO*PNDQ/'nkqZlqlhJ;/OJ[*s`
%SU.\2G&3pK>HBj(Y:o&9iEjA"ar6G)RkH7<pBK)/F>Q+p\QmuPD*H.'R!8JdmH:V"f:BMmou./nc&ObXnO]=dHq38#.Wk`>X!n*p
%"]cJ-ZP+PDZU`op*T),[)/3-KhqAUu'd*'O_1pLpTMUFGE[>hj.J7tIe7ig$[dib>_0TOfnu>pHSY%Rp4EX/a4QU@T3dXP)h$6#c
%_FO(SG]eOD]/RgAPoai??3T,nP^iAiKPY82Y,f]j\(B/R5&RRsM+%[Z\Llq'Q'YiQHc<0qN&irCN6^QMW!r>YfMJXM,[Okf::pEp
%[c6+jiTrkrT$r,EI9\n6jd)*kWI@u2-]3!e\LV#&O)Ui#fM<H-Tja+J@$U<6_hUrnJ,=URmqm9[W'_[tDl<5F]sI4rDW1EZkO4+4
%mE==QBHeYqC6@15CQTt>[-XlamQX8>FaVf=kj-p.i^rlc[^c;j3)6(/3@lg]fn=@_!Ena]m"Iq?>h\'6i#R=$3^(d'/Y(Q+WdU<e
%;IZ@!M@?sj=ct=?9Fb#di$`[<ioAbe@fBcK[IU'@CF6BENq6QN%h%LDdUhB7Fh-kAR9RMYLU3PR.&G$aN_&l)MQg*W]U-n!7Fl"=
%24-Y__$B`0la,\^TpOs&bu`t\4NnRuNVj0iW5f8bQ`Fn)l*g49GtuNMW-;L'Ma<#.P`*8e]4!?,;.m48=XfjkW`)YP^*bWedJ#\O
%f\HAh4Sc^1W<Up=o>\\U]re-W)gCMX7QjN21;:gJJ#WQa:VK'I/Y'N_%S?#Y4PP=7de_)n1D6H+fT-:`1Q.;cSS*lTSG'!r:WXc+
%8dbIkpC5tXPYsAFc$.!(CX26uateh?l_WU25#9T!X2CdNm[Z..KgACMl->deB6gos`OS-UV/Pm;1,uE2i59i8E7Xs"aGHdFM/TBh
%2`tW9O10JHesH=+%gu^f![oLB\5htQrSm3/1QQs*Bm6t0ZLhb*+.?l:j/lpc.8MSgFn>O*p^h*%?=MC2!\J%Hhu)>67`i`#iH+\j
%]u8<BX9r!O95e.T-qFKqYK/YO;1,l:=+"&0i[0PUhVQQnFr0W#lD&.Nqci12V$`P8]JZ;'iVM@8T`,6;\[=hcr3O#LqBan>+)e_<
%'U_uM&7<_Ko$)PYN-?XM1$A//l`6XbDn(dtA%hC-r3Lse^enrs3F%PCa$GC^Z+<CY-bRs2ie-X3<a=pS]CWgfj#F[$F6>O[re%Iu
%-bHX2dAW;tqr_nP[+T)*#e$FF<ptE`#e=)c<;p4NmUmJTo'JN.O)t^Hl?=ZoG^[/_FR,H7rnio(U8sji/pV(&q)V1s;rF76aX_3+
%2q!^);$.]fp!k[-M5?GOr;$-YOf7Y7a,Qs`f7,5K?"2`':qsc/=0'i,RNqa$#%#j"AZaG+Q(,JN8lp6FG,K>J_95R&$aA?@X*rA.
%=.cY.\Yegi.!'X"$D@2^GomDqJVs3[kjl,AHH+(b,r58IokD4]khbPGs-[6Skt`'MHO[stD.l`^ldn3%_T_r"?fpJWItN4)3a'N0
%OL5bug?Y\i)E)tp2qmbjHf"_sa+&Ef:VLtrCP#I!hhPD\M[%;r5Q2n=$B%.C_E[k:St)8E,FWj8%+ohWVt'd$%boXWQO3,9c0htk
%3p0/dPnbKK\(!B5]NZ-2HR&hd(St0:ZLY*HW76F-qQ>l09C4QbP\S`@h]gJ-.k@+6FsC\\%`ZYK)%+TI^8:QsD#[bQXlI`Be>bh%
%\D9+:R<gYtoI^X$U5D,Gq_7k"V@D>P@B!/lF[j^&$f(caSX;@iM>"E_IPY[1)pSA/I%ZIrmouW*;0^irDothMM?Y6-H6opdpq+23
%s3:"HYm0V0[Y%Ji<::7k32s)fs7%0q1V]#spQcP[-59M+Y\];+?09m*.8RVO9/fT$'5mmB//,dcN^geC,7;((U""2S4u1a>F.R!-
%ma3"-k88p]`C7[Fc8'7/`c[_Y\[Iiu5pPQ;\jqC-A)hE?-4TgY$(&Al2,)iI\[^3kVA25:c$>>kj0kSdI%RdYAst`+&B5\;BBqIq
%4J/52R_40=o6ea%!etS13SWQ8L-rTCHoJrqL4pWZ-j5lj1#("<G]+P;?s,MVR_Ncf3R+oJ1k=LGB#ZMUqNai&3NN%cS$Pg?@+_i)
%>PBjC]=*-6!*1e$5A(r-2&b):SEA3#V@C=XN-PoaZ7Qu:boEkKn=Yp8FGFjD=IMP*E-352F-]6/1+^>?<@o7;cujt)Va:0JDdm&p
%mDeiF&hJ[>lPTOZh54K+_`T:L_56T6;<[nS@1n570</eJf@+"(^.DG4R6!0"q!_r!"qfRn*:YS@-q8P<#W"Kuds(ncOQcM#Uk4jf
%J.TSKUZF&]on[,oD8?f$2[LDKo.jho#mE^'>BcGI>0aIrJpLf3cZ%rMO7kPhl,nX(Z,XeF(md5(+Q!00oYd6p#[8pK>LP1[a"JKW
%kg;%Aab5^^ba@4C\(mM93$>N)&_&.3BVI3n<qc`K#uo4Q6TBa#9jlHBEjfi;i"A,Lq&1nodmHfl.)BO+:^l@\$ij>TM-)*G#pD/r
%C^EQY>+-3O9rG1>%[38,\0*pZaRD`4ljU-BdFuWQ$#0#`K,BJjOD(`+JtWXJ-)$2BbqX:"jbn*k+Hmj9^^pdc-d_;B/E0gL4$C_F
%=XH!=,k<iUM0O>!Yn7Ftq()no%;\"5]+-*Cf$[jXQY3mK<<t`Jf-SB*!e`uTE1>t;`37fG;9Q:"Q_]h,9O(9,P-A/nb7b1Oi`SaF
%At&pb/`iF#J<Sr1&aFYN5&hI))JLE/:m\X`Lc'=qm3;]"egDKu@KF_"L@otO"4CU[_")Ol>m:LI#=M3N7`,3VBgOV;0\So`;mV:(
%M9ZZ4#J=]rTLIM;TiY>q4dU?0U.,c5C<QpSksOlQ"cN/+gbn4>_O]YK2YdZi-=QO'NS0=[hf9lm,]l'$EEjsGQ:].8`4+jEll=0*
%WRDON^.6dt/<E$4A)M04>7tNg*u\$H1t'&?%%@BlpqZG_Ae/Qn[KV=G)Ke/0)(+(ar[aP:6B@:9:(B=dnca$`ERuNIe7f)J'I'H\
%'!:8WL9R*14CU17[`[r&3g7L;=b/9%Gq9II)&(ibIJIK8J2M#%pk&^gPCpfAQ4O\k+Qc/<-`VG;7moS.<oCM0M)jF^8`Xi27!M(:
%Jb5M;B4O8KUq0iS^UhTH7-lFW/2=)r+Yc`<fC\SiW#$;:(q0UG:``/s82m!O`\]"U-<-c!OoEIAXC1VR91dHVL;e'jQ1$Fb*O8YI
%</j)KXY5V<iJ%aD'Aap12Dp9CT/;j*S51-,6*hFMF"SMOK6,-@E(rDN1CbiJ_54:BPq#f]kV]RNBlYDpj/=km<[$F0l,0MR0qDDH
%:&kffAgK#X/04O+]I?a<^("[0M8L=jjdG2?OB.H@6CZM5$\eB/%bj3i$22;L*L?oaJT`EQD>HG7!/ea=`<HaDS\5\G+eQc""nDj[
%i<8qOZ>H4-'Cc[eb1*7(5o_6="0#p"J^"rE>)nE[>0+-TI!lf'L8[JN%Gm#^K;<Bi7qbtV1a`\i5k]US?k"VO:MMe'I<(fN<t(8;
%-+tI=M;`/HINUIl?UU2Kafti"k/&%@6pLpDV@<POWAJbKYCpou1*m^_nHrNm9PW6;i&<r8>aml5;E1IPiQ::OB2ZCD7gUCM4@]U-
%J:k"5L^Cm]iKVkND3>K&*'id*5S-9'S`<#7D*j94d%I&NHil3e![CSSmkV.5H1Ed_ZG7^'G%=[B_fT@6f9Y1p7'Su=&i"f)YbMH4
%L3\Pn8hpm;DLb9BLPSPNLG78q(FPV*KeH3DdC,`mh9Z<Q-W%-treP-K'sA"O$g.]IM>(B`2a"OXA>J0'^jC+DesU@?$rT\EE=qT.
%r*l/?4^:2A%tnBb$tps=BBL1jc%L"#5+N5E6A#J(&u<\.bmHss#)ORu6$NQH=V1t-?n!96CcfaucW`*^>FRPCZ/K3U]W;V*'7.hL
%=YM!7,^:q@#<7LI7F;0l(\G7([QUB8Gob08af/NrQrc(s,=21CJEHOH8L8#.=+KCU8[Ymb,hLXF#6bM?q%W2i`04KTmUYh?kKmXh
%6*`e0-k@ItUjo)%%/*Cehlplgb(8*HD)nJnIdN4)Lc[J?*Y[Ee&G8:SYW#2BOX.Z%DmI,J\:El<KF?sF4BZmtCj,,8GEE9Q_&>BQ
%]%AiZ2ORB3,0iU;7=uSq#dA0e+gVk+^ga'/P"3_.Jdjs"'Niph"(SXS3l4oFe"B-iUVO+O(m#-P"S1V.DSm\jbToVMb17650K%EW
%#/!sR%fK#h[r$'mM"&sc77:Rh"X*f"CSJ_2%mXTL#]^+-*c]o;nBX3Df*"bD69l!5Te_!"]bkKtG7%/%4Q]l7;!SYqMKUcAGn\,N
%`.igcPlZYr3Z:eK[paVQJiRt`-FO0=6Z,VZnO\b#m=mfQ9RN3XdRh51c#?3@@h<Vtkrn5?G[a>kiZB]uFU*TEia=hdf?l@G2JpWK
%aX11f.&OAMZj2Hki,eJs2F:FV((fAl*!.PI$;@=/CET6Bgr0:m4NK%_oJhKr(WOQ;^kR^2oPd/MlS/eE*&k*n,&7=0.tdo&b16^)
%+Q>)Z@3<9HL4Flm"fPNAF@A"qGffZ)Q<\uoO+KDI:;Z&dlt=0PflG;L*qV%;")Lhc0]G-eIXH+Ijp4ir:)sj@,LI^TFH\t7m$`1!
%E:g1rf+ju$)e-)Y@ZV60)7KD&SFpq*8*okQ=60WQ#DGL5YH-GDqA2V*#`QV0ljP+5ToKfS*6>muEWb9\UrQt%W8'Y!+MtGW-/\bN
%-ZfdL@Gd7OG/+2"jH901<2p<J!hQSL)dj*,-lSnhUdBuYK0cfMSs2L`$I]mb3)aj436jF5fYiqT#IAC9kh:dL;BOIW\.BQm,Z97W
%NqADD[n@r%XLX'=Gtb\<oGNdeQ#1Z*=!0roG]qtTG`7A6Ld'#b#0FXQ*4[_GGQ\pA`kTTHOkc$)p0eNSp?=nt;q.L^JAZ7M;,-lt
%ltQieo\eDL$H/IIED8q/MLf.A*)4"7ZZJcG;n!_aN53Y.q2%'L7`o9H!V0WP8>aHUn;ou35nXK*Ad<`>n=CtGJCfPN/A]8bVEb/i
%0bFdj"R\9:^CoZXSC(n-#CUEU&cf5@0FSL1hfVoXZ=^?n_s-1a:=R+jOlO"^'gSI*:,8cdMJ$o1Y+H5\/I>OOPsrUr*$ok1;'BdC
%]deCp$u@,\dh@pN`#bdiW-lBMPdHJ.`s6,c#U>)_9$[0J=/KX:1QE`kmBVLdeP)55>;'D(Bb`cYD$Tm_E&$[!PUr"@446KdbTj6f
%R6j%Lh2/M!(j$2BPR<_lQVk+Y_TEQJ=F5$cM817Zne:k"0l+kS:h4EK0l(/`31d-M6[mYU7sd5JDq3jhMH,:<[t&Y@WYt0,3d/8<
%MfldDeOXm,:M1uT)?q3HjLs3G7H:CJ1QW]3l^4nkZpt2gW`;Dojmcm#WgTBtG*>tOoTB,/Y?3XiI"VpC@b$Q3f3,0iX+ouQX1MH7
%>3N;l<Xh=@R%(<p?j>lM.5ib5bc4BqP_a)(<*i*429?44Rhh/G@FGos8D(:oZ=;9L?;PL-apVs!Me!Kh!4HSO$'4OG;b?C1U0<FL
%9p+E<l]\EmoRP&OIoiXJ+9!VsP&>5%6g@qiE\Z^fdZH8H5169!Mk:2j$/&s@hfbf0-c]B!]S'";2VVln&82X0=@o!:-i:t]W]#h@
%D/?<2VM4'19oJ!IeYX2inrTg;[qWbtS4H6(1^Xn5bL.%^/[?CF2@YI!*CMuh;8\T'bthM#&fsPT)&$%&k31Htd2:0[P#`$&2%@1T
%WmS]mcUh4r+@1'+1L\htImco8hl&uFTGf\LSO-XG@FS\c4jCNHe05hQfsDSHMG[:i5rEBh,:&4Oa9W+>W\?cVW.j93;,[PLfVkd.
%5h<`jZ%4,WJE<28:*R"VZMjh;<?>h`,)aH$+^_'K4_^$&c0ni3RV\+m5YAkt`0`4K_U'$XkK4'scteIHMa7Qb2+8F7*ejb@%-"?^
%5TH7M>)ZqB.i&RR+aHhO1`St.6'=KZ37r/tilR'L6P-ERI4!3.A8]"\9Nn7e<Ke2-6+(AQOQ76[/6Y$)Y\8i*28`3n1r>DE50+Is
%jrbUOp/s5m7^CW;=u741qV"r-#!F8388Q]+#d?iM(<n/EA]PS#C=26Z)P[._73`op;PHa@L6s5Ib>W4\BU0;i/Q<l"RhdeI_PDn0
%OK`FBI1nM5@>9G0M^L#5/S'Th9iIF1dm@T,4Lm<g#rRa*aO)^f8(5qlK#+?hL<BD1,iS*EO7WlZ27*NS=@I9'/;Z/]j-2LMN4p%l
%&QUMn"]Ea>Pu,H40uoH(^j0j*TSAI%Q@IG`fd)/QT1ss8Zun0=e&&qMRmrQ6^Ze=ZB&hqhL[V6;_g+\81llLBJ^gZaY\<MNE,_!p
%BVF,C2e^9b6VA^6)R0Gn8J;:;7gt-M?SQ4(:)T.K;@H`2<fo(L"LdcQ5$i'PC_%Lr-4Cel29nZ(#0k_=e6lOdBTYfb=u7Lc;*pDL
%BI6]gBj@oViOE@F,.sj$9jr[-8X!tPY\53!PKGapK7lZ$fcX_N68hA:1kcCk(kb!b.LS,#(\o0UD,be:m?1&bf)mLT$NI%Y#_uBF
%c3[\(YAcW7)+ktu%#-2N1pY`AO(qBaSFDpVEO,iCeu*2Ar+I'N!Cl'f<j'A=ij:nmd$P:l4<:?j-CJ-JRRk>I&BM%:2Aah1K0TJA
%a<ZfV+5W)>o&7Y4dq:_E,?NDHE!Lb!QTa`S%Wl_1TICk'\%4kiZpaO)JYg75ndWmY7OZ%Z#\aPMYdoI/-+5KA$4u[L5p*6hZ'\;#
%QL43&)G5?5?^_gPh^Hoc0#P21^fu?3[Y+m96'q0Y31\NOdSI#2HZLdqE:c-Ii?B%Eh:Ec)Q3U@_T-%J:&0BTe'1r_s4i4a]"5p_]
%.)>>/e0N)%C:PPW!]u@?'U052X>"&1:#T=P(6Wo3W)YsU$+X6Z?u2;Ri<lj!JeHPM:(<orTWDFijkN7U'ZFH@C_KBpc''/'r^bi&
%E0?_(?BoJD=Yfs"3E4aiJn1CUko<NfL8\?BmSR'+8B$d=1M);0)98-ki<%6^+l)087)R1+glfY_(V7V!S"r]*fH]5Q6H+2>0M$7^
%Ugrm#/"("T(Za[F]R5Kq6![GNE,:@l(6'%>T-a;PV0ufH967X]`$8;:nDs]#.h<tAFQS:?-6-l*jAPf*5:h%t>]eopEL7PW)&rUp
%8$mjo%_[5t#(mA;B(L:4f:"*LL6lQ5OOtoa9Wea>*4UY'CgP/-ZRB`9$\?26>t?C60.\:,RhV!Cl4"bWR,AZI33XCLef$O^\h'M*
%BaS](=)#2\T,ejb_3d8Jc9X^'a^\]6,.ihe9nNt%i\=JUKP:Q;@b?:mVs$Ou/8.#XK+gkSPd/D\NUV<l^Z'">/'F#ZS@SMD%_PJB
%<g-C:6Wb4V_"(mGri1$3bsu%B.s;HCg>WH#7K:?e#ou\l[LOB%WL1d>[Uj023_id#8&WOqQ6jFEQt"e]D'9l43g$)DF@RAGa[\%q
%<&@o\*E+kh%S*!gf8RK`J:d?"bl%'A/7h]>o?#'.[c'/1B]EMA0sT\qZ3F4qV@Jqd*D@S[)7Q9&;6m"#8ePU,:.*i&3$nc]9UdFp
%%>T?J&Xd.-CT:koY*IsZYKE"O9NRo@&&_%eQKsZ6--d;sct%?2db=;c:-"Wl;<&#.%*]TS.iOq-20k,hKK(O'$+>Y$TX?Y&j<QR:
%d%QmUc3.f1WGXr\)sggSlB3^D3\o](;tNn^52`O^U5U#2;*'`X;>igfLo@f&0t!s*+YT6a'drn>Cm2Iu:\"rD/R2K?3$pa:;U>n8
%W>IEc=ZV,N*`>kL*%*t9]e5ahLiYp&VrK2cerZD`#L5;mQ=W/ES&e3$5/5R>%M<bZYV4-&aRJ+-:.Lj7kmBoj;B-iS(b%\('q&qK
%mM2AHE.JP_:FQ9r`^$chLggP_nqM7sLrUL<n"IuMSFuCF8E(dcOOV,*"-O)tC0M-%BVWFJB'W;<^`Y*T,dbJD&J)3FNo9LOd7PZi
%0o1olXIr<XJI/tgFkI>dM*3i$i]!#r6$S2\,Ira6+fsf5bdq%bj[*^EN=s9iUqc_9P`^bg3a30J7"%#Sd7/\^3#*3^2?XmG54g/A
%R@67BdZJga`F35sM)sq=9NMXk8?<t?Y9D@=:X"n+dq*Pe"5dkQ:&rH:iQW$kYtPJN85sO>X)]GERIV%2NfbVCBGbpOK__bg_+R>i
%adSE@+JC@o-/d:26ogTc8Zp#mL.;*YTr]jr;(0pO/I3^RCCS*bYab4%"9n_+-huF]o#AeU6`,bD7ml,:(o0RBK6<+!4<B@d7C"1\
%#,--DA1elWMFmj]$]eiO'0-no/sB5nnX/`!Yr)A.&;=m#,da:P(8])_[:<iC)2iVIR;9[GfW:fg:q#OhE:ID.UQO/$O471#K4KgQ
%9!;+>3UA`Q6WK[ei78!^087P*VM-lhWm1o.@7'-F)FMn485L1q/3HdO%QSn.$j:=&c9YI4NUf85kFbA:'@s2/d5XA3mR4-t33r,5
%:+/.n,B&V?0`-aU+ZIn;DDe,1:deo("00:pa:^N9/r-;Oi'd[0X6V;:,`Rh@Hmj\RO>]rJO5j>8g1`09FMnLj8lQ@6p]RB?W[1JS
%ai/KA,]5A:'eNHOWlT5A\.@+ZK4\6D)63dj/'W`5$Z2]d>@*\VN+>L=7'aptk0$+0?UA\YY@1a?;-T+lPbY6^MbEhBLo>&?N?)]W
%lIT2O0<87aaT@Hg<OESI!A^j[C9:;S-F=Pg7M012r+qgrVP-e$Kdp!N>-noF3^'1EE,ECV8hX4L&W8)Q$T72f'#KO[Js2sF_Yq9@
%&'l$a\E(_U\:FYQi/*&PGjMFK.M#KRESBWKUkitLA30'2'**c^F29hNTa`XJj'`lAcouF:M/mI96*pWm.C/[,;Np7!@r];!F8[Lg
%m8@&%B5m7T2\P(&JjA(6*?"i;dQVn.LRt6!(L6-d2CH[AVTP$22X)$B\UkFiU,E.4RY^(B!6p.0L\Ee;<)8\;#bg<A!KT7,i,^!>
%*56M+&$(4B>Sp+e-Q'p=Fk&2N**;?GFjqWVn!gUL?+3?@!Z&LP-LR8s\o?#8"bk8*Z[A7Y7/Vf*-a"m>D8VV?1cUI.2<=Pb'%&<A
%M7A_4#'F0G,*QQA2A,I0+U,$R#n84rj#*@DL]fRbm;55G/OS@)_2lU$)p&/OL[b)CbS6HO*6D?lfJ`un7MI]mi']2<K1$G&kmaS9
%8Hf4,fOW("&An*BT.n,fNQ_0\m6DF21PeoOKDG6X7EMdt[P$2DMUM3XclqmTX=K$J,V_CqG06ju-8O!Z*!3kK_`5WWPq+=!4;VQn
%^>MEcNs"Mkp!,RAKm4)NV2ODgMo;JCODW1F.8"<1l^;X8@tWl@e:i7('L9hTLJf0K'jadqpa"&p[uX@gam6d(AX!6s;#otA[M@]p
%jB>kR'3-rICJLfK#J61>kAM$M>o\eLgb,`@-?Vc:%k[()r,OdI_^.K!BW!ST((&mUj'+fY;+hUJUCph<9IIr*;V"Z7D2[0me-&@5
%U[T)f8iiF(aj#q,#8V<oa#6qhA#Qp@hb?@Q,+g"GP%cmqZ6<=.Xp6ZdTF;Ql4r,]D[c!EA&)uNoN`;n?gFR*B/+,!B']`oe6DbjI
%["BP6-kX_cnD:J_?0]9Im:Xr>@/c/V_ghQd0i!$PbqT#'L5s.b7ju<s@d#d`Z#)/1R^aXoY,rsd#!$)0W4L3s8Rs7kOchRZq7'At
%qs4NH1Y7EKc%^kbM^r,2b4@[O4>In[cZB^*:oPu;GA'*P$Z:tX?RaPna)qh8\(t[\F<!9nB%!b+ck)WL5-AiF,@ORT)Fttk+hH'3
%grC1##dG7UaE4Dh'g"`Y)"N8`Ce0XB-g+(f+g`N)nO3j7<esJ,c8VNo(c0`51s#Ap[3d_b,K`2[6DL>sFYP\Z-M2\GU\rc7kd\Mt
%d!:'5"H3W(m\uAOj$GatZ)_%B-4MuCIX`,/Th[$-9Eaq//60IjEcZL3QiF)HX,4L&+h1LV.l:"S22"U7)AX6eV]4WqEbJTtgkE(^
%BeNrE6K:VQ,]/HWMPDIV8PJ\t9rW+HlU'X1&eNnuPVP0lei='07)WR_c0;Pg1eo*HD2-?*&3#M#5+Ag:iAFoYkVk7RNXc%q_TJgh
%%F#;SK]?bEG(tW$'CN,7BS[aLNpJ#BNKX$-Ql78r'H7uX/Par7ViN2MWDj99CDY7''AQ+9;gbBDWl\[W`>u^Hc!eHX`GJ<Q#p`Lh
%C6KC56SmicihY8dE?);3F=F@S]3_:X@<ks+FcMq)VMDTLXCPG,9>\,-a%^,C5FuV;#-r;q#b)26l9FD0#M)F50au["R%QOhLCba:
%CN=M<%J0+\aKQ4:Ogr]0<5oNt2YpSoW$k'=LPJn@>f6X[LjAq-.3@1`f+[C4'TM6e9O'b>7,>AmXU8/3/9J5Fj[EY")_hCg8"*Rc
%iV,W-S\C-Mn"Nk`V[jY^\ADnrXEaO4&]9"L:0`4d7;3Q4!Dns?o-#9?4MG[US*Mc+Hk;"s0%"Nfp8/4-l(_pHmppLJ=JVFJNAAIY
%V6%aE1?^-/o#9!%H*"O.+pSQM*'*ReS[c"`65Yi^`n;b3%%h[;<<qCuampGa6X7/H`cQ<,>e*B$1q[&[Hf5=m_qCK7rb]C&8at[/
%R`7>k-q#ti:eHHY'$ntErE,Q<BU1tr$3qT0P:mM$$t>^s?u?SsRl-:@1B^(-D:CO&L]b`&0E=9WEGj!F(()7!/`_Xl?.Y@FQFTR$
%ZCta"fJ>/=,)7M$_RE_]g8a$?a08L3>pVu]7\uY-cFq+=Fkb'JZg?USM;bOiS#BSRAU6m;nNO*@>onf[IpR8Z7CA@/3lcd,$pO0s
%bu@PlLKj!a0)R_Kjr@7DJXiVtE(;gIgXG(UYO+k"Nn^^k*$s,=IfW03&VGZ9(PRL_aD%qm9aE_,S*8l>l,4u)[$@nIEb5e@etP2;
%.4oO>QSq;a/F^gf^TLs=eDqf8KsF?=gq@iQGm8X2kjgu<81)jF_>%9'M=(^ua\/ufUQEZ/DSTD/Kq#n]'PrZ;E0><DJ[k<sMTOo\
%*77QujG]l;_'*T\5qSKXd#N>__7(u\(Dhj@F0\?jb)&5=<2PXQ2UjSZnpn\JSZ(eRA&R6.;1A:WcP7Ho4J[pEc_*G>PuqS-*/BUL
%!JupUK*9!u(>%Tad4@7C(CYq41W=&F*.YHf&8_=i(GEu)5bcWL`u0NO-b`a38@BaXO`=KX]%AQo5tu@=K6'kQK5$\dG5B,XROaQ2
%=]SA%\:R@3_fiR2"#Ac*8?7p%ZFF3A5+aM"MC?h.--YjF`4^%@/p0.R6-5/TR-N``%#j+f*S'>EW8Yqb*9N+dJL4WKY-($!h06b0
%Cc\J^q'pi8\VH-Bd-_B*,GI42I0P32S377D@/p?rPjMen@!OG8APotS-)e]3Kkt^.Z06'>N^=]+?3r#16,sIHLceDX&-[j:W48O]
%O?Hd-)^!_$./B#:NlSA&S#^d=FZ:mh5dCJ-/ZB.*St6c02]Ak<__VShnmI.KJkCb7==?g8>a"7'@[$C4dBLaE`J#]b=,IZ?F\G62
%15qG&Y,=Z<U?\8C=k?FL)NM):1_=W9l>RN:NM\4$mGsFeYlpednSkDrU+o&gJ1hGQ8`-pt'>gd6UAE,b/`M'qFDS0m>sA\:iJ&T,
%OgiD/r/12')8m!hB/$h6e^Hs<&4]!7FQLV2<>)3&Hs*;(RXa*o66];D6DGc3Q4:rt)N_FMd,tQ9e0]LFLf7uSG5,dMD%9X#`=70f
%+9\sfT#e6-q#Msp6`1,=O]+W-.LOcZH)C^$q(fnhF30gg#1LJ]:q>T.gCs'GQnqTfl\YIE";/ALAk"2MS)KPfQQng+j]4_.+GIZ=
%!d^ZPYiCSg!9rWc@lU`9QpF]+fUB=[`ODbY$p!&#eJ1)2?U]CRW;+q_9L)oqm#UYt8FdWR(0<q^;K6ANJM>fK/rC(1%imjtU(Brk
%_NK8:3(,LKd?)`0\-QKA_c[)HQknOq@g/?u!7,flXV=B?dA03We01ft3"iL80lT\KXNj,7f15*WN]e\j\;M-o3Y&]:H,YoUS(g3l
%glP!)Zu^R)984/c[pp)<Uq#\!Et*@`.[IA"Ho>Ls'\kd3QOpH-Y%-[hiA<QXK%uck->l"UI?&n:eF.23X].ZXi<!+OO#e:`5^la?
%Dhas=_'.(g(ikPURu5'S`>PEn<F!MgiloTn_OEJ2RO'D)$\uN3n2ob1(fU(Q6#+[[(p^ZY`QMA^X>RnQE5N?_S:caDOfnb[n"S6%
%'^"_9n1%opeW&cJV/M)T*0&qp;fp%enIJT_#:?5MqTkESc#+@MJ^Z`qc-6\Cjdo<WNE],e$XsG!"m/LHIBg>A+hSD_E@JPQ!s-5%
%\0ZenNSO__SI"bR0/J);&.j;&U_W[%S0<.Z[rJ+>\1^F:`a"-@c@I2Yj&Ud\iXa.I\5'\?9P,9@S"V0pWYF\W>=pGu<]kVg+tjJX
%n%o2M)s57($`H$D6phg?i[`WP"Mr,%SVargP"/etQ@LNHZiq@,eRQm4Vd.h?89N3Ri+uS72Yo<efYTG'`n5+[O[]h9OYh--/\D/R
%po;a"/fpm+!u;gb/jeU,G-TF#j)r=STYAL4!OcGo&06:l&k57++V3"bMUBd5DW',Z1F1dVP9Er:C,&'AoN@+aQ\r`^e=+\W&>[91
%]t!7K$`UDMi+*,]-H%550p`)AMPMsF;,%7PU0JC,a!N#t6>SE-%a,H.5S]JKC/$LGEK<g`7(ZRo-ra5A7Q@K:$qY$L@&R%*%7Wm#
%eR1dZRFkoGABpp6;L7sr/`j6.ZYK$KXV2C^Z;cW<+CYLZCicGF%s$p;TeI`^,b?V-=@hc$Z&<0@9ToJ5`4_k'aOYXrls<2A]G\-^
%0j18#p&^Iih3Kl7!.\ug$%p(-2u(e*_9e=7OJ",tK($a$dQ=lRTiG-LVAO'e?A,)2]nlTEaBejXN\lp(^!QRi*9i72@-GZDU&f2V
%U>4$i1Qr"f)N>11<c^\B4gl2bGG&+JXrQG"MqDKlVFn65>U1s3Naa^O/c`0i(;iCmY(XIo,Nh7;+Z4j\/u"n,k!CB!@P8o<8+n.$
%Z=5I$.O1_JL:=c@Q#ZN])R<:,83A_V'eN<`17LOi+oC^r;c2$XcK+9P6+3ONfVBpl5l^>r(c&@N.,I:h%\&8p+>O.]k[oW#5/+%,
%+FbM/,X#6cUhZX2UaYLDB+_XRD2Yt+-k:27R),!LG'jH.a%VWTk%5rp4NbR4CI=V]E!'Z.-?O4?e/,)u;m]TB%8,(_<?s!jGD/E$
%VpaSOd7'?,%47c\S?Uee[Fp49da[kSUot*4&&kN)qKd%MB:4.4Rb3ZSStUB8O(%b@9KD.Wo&TmCS>2'?M:spjgdXZ4MPHgQHe4RM
%(kYYr=O^AA4l!nu>]j][\]P#2po=lX'los5YpK/I`Pn])Xob7&"tUhZ/gq,al_@_@7T3Ph;1uee;kB>l)R/;lQZ\eP?Qp)XM0gMP
%5j/B.I(RI%\QmW9O)&PKISg,V6Z(jk#8[P3V%K/IJkb473$'GXd.K#-#70eKG/Y?+_ma(5]qDR5*$['(o7^[+a12i!F1*BA.O(5&
%=5^VnO,3os<=4Q.I2MZDGUj:oVpZq3=.p10ELr1:"t:.o!Yg*'Rr#ll.@a!8WD'++A2?PJgn+Z_Y]kh8BZI5s*E*#PU*<GN"fe/O
%)aoQ]^<oj*#`B)37Tlm\i6*%rDS*d((tNM61D26sCQfo_L-qW<l1R[KpG(Zqgh9N*KVF)3f>VG@mY#nHB_@9m>$pP3%XA8/?QP/k
%@Af9<s"m)59WO$1@\8^#`/,'M>`PYkVlFF3KMD("=)K"\j/+*rrQau!77dP&=-L$?*6&;jBLV=+.<\k>cpu?&Ui+UJhh0ZTaYpBm
%YJ[.P`Z7p/:&^":M^Lj'LFnj4T#=j];2nt@JpY3Fj@V'5m[qD!DqWa^8oUbW,J4l:XeeDh'2#Z$%=gtd3ANGCOkfRKe!@Guju*ES
%m(!6qjCE7oSoL_inD_Da!h'ego#O5^Fo]*(3jQ[$Z#tT?Vn9M?'"otY\IKp%F3pT?$Bo(VMZ>`b5b,iiTZ6,O#M_0+7>lS97<Nau
%!/N7UX<P/Vd0fhQ\>G]k;V^'E@B76H-D&<',.Qon'2&C1+1ZLBMUl`5rIaFC*'WTUKRAae6*Lli]k%E>=a:hdro<"A).29SY>MqY
%?[@:W,uH&,<T:`KX)VF%]l@=9U()&5BU3Oj47R<U6o<=\I0U]F\4WV\&OS-74#jg*4L?31?rOMCbOQ)L__jl/*C1`6UN:&N0cbE.
%;E!IK0T=fEK%u-C1jEM`-hs/!SVu_UZMB6U0%rPM&5RL<6<q0D,3!AI2^LG_c8XdnIK@9<Y)DQLP?Ze!;90ZB&ReZ1oJ!R<@aPob
%W=_6r6C+9)pmdjCQi$q/1OQ6k#OU_E7oGZ"P!iPW7K4^\G!,G[InRX,;RGE1n8?Sr_\Qf4=Vo,!\p+ShX;I9l\1%4e75[7]b%f:)
%NmI1`@.8"l.dbD?84r.+":5^]Bi>uLN""$so&QS96.SM'fG;'EE'uWs5*t737s'E[F3m5DJ:+u=ZNtu7qC.o'R><740.N*TfWu&9
%@%(N"j"p)D2hGfu)S#%;]:":L%R'0)@b[VF,O9TOBPX1#?=5*tS_#QUf.L12j!hI4Yd#m"JB/e<VC[(8E;IcR2U8=Y^aO!9[BN*'
%?LA2S8f&GkFUSl4EPHk?Qj\M&b:KBoNaP`=i?n8,<JuWmoRq;8=:#2nNf6e26nnBeU8eFB>9_]rbU-N3qf\!\GTDJ%+uUh1L:8?L
%rJ\n?nC5Pq=0ft9Gip0@gSn;j_67I-Y2hE7riI^-V;S#5#LkXYHfD1>%aROiI,!blOSG!2."ma36h\;2*!tL0%?cQ3#_n&UL==JZ
%Ig<YII1?C":hInbc@ds_ej<`:$rfU"`Bcir>mM\6dH?ht3T(8#'1]>l\cdmR3(WVM<`h2T_k1RrJksWdKOU0^AD!]#Fnp3bQNZ!G
%7=-&k&BKih67L(j4VeZ8ic$&pOVru6nds%FF$n0B&k)aF<6GmT`*;M3K.AD#@?O\Y[Oo,*&V^!lNAASQ1\/IN*Codk_rV48M@dX.
%2&!+dqBZ,Q".iI&5#eX;/-WV.QqRl(BkLLDhr\`%;JJaO>=(UpU@@d[cdh-83u!1d74+Bt\S)P^HsC6uNUR)>TVPFCgYd'W>W72)
%j9o9j[!\YlRUGpSI`W6Dfq^o$XhNpd$\V;C[p'[W(H0AOp*:PDq7-'DOHjq,btB5`Na>+&/giP#d:c@SM>K7rEqibZ7GD2&('Ksm
%?"s0**Zf4#KlPDjdq$tnRZ81r,]!s;q%AF0Z],sb'IKVQP`\I7IBL'R_P@Vk=Dh'rMYGhDRB.PSJ?S'h]@E#c^fhYV#q]$GmA&.B
%_bLc#.p_ZT%(t<8%/guk_h>'<:r\-Z,rgRi9j(rT&9$(^UBH))n`qpJb6gofS5-eOE3tbZ?rSFA;*"#(nKQrWBF,rJ^ITsRP0I6/
%#-4G)UTBdjR8PTPpNF4q#OAHDZin#@jOmd]+N-Xt8NJIgR\!J9GS:ZNDkamH=Cj9>m8QOg6E5JGM_n$u/DOT3Kn#2Y-kB/t^T..P
%j\De4kgcLp\=/^+!-atFVN/Huq#2tQGJng!8sE-n1rhFPZ=Lp90a*Y6[!Y3Ui,L6n2q:2;&.%a[jCIUG>]Gd6/_CD/>b(?[$qAAr
%hO8$^m_cFgO)Lu5OY],9EO\:!6e.h?SF;AJ>4?F3L^Uo[bpeeP`n.:d8!krhlV8u^JWkBq1P?&i]\s[9abE1<C*$\'3*fM3Z)F,n
%$[a2R:r`\W9bD*>F'\QuNju6K%LLo8c/hS>66+AX/u4-F\$,2;AeS@4XLuL[>bbJtE?%\]Z,EqmYo%kO.u[FK`*NDu4,S$3l^oLD
%&8#(^]Hb_)U@Bd4HD\^t$pJu!]8/;n6$S<V/Wlli9C&6'$e%@^bQPJn0r?o+l%ht_nQ^0lE_T,oE7Mn"Z3>A5g97eu%+tV3PQrGr
%TDL:s.+&g\gBMO6pj@uN$R9);Z4IZYhf'qfM\k<.G+uLMjRSuRd\VuM5'=4t=h5K>c)5&"V:+!2#:nQ33*8Op"IBE4Y7M-u]\J+h
%98mL$c^O&1(_=VO,Z`hE;r[M)17RZd@u>G@a;ONYlQAT[LEPdsPZd#NJB&h<JHID1;$l:=ij>X7dH5KX9\ds9%"V'a%[#YkL"i<8
%\.*uK/X3LGZm"dJ?^`q?ieCXfj$P`p+sObV$oYH"Y^884:",=*$48iU_?d8\cjPTZ(VLkd[m1FkP@5SUER]`4:gOu?U:#]PM\:8Z
%+c`da#$_?RKFd".R=SHg&&F87l1$5ZH+hVG9@'9Z\YL#h(7+H;\>C>qTo,=ncCYU'<L-(c:J6ufg;jALM$/gA7'TMM[uH6fZPjYE
%41:*KI(j:0#uFP9Y9NA4KcC>1:UWOj<Hp.aZ&%"hn]@lB$*Nir_tTB@ndq=9@Q*s!?qZ=4\[jb9j=AOFe^5GSPc\"Mk[Ji0%BnPD
%7%Ag[DVRh*_FaB:nb)r9]G]jOX'TfDN?j"P/\1V3kZ4b=ZH3Eu!c;3_+lG5^(8POR29J:boW.iD!VtM,5J3BcGGQos4kLQ4N!Cq0
%&>7XG-!sE(TT%X^iUkXnj;TV[(Tp`cY,hfE3*si:KE:n_N.BkU_ftfO2!kS;LgM2R$Qd)g:0<4/DRgl2(Yd-O'(056cLSLH?'n<.
%_g$m+E^r/R8?E5+=i1[Rl13aRUaNfkF=e1qlR8<J_U+>uUkSa]dI)Vb]pNNE6b^('3rk]1+\;SI"s.[qj=DCA050=h$%=Oo-mXYh
%ZT,/\%.R4]ggNGU3_mkCRXBB'g,4Zb'YhabKNT]Ij*YoWd)"DFF_-XZ_S-bpH_<!kk?[=EZ4#r:Me`KRBTS'h+g3@$*DI;t'ce1^
%K^5Y5M-]b'TS[!XM,Dco$\IA1J>ia-6N,mt7C]%9?&8ZINTcO)Q'oGW+EE^%OQfj-9&`k@:2!qG00"lJOes^jpVZMPT7;a1S+rT:
%,!=o[U57#I35UrimBS^j[RK<ch&ZtH0!n5`<1raJT*4\\LOFl)_B?I/:`qnUQs`038C1qDi,SIG>:2JkqBoUc?o^@5iQ?`!+/Ip6
%=PgY[,iK+DC&Bjt;hctaGA^7qOF'L>E\[3P[XFi2$trMr!Cfg?,JFqA\T*,H'$W6-4l#U^;MqnnQe((N*p!)I_1utu/3td]TurAq
%@2>]sNoC/a'Qu=T_0gSV3N/#anH!OnfXq[SY,+;fW=3i^4(<+V"OZ<?8gnB/&j8_k>6_!ef^T`da^\'b`0U?g&<?drGA#Cik^2ZO
%WuK-Ketq!aMF:,pcEXl0AQS&=J7m7DdKl*_cK?34MKEsV0BbLVE7#-0H="7?g#G.BDVlRC'5!)&FsP)FO>i(u!P2+>;,i`e_aLGU
%9,j$'UWK1#lO1M<!MjKX#PhZ/@CW.m]DV(!G4U8ONgN]2Ta=)HU'm**j504p%+tl3/28$=,H0PYptUudGD+^:KI@?S:e6$l]QZVi
%"!.k+1)>7/Eb[@KPDObTee!m]\d!Vu)-Xhs&*$t.VRU$%7;-UmE*2,5;d$c5_/VoE#T(c3H[Yh3:sk=.Vga@DAKPLR@@iUQ_6*:T
%L6Xl<5G>o42W`#g.6-eg_A.SL;18$8\N@DC=a"(2:SfF8)l\=$4S?;3Wr^Q'qLXr0fj2c*mck1tIQI@><E3\sLSW"!"Ga6b#X(+D
%b]^^H2]cZBcEFXZ,:@6b'9t$l-m7_RRY[/0Xco3uQ^!FL7QqhghelXgfpLaaWUc`RXG.C.E-l#3I[J1MkNVpKa&OB_@1I$g.G:&-
%bo!#%)LnGD*^#M-pCsSIq(WM2_+!3f;A=,E>UgStPeRd6:=WOrp9JlKHe9^tTRNRHI9OeWrc%$KjRdD_f]&KnN<J;#q.7F>)'iB5
%GW/7\QVP8+`C+"+(ZLXTg@CQ8A_PH=GJX-/CAH-r:"/s1Rh$2.rkelBqqb`"N!F/^M!!PB=cAXQ66njl.;*dunP5hKY0ZhH/(sB^
%@YJaK)GLMD5+64D[K`\5D)*PeRFQgqA*l*%h\l/"G7@i`$CtQo5BRLbaKU+-%@,pg:P#u8E<i.R9ej1S,CG?n@)hA5EWW9$q15n5
%M8]@q>\K%2Id^F%6:-($jnfQeq[9A4fTIjOK(K-SP<RS\318EjLDR$nV)d-==l'"s9[%4(im8@)Cm4:?71]i5`Ns.)Yo:^n]dh18
%JdY?Q\_sL.g,$/!mc-mQ&ark#/C,DTS6T\gU<)PH]BF(\@`JP1(YQ+7#*F:Z[]KhVjN"8.#B,/&Q0m(qm@+r`MFnQlg,D7Znbn7=
%rIp`oT?\=`>;\@bEV0b+8>ngb3Dtp5\nn]A/lY+$pb?Da7Y)(/aQDiK6!Pr7%!u2n:3XW6cOJBF\0sCIYaV<^*sY_LpDMn#c$9OE
%/_qo.U$oZCQV<7,\SYZ>;r`#i7f\iceHntabQD2jm)aOd8935[h-kpl1U\$Z9&YOC/(O>L!miE2IThR-rFlFX"+Q;1`#p<K!-L-N
%!QQ?>+Yt>+^@];H]9u;CJ5(Q8Uuc[IiBi.eQflCbn/,%6D*uH8G<DIloW1qK\C"E`@FpkJg]OtZ7>AROkQAol0M8#^OpfUT5+dL!
%9E-FP=E#N`>/_pgD8mQ8O#h4d5,B>Cs"K0,o1sG>j1oAKAH1)3\Y1:EqN&M/H,c)uC?n)V<_Kd\Y^kB&A8i"Sri/iq^I6L7XKbZt
%>&%.O,]_Nnn*K0V'L^1W'Fr3*!%#W4)]jt'Oc_C1$oUmcCrB@>N6<-tTBJf!2QAK!Yr8j&>Hs))[T+l731J7C\K;</-Iq]%in%?!
%qtTaN5L%@>8W1>5Xu&,0OQp^Af/,,a3&MY14.*"Z5qCNOVK>ufETTmJd!8#hA=qmY"8OpSJb*1+ko</$$u]Um7KLkN`Hq"(TRHq)
%QAk0r3/\^HX&^\.#tZub78a)4L%RKceU3[;dCm4CU`D)WL#/1^6GT'a@RqN;bpnU2p:/-oK)pS&k3$B^QS,9PMR-`A]T9b0L.EJ=
%oa;^+Tmj11T(`E5<m^r2gi$0H,$\W'\4.%3o\M/i,\6QW;_/t]+Z44,#J,%2g1,0(&PW?P>WK<sXt8n!U7\u",oWO#^("*T&hUb;
%O.O5%,Kg0i7mIWhZFZnI>:U!lGO)qMJh*Lc0h_(s'*WdG&d/(,Ynsq.c0/nih[@Fjm^m3#"\tu=g@)-tBZ8%QIGYB:nNsjZ>6.ho
%E8$Mh^-beT-Lu:s#-\`:LW;Ag)3hbG1N)Ral+9>6%R%7Q.*B.P*UN`DB!(M20mCl[`d7!-!;rf)U\Gn"3t]]tQ.%db--1ZYn8n7G
%f&_A%Jm[%R#;;5!>@iOnBPh(Dl%4ZoZ"88hDbueo8o-A`LQ&H&o"'jC^[]8KA6&d]="2CYoD.`CTFMi/69`>+XXq-;aO]?Wee\K2
%TaSo=p9rPq6K2eaN5SJd2AgOLaV=>S&sOhWF_e:J0h%Ip*>=Q34NCg=MHF*s(iZpH"^0o!&+m5G;0ZYgLXB?Nio%067/<XEk9aiG
%q'c?:ODKFBkf_HXXNIs6pC8_(Ag_cpFn%%9YT&*8.]Nou7bD,2[#?fWUK7!=f$,(gm]blK6X*YtbXWS[,EBST]8=9H01-mHJ?Ysc
%Z<G+!?o`%[qIu!^,]CoNF#.2Be$Zf*D(j8tP:m"WmCe%'lNjZ3HY`k+agoC2:2!Ku_We<=:7H`LKSjEc>>Ws1!nc2:C!'p1go/W`
%7]::+7[KHJ)kfU)ON)>di;&8pUn&Hu+sh?=F+6l-3k3Zs5>t]:Yb/T&q[[#h,@g5b`V\Q'ZZmGN*1'p(('M?L[6QL7L.N)81E+#4
%UI[_Q".?#kO0OKN;DadPg9Td;GjLU\__eVIfK(&P)Z9$m\X88KqK2KaHU$?FnFp.7F82+rm)A5YGCX]b52315OM<mT4aoG>Cj$P>
%pi-"%bm9oN3?<RF=-P!q*I_!N(S2+D/ZJ&JFZB<t_M?#VRSl<.nFsRt:X8KR3;hMC*"N!l_2#qKOc3E=GDFLO'7[sZmr-Np3..tW
%oGi??I)K/+0&h!J1r@BcSIY\T$`Co"Hf8r=HY*bCs4@[6_nW[tiUH<LE&dd9AiLe0]bsS#J+&-@iBOcg_r:(_n8S/L6Tc@f\Kdu@
%Kg"/@BcepPn9"IloY5)L42FlskpVLmY=:?*-E;DlqLYh@#\7lCN<ORsZ7pfRWiZ`Wd\_<%,D"Zr_=Q&-AolC.'=8iA*.F[,]/n>7
%LOZt^mI2j3bt)nnLX/\npU_id*I\QVU/b01O2&Q7LW;VhZ.%aj+20o;),kF6:O(I-.M(;U+.JZ$(d0uFg]jUT\9R@\9\5:c[`dRG
%VpFO-]6KYQT25B3'b<oTT>18'*^5(cRa^GXUUU8Bq7E9cFSV8V.`9`s?eJtd^\RfFg>"mlIYZD8TDRU>q0P2n5(@L+_rj7-_r:4U
%c#>`B]tT9N5PN%Zo_2u/Vgi#1\'oinKu<04Hf8r?pKfhLraRT$XUOr93:>aqXJ)TOK+!2/_6kr"5HRa9:)Fo:,'MA:q;!"g`;WuC
%70[F10]#:?H^&2+DXJ<d_!I=\@[4)KK/kQ%B\]rTh+.(Q.e2<3lgMZ.?N9fimId[YN0T$E3.2o_A^1/?o.Oi4_jVs=cUVF@)=C(;
%gDQ8PO2&_2O3^U6FatPTs2*r(?D'ABrae]!%u1Zj.1#Zt3;cDpIf9V._r'p/pj95V;&Hp_iPV6`j3E-mLJMu3<$U,Un/8l,-$)%n
%o\NeS3V_@f?O051L5"A'T2+U4X:DHt52)XBV=`U(Z]fu5XG=j22of>7+8b!cq"Ht^4oV%A_r76Bi:-L82E:X5g'<DBIr'eUgYWt/
%o_/#S35,9#/"GIFmtCunD/Y0XffsY4SEX%EVcr_<a`$q&&D6CqGV]#,\s#&;rG_2&aVC[oPod[=Sg'B8Y/[PK,n[Xlm+qNMs5=Ps
%4@VmT3[r/18%PY?m7BiQ=D6&`6W8l+n4Th.J:TkJY7uEg$s9=KC+"5@^pFWQSK@lb#eeu1Zag/B;)sHiqZn$P1/s#,L_nXp[rC=*
%kT)8A`o]'\!!uk7.IE'0=K<PEdLe(8X@WqISe(ml_k$H@/aVFP>2WJ_`%@!_!>K(jXaZ0Dm\N">"h%qUYiplYJ4PFKiqICXbijYc
%*9"cb,cXuhi<&k#BsFlaiPK$(mVq-6M'H8Mm"Q`i\2V;;0&2rT#T"P/i<U7fX`/q$H[S\^EUSQ*=P06.@YK.V*3m@j-QKD.]b?E.
%iSFl2XROjKVq9a/iTu7d)lP2mrk\3@rt#dD?pRc+[XfTQE^VAfR-hJ)M5[WAWGgroYE-K+e"=K#W2C;1s*el@^Y(9ej2ZXM@-GLX
%Tc:?0l07`a$P.KnH78]FLH8['LeaB"A)UGkoA/*gaQ@U<oS3f8E]SPFiN#9.nFb;Y"o1?Q]i\h[66+:B\p.@:j29OPW9E92\"CK:
%lM6jnkJ^Wqm<<mRFY4`lI_4LdgJ^6F^AguI^LFa/[n#OLn<MJW7o95dI!g0cnF5(cLUReIO>;rR/L+!!RRg4m^W'&f^ZXa$pZGjB
%rVbR\Vn_,YiUlp.DE'fYh@1!V^UM+uiue.Ak_kdQEF9BU(6?e,pugu2TRTOiFC$/KIl=.3Z0>5>r<S(Q]7SunhVc([,=mBmRdK\+
%ikKL&ca8010SVk8QN[hlZBF==Rp?9pLRSI@0eC>Sh<[>4%l\iYV*E`d'$n^f+'s,E9+Nt.`_`S*]g$m(>)[[.cU9m8<P;$#iFkf9
%/'^*p/KBib+?;A.Enm"Z3=\QkL*)GA]c4sI(&n^,Dat0pU;U[or\j8DUP3:I)YJl\KnaL+n8u$Z\u>MbFL2>9eLUW<['uG_*:833
%e'XcaiH2GR4.M=SDhlfhT"Es'ZthIfIWhp`@B\"jE-g7:g!eL>]l:R:F"bbQp)hc$fZ%F4-`!1/,U`8VHuOB"c^sXg1]5P@op><*
%&p3Nl?qW^F/Mdsj,@OCO6:&G/I^+<h2RRjJeHcCkKLEtp3gU9Fl.j2GO0u%a"t#Q/V%e\4FmcL7r5a=bKY>AhN:KWUR^0CV=YqOe
%40?@,T7`q^&_@;h)\/f6^[,"":<B<7Yp&?A87<,%Lt2SLh]]ZX"JA)i><kO_aRHMJIBK<Q8ng'tmU,I&09d#)Fe-\`;((O&&.<fs
%6M<>deA;>fMHgr`=W;Et&r$dFON?iSAie9X)1mQ7e*.HU$F)neVd@r$-g$dIFVcb9:$WKjcFXKO`Gu_Js&$(IVL?ItVq1NO84j^%
%Q?]N:RTrDQ6ut1QIYplrP^fXSAHmdOkkfHkWaCd@L7TQ,V.=-HGlXCd$!@U2F:DtfF:g(cFf.0-=:G3c9MdlBm0uJ,U)er1$2nT8
%Ej:Ro3,D2`f,"]P%U4U/F.0IPIsFFZ-/sd2VMVe-DONcVoY6.HWTGY#5/ZVi'_q^'=[KqR45+=rK$@%4J77E1#F*4)o.k:pcK5K6
%?X"j3<;SFBCb\7lSCIrM0@ht!j%F.Y-21p2oPJ^He/C*l.rO>Y&_=K@_(5"r%<bUF)[e5VC33:YL>Jg9j1IUcNal&i(G+/Aq:BV$
%p,:;$QWgI82A)"l*,qjV@4&-h+A1t,Q0,aq8B_W##=[WDJkLp/6%Ao:HFsJ/<>"(8l[-[2EZ=haTAG(MB7CAhNtB$*1Q'Z=c$+uk
%Ft[AXjrtb)[16CD;Y\(Cj$'QY-VNCS@i^"$.4+Gf2b]EK0pu-1VKj@g$[87Jl7sO-bf'S%3:YgIl^#\8][A1$3&R,kgOm][H)9(Y
%G^^LO19jO;B+'djnVuFUR#/Su@&n"='nHW(nIE5NE/juL2sU*+0/Er&RL.pqKqPrs>/BU,]93N)<(^]Tfg8O^Z\Eir.df$a+rZas
%>ag"\bs8sdK+*>GR[`YAd8YQc!b!hY1krRQqBjQJrFt1$=7mbNY`MTXpg3DR]^O[WF[b[hOq?n)mO<1-]gQL[ogc3Og5I[r#^TkU
%XV.bs[fPjX24'a@6-'(QJ/%o__q`a.o%m6hN\J@R\,`8IMfTFDo3Mbp"/sZ/0;:43[5_1YY6:W3jf>G$rf_l!?(cI,2"FNFUV*<"
%S\7/+/2AQ;Fs0D/Qo+Q)^0Vu!;1K%V2IK!G-8d[*6C\@[brl25Ibs+:IsE-*U^$O#ZSBtYW&?c6r&R-EfEc-be:"aIV'cFXAi+rC
%Xp3K)]7cuf/OOR_n)$hGc@/akE:N8C._S&"hF?tZfOiL&7FkQt4))_*dEoMKq)7Qp,3u%PJ9HSOAsD]fl/&)tqMu_nXKM+[,7V+l
%_,to8(e,N6=';LF9"J_f1J?94X^D];?hGLs6a7gbR"I_hrfX%KPM4>gDH)Rj7HO3<I!56q!%i'H@[_dCjF3g8\Z-?IdF2hdXSl&[
%kr^XTplGuMm_?uf:<$q^V&,lq0$Q4]l"Ng'U%jDBH%2Ej]:!P33i=^-[hOL_N[,L\#Jf'""lqeC.9m+ChE!"eOEi`Nl4*nFJ[t1]
%!]7l+eDO#+(Gir`QcBrY"4sM3LZt,!J)gMsaO95\cs;;&m6.=`2t57qc)osR4fr(=\?,RgT>TtTO.X)BkJNe(5>TAXLRcDS@R*i`
%$_)T[gnV_j[*0h4I[m5bO0NbhcXF2V$XRFo8\dK&iA7mP4(Q6VNpOLO)K]H0hG%W@f*[Y/m?*k>ft!61Sf<E:3_f"?_`:inn8V4u
%a\05,R%UOHL@_ULL[J(>Da1/AOt.]rlUYsh*'+o2*er>Zq*%sXVC6CZjj,r:Ip@hK(jR98R^&Z`n'o^9dV<p]<(C7gi>-9$LSG8T
%XTchU%$,iVZBNhBUE_5a"i6sMcQ!W4"lTo5(KCP"4UM-M`f@'71eB298M@]$dXj"s,B7#;.1h-mACI9PkY>//;9<F7P']<3C$sOS
%$RReeBdu0n@Xec[[p!'"5V7,T5&R?dTq];\S,*J\J).)`nBKH<Q5C5_n9,;"%+Y\<H12#\Kf2`3(*AZVKX!+A.u%)&8`5au)`uX?
%_id.M$45:L$KACN`Mq:r$h`(6+\H?CX]4!?oVK:rl`pHmD/P\1#':U2A7Ai%+tepV\<Mq]T<J:i6]_DTBTAQS&;Rl\\NTaLf'!J4
%]Z.JH\p#:Kr["ED6a5D"%5m^p@Fl8uJR#Qm8/56j,B5FE((B#&XFEXn;(2:XC69bYVSVV@7@'sZ3pRhgL-&\lCB@8E8<JR/^JQ@'
%2q)g@irmWP0`FI#e&F&V87FaKr;4.XE5THSgfj2g;64N!.rG,&(]@,e@KPOqC1!JEWZ9U&6WfoXepZFh[3'J<O_@F<Z;'%AK.^9M
%AZG17aHLJ)Ild(2'I:GV0*f))KFls&U7a5g#6D>Qh2T8Lq/r$'@P'W22L'V\0Mf#@.9)R`pVUfd^."'(RLN"X[2d\)2H6Dps)jb>
%Res[d^gT.`Au\5/_8C)j_=)!R5i:U92F&1CUjna@Osee$JVVoT`<*d?_e_#<M(6_`2YQ(XC`K)'AqStl"?-jtOje43J(P2S2,cXu
%m"Q>j'j)H!"2V1AGS!1GE4DP`PF&<*7=)B59gP2r)^rgn@XT*cDV"5n8km5^NK?>0G5YL_A1?**!8VqLjUBjlCGmI"+$n^G/-d'2
%36DcT_$"^13"6,;=(=^,&&Wso?chuQjgYcX@6'V[4q5P@Q;>,tO2Yfl:<0[-"sJA5VR;38:lpIla_<\io"hu/G%6M[[i7a7Z4MfE
%5^\dTk\2qMa)IIVP'@STf#)5BL?g`:Vdn'[2ORr==,M$>k?4-:=B3f8V\OLW_7FI#_k$=DU_76`^soaW>^E_<gcCFHQD2BXHCo\Q
%ZEYZ_::kQgqSVa:lR/\!e*bTVg;CC=-$VZJe*`%/mZQ\dAd?U$mVA`NJ_R5c'pid4Z\K'\6X;BB?[\<3$Z<5A(5M`,MD1sIfgkhE
%3,;F+=e%?s=r_j>0*ODkikXnZ_fpGpZ1=Uso.W*WUL!KQ:29s.AR>40Zq_,Tl(I+::`lWkH<_pjP1\$:;/"0.p9G'p<gU/WcmK"O
%idiAGdI^VW[P>V6e4*b&:`6o6kQ945_hd/]7`9'3]9*[;XJ5(9aM8VL_0.tXN6:`bf'KUq8P+JGF@)t3PO*`8R:Z90>F@AJYVP^=
%OH2Vc$nOh-Kc`eHJtc&O\SYl38iPl=h8\fTVhs(Wn1ZThb>@/CQl&`%nZ"fIN9!b!1GTPo"!R2iNCdSREs"^h?!%ZH`!1Y.*g!8H
%1\]:']`2A0rn@dDE(nLM)4$/pWWc%S(8l@fqp(BW8q<@2EkYou\r"HRhqY28=Tc*O.h!po$;[F1]`^$$?"0=N%uMZrnso./daHqM
%"cCZ%LMDReAe8a6[N'ST-3Ua\7\&FT]=6`29[?$QMRl"L'Le/s1,4JtE[Q8S>t*2^G\@RiFj#+LkMH$[?t>rm,BSa\$Ckm*msP0#
%)K+8sWY\u>N1-g(E#R:^R6c4iCM]1*E\Ahic28kbZ"2ABBZEtoBa%OM4#OBe?$<n.k9<[AD>!&C_4F)&"EIbr;2@VUQmJG60P&=&
%Z]b/0O;T?%WVCh^VB]Y5c_)QUPkVuE:VYSTF$A`9V8hDc07JT@FY\2R=Succ<f5(I_Fg(h&bu\VO]8upTL^<M%"5iRCsVjr:&@R'
%iadkK\=IZ5i:e=J-.=Z9X.__[<0P4T1(AO#Bdj+:\3+eTr!rPaEnT_E?\`/aUP_3^\#q$pcb$o*&Dl"d)&/Yle0$Umm.jAMY%CK_
%0IZNPZl*?=amNZZ\+(/8P_f2:bmt^u_N;-$#l;4_<?k%Ao<=Up<ACr305%5S?f;m9nCO?7Rnl0mGLRUijeTE5a987?Kd7%F77U9T
%oucqf:b;44TF\"_Dl\d*n+(<)DMYhn3lYL;W,//"n&'R`fKZ'3SD@_(ou(WI+i$VWAkt00\plSG<bjfURa(qCc0ipbY;mGSVdZ/H
%a]]hm0=,.6Vlf%"BW`,Dq91X*bXbjU!NM5[j]%i+JngGTq:[Sd3d3'MX@P?SoA?IJq>S$:s12YWP#5`-Vd%Me&EEZ]$Zf#$lh,Y-
%J>fj9=.c'm*XJ_+gqDH96*^-E,gEc5R'%2C,d#bY*E4Gt`4*2R6c`6r=s(faSmtapSW3:8&FB$,hH@e,>f?R3=QK&B&Mrdd/:Mn+
%M1FHj@8jUucibWSJD$fL^1]C<cDR.Vr:'Yn\8G2J'Xr)so-IB%0Ag$RHjL\nm<P&%#[,#4*b)[dT]/9VCu$%r\!Z4@$OWg!R=dn_
%D)FW%?d(f<]`e?t*6&tYcF^VmL<@%YVUK2%0hB9:UH"cuQD#2/@X/D_]36n8iGR].(l-uS+H1on[.Y*`&qk+eFJ(j8iV2N+rEC2:
%Pc!T(p@B]te9&&L_nNlnUZWc@-$/OuJ':2pWJ`Rf%V1U#,.sXMGnAMj>;0C2HPqr3n7O_.#]f"15WkRX>R4f,p@'8Id6NoVHlQ#^
%!7)nJrGg*c8grqC,l5d:N%Y)&,]d's9&jk:a0RC*@TC';(9Z8[akR3<9m#lk2jsOCVNC-9-Zb7G!o#K>6^bhK%EN9;O#!X*EXo\J
%;N>gCq@mIQkRT</Nlsu"VsEt)&-:(Y(!lZoB!/49;g0dR"6?%bNWmJf*1fToo/cFrR#G<c]"FSlc<n6^U3V*P3=_]+/s@UU11.E)
%Bg5Amno=Q@s0/X*g;D]I#>1fp8;E349MRl4J2R8.g]i=S3'TS#`!')G6^9:4k$7+q%b.foUO<Kohgh!r@u(=aPe,8KcZ,Y-29s/U
%%F4bTO:H#CciXQ?-B)(_;U7a.FSP2h!E!,7?<u9+<A9]hE\ODOiq$DI<>i+$"ci&8<ub[)]`/a-aAN]imY>9<1?&$,!fE3FkT._0
%rbJ8`k&Y"Ma!k-,T"bdDnG]pKIpGW'mE$bU(o;=+oF1=WXS4TL,n?9H((Y(SRP!]63L23j!FO+Z<c7F.5u@/TphBpuh_miAVOqq>
%"k*Q!`CWS%hgsqI6&GSil8:K70!q-NT_Bl)C5KqDlT]V&*Imo*onR'+MO/>.*s%W9H2(#:V2'JsDFo=ZN<*BiEUaM5"Fd!)pP51:
%qnV_#7;*egcq'I$NS3#nHT6P+D-])]$YF!Rh%`/ZaJ/E5;5"[R5l,#iS^1;.\?#C0A9O#8`#e5lRGd.9bieXRp=N*(YVb1C>I#8I
%R/p2aEWUW.["qc06%N<\A]D(k,2=/,-]?gjnmiBcc)>R(1Pns)>RBsjeb\Un2HpND^CpE^[AsdMD8sr^!B"K[!qWMDnR-aWP,;<N
%GLLEF`N.9*A5t6Yh@c)N$\J`tRTJ`]Td;tDm*KcqDGB-E)-J%Ka)%BCT_bQV-R7'8E[-<$E-3k'k,\8ccH5'ai9VofI`S2'#n`nS
%1[T&N@>DN\DnNgi%e?,WXL$u2iO!2UP:/"tH9/ne0H&Pgn;32fs#FB*"b`TH@*0Oc7WEs=EfLBt`[U(q](3lYSIO0M1rkG-c/1'"
%n?7m#AXMXXC&j*glPCXnjdEW&WSB(fiF]*0WEe"rUNr[&ah0WXO\UF]U6VQ,P1#h@N?IF9;+Ok3+>pcZJDqeSf5M?VDH[F4m`i:_
%\m*]eYkTD_5OFaXVHuLU"Qspe?Q0I)D@Wo<J'mmt=D8J:dH(),:@F7EGCq"C849huVV<uLis\!1R=Z-O:)3Zn]YM6-gDPMpe5<Vl
%V;t(US!^%HW*dYC_%Jp_B3@qu;<hW8l4%Lfd\ag?AHVj%CB_le1blBmc@*Q3<Pmm<o`VFb>-\;L-;*d2%F:M]nA$6bb=OW^'PX5k
%o)dhp@%oqa6%5:D^t)bVg>BXOKDi/%qD)U`?kf7jLDk"2XWY:og`*X1gL(hC`Aq(_$XX+h#0\Z$A2h%8_<rR@@_F:$p@g@4q8KB(
%:0uh+OruCR6BYhLK4-FPLXg[">dIcN0G%qn8nst&n7c&I3dOq+q\l"`!Bd_-"Yf$E:nn/kMFfX%$X(T%Cfeb4CRF26`,>B@=%Ynh
%5c#Pi1mP.\hnrh1"^HVs9r]iZb6A,hHCd"6d_g8/>k/rL1Y^Xt*^`oHMkO7ud1oBm8mULj`031,\9O+!q#D2\a:"YA%;H!rk(D2T
%M^?KM4bl6Lqu(L@ra)6_<uOg`gQhJI<`PD`]7jQ@-Op=Qo*25'-sAt"R?^=.PpW5-bl*o=MUYaj@#^aY?;k>#%P&A6(K79:@JO+f
%8A)?9Bnd3d=?!G2@r]r[RLj+f'Tt[W0#Q+0%AI(b:>L"5)pFGUTNJ%dQQUBLg2hu#g'K8((0`/#W!&RhP&M!,*r\?#mgkWVp[KPk
%1XQ[<9KkSMUuQV1hJ3hSNQuB"lMcb=>(BXHI5#DKbJiE5d[!rrKI37mOa0o69@OG@H)A_mEhdPf`EQhu71a-P4?a*aU^(Bm;k93>
%K(u3;97T]>GAdk%0Rm>M=:"O#]qhJCpU.?4=BTY1rk>hT55f/WPTXjUL)ddk5e7aQPOX(LhOeE.(.SPLTUV9*]lm'9Jqlm">]A94
%6dQ1a6e%g8f%Jn8Mb4pnF)#3u-Hm%;anqP/?@&La[-Hq.]"A#5XkHn4,.YPuAT_]P*Nq@W_:XJF)36M*,/i92i_aa/,$`NqPNeAA
%mVI>T**.A.ltuOGVg:*E_;iXO[LCa'l`WkRc&`M54V<6S>-@7[ZhNX^r.SaK5`K#38:Ugmr]u<iNgoGihZQ.+P?iKg1qJe#,u2-Y
%KpF.%%0pPKIoW*dfn%PV/r\VUo\n=B5ck,diPRmfj9^f(2K%Y1V>c!6-I[^`Ih;B[&61i\YYdN'#=Kh2!4NR56Ye%`>nEqA8]Y)I
%D4Zo:]V4^EZ<:WjV@.nl$nCl7%+(=MhYYd']g#<T0-iCRE.kO.$@%,.XZ'#mY*"[O"kisB9roq5Fc?b23kioRr.'W>0WY<__-R9*
%8/Zj_R9#;+%^53&>=K:_`e7:6qIFQq#U1<&m/gU)74cLe2c'!q>`>P+>$\C>d,qo.KA$`>fNt:ni,I%umn%XUR+W7N$664.#cCd`
%ef,./oH2Bk#J42GH=mSP,b<lJC4DWEs2-;`0=SU8WFW3_@If!o!uYqG\h>3l;j<o.J3s&mmYI,DIQgh<+TT&`5=r=W%M7qA,U8>a
%'W\gPB=uKk0^9"\/SfI?"5d1>3K-F\]rCY#Fo*Dt^<#s[+8)^JU+Q4N$c?T'9Q]=b9PmsiNF]6NfcUZBo#r+nJ!c;kk@qN4q1!J(
%;PbD1>:4'k$cIP-qD5-[oW]QbV/dl/DG?].c/=G$,:_61#$#iJ'FE9o;8uZk[d-22E4YDB1aWdmKh*EOZECol]Ht,.#XrVe0`a'"
%QB%)*^^Ru3Ba,fN[Ga,>Q_p,#g4GZT-,5BS;uO/,D\F.l2`&o>,Ss-]7^Ij!9ZR;Q*ikC!i"H7PbKXl(_DktTV1Tn-9)=J4;m-as
%8`R*:$t]eEg+u?3A$/I9a>HR"C0jjKD,*1@r(A;@Xh.A%6^Qc@q^iiL&a-s;VOKOZ:S/eaeSW+q9G#Q8qq3*WS(HE@'?Rp$LldLj
%pXm2obd$u9%c%<cCO)&H,_b[iR?Sp?VR;?F`oJ:F"m`!34^PJ2dA9%F[mB"t6gCEXLU7Ui98UJcSiX"8KGD^1HV4AW%C!gTVX?N\
%(nU$<JB1gqY3U+Dh)=L_fu!mf9UoM3pB5GSSm2>[?u0Sr/b$p>QXe566rPDu;C43d5N**(5Eb$J[QUq;4cX<6IW/QSEsF.l]I#'/
%a$[DLA32^-2S!S$fC)VFP"r:I/4d\T<id/>pGKXV@3gir!Ja4NL>#Ysh>hk?9uU;on)73P`Xa#,4oH'HeKE<nDZW2"^k5LKhlN#B
%0p;bL8C_A-FL:Z$D!*K@4)jhJ]-OX6%$sl*)V699ZkGUCeQUgflpHGWe[?;I0KZ^"Os[5Lp#%[<mU]gQ[)nmoAgKE;lJuub&SQfs
%Qe9]k*i:j;Z\urhW/dkO,??+f5?Q)&+"X?t!U^SH0O!U8gph6@!ha57ZC,]t[QsT5=2?6GMI5'/CXD7DYrlj'5\4$m@9^2Q4)O;h
%!tX.D7$(>%4cHFu2a2(oLB+L=Veq,`/C^<3[1i,3`,cbs3lRQTWnY&7DY^PU`cYMVe$s:bIi?orps$CEA^7?IjqZ)\/Tdn9-,pcK
%^il/J6fdBbGm0Nls3PIca\>5$p1[gSU9pF4eod#of!S-i.Xn_,CL<U_FbUGfWm#]l<tL@j\:*Ep-ptZ)#kQcPolk8P"%(,JQeL7T
%0;.7j(B:ca*JU1ol5Dg5=P)9/h/@1kU9)p_?)O['_,FHkFfeQY#S65.K;B]ILO#Gs*^!5>=B?'o,^iJS]#IM:8nXMaNZR>j"bVK#
%k*6u3OO9tO70h7t5>Lg]XOCTa\KdU(^Wl'_qef`V!C>-.0X':-.;:og/&g2uiXbptT)W5,Tp7,n_bL;,^ME?,q:!-".j@@[0X*Al
%$lOo>^d<Y)^%(tVYh\/n<Z_Nh=hKN@c-Vf9YRPDhTr?`t1043]#57cRkZPCKnkX&srdtsa1J[gcC9GflQ_?4`,u=mK$7ePm@J=^F
%Sf%G%UZGkN1"E\%7.qH4<SQ<g=diPeMNPFP@uus'':b4r[&F+YqAJ#Ogh/[T:Y>V=^4sg%=!t4OT8hZs/e`F4QZm,jW_b@P>KiXH
%R67Ed9n<[E4D"*#ooI"8?84t]dBi&3]#"QGb\1Kf1CXhi/q`7s6ZkC.;WCm[2eCBp.'RtoZ&K41lGFp6`5nfBDuI_E#3Mj@EF!,u
%F-Du$J0e0HVt3I@Q"00Jm5Z^2jY#L)G.FZ+.@f_uBrU!^GC\.fcBD.Ys%?`eCN%!1B,q*]$#JgNBJWG]m*;0-X1a\GTWhVo\*'AV
%aD)[PGeUITn*rKU6Jk>b8SqMKf@Lj8>IjZlILbQ'j9#)&q<5l.\Ogg[Di`5=a=THoq*^Gfe[#2Ge_d!3j;1cZ\XH_cG"2<2HDY1G
%:L^PT2I]8,[W#$AD4O9SMa@)fBLCPn(2SPnQJnU$jUFg_g8e^d\M;._</c0;IMlP!BL_/-D/9=oW23^6)mjKM!eETU\p]u`Qb.>=
%61-8@(!0uj.Z,Q1b9G;"-*ctN0E(l4(VUjISkI5K_hJo+cOpJl(e^?]I$\R4inc4.&]&K8.gE/qkMPHlp_.!BW$pUSEH:2LKO8C.
%lME+7,oO%GU^0,P7\\Q)p\9r*fJf8Gk*bq0O`E9#Lp04ifism`jb:-*&:H.Z]3.5gbIW<llS+VNek4h).c$TLi3X5@OP2T<1S@*)
%[sg*A&C[INUEOHq@5N3FX#R5tQgV<80^><ANBd'USA.9A`@p1T?bF'pf1RN290#IISaG9h;R]\P>B_B6LWS63jBs;LJ#+KhUL368
%1fpN(Pg9^-&fn119e:Nq%D!H(L31_2V-[%4d:gM]7E2nhB`D'0[m0`;%AKnB3kB#[l0ItJH=p$LG[W)Nla,m:%U"Eh.h.qq?@6*P
%.+K'WNug`B6)Lp^]d"tEqdBQ`TBC@ID!q6&Ybj8c!9d[r-7p=ad):i?P<MP5ZX\g^Ls(AkUJM%(W8Bhk(!ie$m)qPf_cW>)F7]Xt
%>o-elrk3C>prhjiHH,gupR?PTjnHfPp^MK-HHDk5CL+Q^&Zse/c"&f1]/>7cQkoW;3[aYCKqj_.ZhrncB/K*`a1JDrD1\i!eU(,I
%;KQ.;c^eS/g`FB!&bch(p\=6pmuPreNFdfUJ>0'RaU8T2[qG!S_hY3X9j7ocS?r2R3Ks5,dm:%c/PjDU2ATD&jTtMTq9"dHclXs3
%<LH_kB:a!slFm.3N)53Ep4bQ.F!;HtFZ5buiQ;C"DA$j/)r7P,hstoa[:Be?EdcftJ82H"]bj;;%gBG;)1qpJWl)Hr8M;WC"<RgY
%euc-A'Ka,oq=du"V;JLLmMM[5mFGI>gQ(K9\0L75<4n'70hUEqG!dm-:)'QTNchY/G77<DQr2t"Q6H#H5LHPM<Q1JD<<N8ps'3It
%3lgd'MN2L(_qZI:^Ld/%lO5[cYTfR>3I`DR;M46^>+6gERngMo#Lm*-%!)Uf&m.=`F+;No\pR(1Un-gDU,hr99.dYh3u@`^cHhVN
%CD(6TXiequKg(*B[EpS7,2#?<6GEdXLI(iuKmo"s"aPH^T-6Fcc_Zr6lUEgTY-iXZYe0%(lk`fV)&0K"[9jP]X0I.YDBoDlfkanP
%-TqFC%r!pRXHMMBjb/FaH?UAV2V`EK7b^3[5>4V+GeuWQ:<upFrCWo_]9:3B#\I.Rq/4=JQ_KEh>PFO3bP81_::3OJE/j.7U.t#%
%`p4j,Br8'BV`Zp'E^R?6Wc_O>fOnnT'B<8uMVukN7Vg8iZjt%spH%^sRFX\DVBqbC7I_YY;Od1[:pUg.!Jb8HWt9e^98^KY7Z5%]
%"`0G,A$I0q.%?[UpZ=>jGM/BT4nfr?.VJNp<D"[)'BZYB_dZ5]]r54pn%D3%Th04=Ep5jM8B0&%@XM5'o_T:44e=B0Oc^9X!g_s,
%6drgBo7d8K-91<,q1E-kn!E+.JX8ZV?kV/iYt<]oYT\I"CiLd@Ol9V^G+6Tnm%o^f4+eE(A#8/IbMGFn<gqe*BU5r.Ws[cAg83t;
%knG;(p"/i$:4PsK/^.D_Uo%`3mZ*Q-`,%#\F/>)=.BL3p/bS@lm^:>N/3LFJM]FJ&q7=o5-ZAk\lt"?OhmjT)NEan,+;^#cFdn[j
%$I?dBKt-(Sb#ktXO*F\Xs)W]7r:D;O!QGobL:*FZ6O3ZQNq68iP&1XVVu'c;Vu)2"UsBKi]&*p1\@"esm^F;@fB^?SMG&?nL=67.
%Z#:\.%3HX9L=;^=cdMus3fs2^%ig<5T,ot2(?dG84E(u88GV\)f4uEKGlDIlFlhS5IF!Ca^rpbj%X@fh_Z:RQi.c.[R&`8Vjl(_]
%m"*,=*,of86h,96YbKKNE'*!cg4p,!(Ai9jC[cG]CCX)EHn=sTJCd\k*dFgEl%>%n5(2r"kim`O@R#80Z.]^1]U&HRK@bE6I.4E!
%0CJBcHcIJ8Q."8E4=KPL&l_DP9'fB:To[BJdQKbQ@ZdtL+r>MVMMQ'ugi+UJ+!H/<3UFqNH'sg#b,&]PemCYT03H^BIlLg#0h/fs
%3+$'g&r8Z`YGeeZ0APD#VL`DGd_/g7i&Om.%"`BcH[k\W^39R$HXH:@l)48U_LK.__tub'R)N19G:p:rA2r,WrN=Q&s+7UH.HBp4
%a0Zrf(OR@ii7n9L:N62<KX72rlup/@_K5KZOa*i8If!K&OC;Q^&-'79`8Q3tA"Wbp?LH;@Y15_lmoo),ruPs(qVS^3L]?0<Gkg0;
%XUkGYJ+W6FpT<fU^W0NMrcbL;l$q;oT2+WQmB$;!BBr^D%0TjVp\2mCZ;@ZO^KQ'TZi=n/40MD+0A#5#1fGU/-C"e0,^"am+i#@Z
%-WpW/ki#+TdA3\0[55S/k[%M]7EGa6=k!R"#2]Jg;qQ@*>q_r;78u[*b;H0#X"1jZ8#spJ<I_KbWduE'k?P"Jb'S?fd,e0DPoen]
%O7qcpSdL.e,UF'\3pDH+<!8\'lcO0,j@]#KnJfh/jPTm[)%'M?"bCb;lkuBD(Fr[HMQQ[>dp6Hi8[?n-QO%b/N.[gtZeDJhCUn%L
%S]PH[@>Sr##oXt]AXV\A^sZ7!>X[_L?/5D<[kXsN?/Mh<\aZV$^u:*@\IDM)X`R?!0-JBm/qpZ+Rs"@`W*8Ia:e1%^BhqbcZC4=`
%>-WcR=]\2lSet?c%ZA_E=i$dFd7>+R!LjDKdA`G'@94.#!:;Lh*O-Dt<:5E>)Wt+[cIkg;kX:O#UeOV[-5^X3?b^"QRS00P5ZlP<
%H>I8"<Y\Su4/S^k@JIo:ETuX@q<P\cVCn=q'mQ79K$3:+b@^8Zcif3)UXb](?$$NF')DRd3iSofLU[.0&i7:Y$G1Q8RT"66p1KUA
%be?jHE!'uBP+A*q1)*b(/TK=.)\@F#AANn^.Y:,K16+*6-_[V`)#/EU=#*(\C^KGnif^l*\qsE1*o43N_&BLL"*$6`[T&d#WfhD%
%?G_9f7gnlr8%el+;gtd7;Oc/:LMcE\9\<tF%5+6RK5s=1I04)K9n&:,!"iZf@=Q<PVI^H%TpdtsR^FnDUr0:#jRs\Vr$CjBrJW<Q
%=2A:!4f`(KTe8=cnhfqC0/(al2tQEThju/L%@?g!(kT=bA5MV/UWTfI>U7b4%[SNY8C<uD1;j2Dkq<]a",4"f2keaKCfodt[T&=u
%mA]A![Yj;)<P=/73Ws\RRGb**U*f%)2E_l4-Y`hJ<o*GXFi-.-WHkM=:O8k(ham?(&coA15KU:3mpb%]%kIYY]Fk.SS]^A.Ai[f\
%+p#LZ874/I2lL,G3%.ntOeDaF>T!gNl)YL!)pW!oJf,I<?E37&3eS7&2=u]aZrgig<@mk<0C1uAZV%c(ai""n6T)[M*'@TgnIrK5
%(Dj_D5#)8da\4kPeX^^Kk?P\"1eD$$[MU+=d0i:Tm_Wfo2,&,U5$lU8j]015@dCp+Of+ojp$3'r\P#h)\'Qb[$[]fF@7[Q#$;]"J
%YkII2E(KmZXR"NKDbn6T3:JO%a]9:kMRTI0CltdaP#-.TT%ZZEen_S4"'Ls2JVr)\!jQi'*s2,$ch$Z/dpuj0<*La)<=.kK897;S
%SYX.5-?mf#dRd&mTstG;=5U>A@%fAfRY<S)a]r*$`(^2dJdA%ZP$'"kPte:1dOkYYUeI.irKM's3j"K:\O/7tAjT$7iOs]V`]/Rl
%]],;h-asJJ`Jj-+qsVnlCjm1nB<a%=D%J].%Cf]#%.Y)a\DlN[NfZa4A`Wq7huK$*jiad5bt8.*9)3!896l`fJ8*UJeegKI"A;'?
%6/+TCauOq*YO=^Bj'R>UaJ8H@R^i3uRhm'&/0OlFc-lm:^+0*l?=Np*s5^Mg4&_u_`,bQP9sFm.]l8*/@PRkZ%18S-nu;atk#-!r
%g9R.KN,9oH%Di,q1/]$59%C>**r!hrQm)>]fdCc-\]?0ZbT\EfKL5DA&U\$832(#ON=PmLqnN.b0AE4ObO*U07;&dL=YT?g:@[C_
%(ERT8`HsK3Zd+;dElS5&&!rT.N73bf()ir)f;?E:)#?%e"8p=R0NSb-/g6AlX/47UYsO@.H'hJSCfh!X%$gjJ_/0id-Y:%XP(t_+
%GPGL=Su2T3'BpJ;>AGaT(Mt@SS47Q+A-r>a/W7KJ0u.Y0!8U[t-JA&cgY^]mi5SIoO6@upcATau(mA5\>-cI)nc$uMm=9,XNT.NS
%Bf=QTaadEfhpW8Ip>qMHs3!X'/`6.tX)0fZ1Z5!:qE:bN#h!5NSnf$#a.bucmbn_&0bb4QX*'7.duQVkZ`eL?mDh?657F@V9,qi[
%AVVo#m+VcjDKY[t(=PuK:N6"Uf1[Yb#FQ!YXq;)mdFQ7Bcd[T-\%%qu5EQfFlPqClNNjDHZ[&Q9XC'o2i\\dC12Lh-(-[N`hLL\0
%-Lq%iao/><rKmr[Y4Je7c.J.V:k=2]2NmLYR).fE[lbn#PI@T<6"jKiDJE"a2:Sb+7fLqV&qWWgFHp9*?!%*=]F5K6_oW[`dLOp?
%L!YIAW_'L?Rl+WF0)F!R2U?.9qY3PK5J66akuX9/;i6%738=EK3E`>b6'EE.MhiF[Y/$H1Pkqj8-S1*6m"9?k8:p&?*dX7DmsW<C
%MS!c[K&fS>M'/S*eY@7L(M/<ArX1MR1jfH?V,@\A25Z!Q@T)aB3iHA8l0c;H\q'hfJb"[pOqhHiZ^+VKiJ,CF!-4P]C!BUT/;?k#
%ocomS@b`81F8;W,HeDg]OCl`X`#`+h4:6e;:u-+;he)ldEBX:b\H4TM_sT6$1`B5k&tAA1M#2_W@h?\H@QYC]TT_!kF(;9X5kkVR
%ft!HLR"TG0>h:dnMA<Z2b7^Lh*2W&cTq5;AqNduW3a@T_=j/-kc\QfpPO#Cu,X<'P\F!KX5A=2+F4?<J-56FMGjhJ\>L=WOQ+5Bh
%_(p3@\m3bIgcT:XU^jXnqiXLfgq]Mi*GnqlE4]+im2D;<.&t6D't=ZBs'tKST9nV_,/E/OM*U<pp9/n7%Ak@F:^'Ughe^^.P+XBY
%(k`B"6QEeu0+7B/Q@g+K#^1hJ#VPgn9#m5+_;/=/6>qdG4s!3tQb#iHNko<J3M=TR=`&2+13Q-i4'Wt8ZmN]09%P_8YfilEEL,7.
%JT?cB\-PS#g+sq7F$W=CP#fH08+Y8j$gQbG^Afn)^X?Y0bs#n%[sjZ5R__<f*)tYjUX^t:i*1iU)"<),)Xq3+XWW.@:Fd33QF0kF
%R7'L?W_Z]?d#f"%'^F)06#'nh%]C\^l.+Lk<%HDiZ*>$L9bQolX)So$AGBO^/!>ruP3n%*(eG^^3@o<H1;:#A#f^G:472S"A]kQH
%pNf!.@5:trcj]JV;H:kUV1lJd,+#`PJ-r%fs!S[:o?,S>X\4fIS?adbS(>`WmNBQijjM6RMVA(.&f862:0?QAk'PtTb.4#XO962\
%\PX$16nk*dK\NuP\\FlJl;cgRL]#^hB<la9XVn/F<=C1#Gd*m7\rsEYQrjp@fSseqopcGjZek+ML&%ujU^!>Z[SL16e_tur%u(j-
%Mf^9*++oBE&<rc=AA_\09]OA:ZISpgoF&p/\^b!l\ZVdm0!damF6FsXRb"N6&#:UN[5%M?X><dqFY`+KhZqmolJ(fU8HUUWljD@o
%60WZ5l"\tG`J>f1%<eK619ZA(J2jVmG40)>;WB+:+,bBB=q]uf%X6Jjo/hp&#=sLg#^Xid+\"D%:YsYT8>,Eb>'TB4E,UYlj>%PY
%SR93d86PPbY(#:@4Qcgi7k*"b\n=^'qIh5k=7"r-pT[2&cJ*W`Zo[RO5dt@J"[gPTh5C0CD;?ibc*:'*>NY%Xc.Y1>&k%Pb3n#cp
%*BG=_Aj@9\3HI^o+[M'Bd<LK_U3XBB4tP8eC$Q(DhR0Y6LC'gkeN!(?UM9PJ:ZhMoO0!j#ec@8Mp2IE$$Ub05Y]:4UpM2$5a5*!a
%WF^B?.-s[5XpSf]ZO-<W!_2I/o6%0?KA!cTgji"=SBX3^r9&3^E4ZLMH0P:WZ;@d>8g:Q^aeWEDWRg4Cr5H>QP-d400D8^T2Widq
%8X-6u>MOREn)ADt6L^08\#g[\b^#fL3!U^,8hT)g4>C5*7omUj5$eZK[*IhuM@?D)jr&%0/F.['DfEM>3t4tiYSZr=)H$W5'R1Ra
%Fc=RJgr:a6kaT>1Qn95k<?=AAS;.4/.rK^Dk6oH^Jn5N?=N"CnH0ULq\!H,*BHYU_#_V3]bu8`W<LT'rTWIsaQWJG6qWl['e)tt/
%%=@KT-A#eK:s#"AU\(?3io-uA@SLq;"1Moq7SUkNdg,;HIQG^:b"cR3Dso/q2C5425C<t_:4%[d<aWC#r&V-E=C<KYcbKPqlu4)f
%&S3*W)5S-m`$=nd=;U?:]5S1R:W!e,k]A`1MVS<\V4P-h/U1H3h(8LFC$doBA$WcecQg![/@4tmZq!1*&pm,R.)m!'^:](hjL_Ud
%R(?d&2'_nppl8/='(@+P$Q3,NH-p"_a(C1FMV3WdIca@e$1JDt_;)d)A;C3>cp\S=n%?Go-66edr("VNoI&Vk1SeGVg87tOV-L=;
%Z3kPf/<L9Dqs.Y-TPcD>B"kQ1.H\)Wl4Wqimh=W8o@n'Im4.4'%)Va/,nMGCdN1KBrV3sWeLu')*Zq4;?&2u3#Sk"U:Tscs4<s8A
%.IUm$(8@0)K(6H.H?$o^QiSXPOFSAd*2\oTq3F0A`HZ!cC1NjGEn;R\W(,#H"+?jqEULY"D9Yf,NP$s/W3`]PK&t3#o&cB&NA8S;
%0_q_s&Zlk7U10).lsVs#D^Y#a8e-`9QH^9\D5ulI;-pY$i=]VCH((P.mC5@bOWXVgCahb_l*lAb)/2Z?EW+Wg>$u/SZh)eAd]^%,
%de/<@TBhE56c\i:,elQ=r@bB'd\]g3&,"1:oi0,fPCZmC7g8l%UqB,B=nT8eAlOqAmNJSDmStK"0,!S%U/@eGG::9HJ59P&<&S$+
%_<RCO/)3ru;ZU>CRN;-IM,t/UB<*@C'JG_AGr3leU7qVW$L^dZ[Iu7c=86TF<%,cX_LQtcFUZ\&3$_<n*Cc;?dUAZ"F,WcLj[:32
%0LE&h0aCgs@XP-qW+<T0J08<2?pf)b6,FuX7>5,6Ja<Oqi(XIbE[O^6a2)V=&kL*H8T;tk%mK_<jQ-]:KW%8ek"P))Fie;+1KEM_
%/iQQ_1,_aN;,^[/o:f+mT`"a.,/(:bGZ6'L.BRrVk7hP?"nXee"%+@,F.1u.-i^ZU7Jc7b![H>:K-,bT`YEP(RMDh:(qsjdab&2c
%'DPW()Xrm7V1aYah'Xi@>79N!\eK+oC'7`i85`%%Opct<h7cNi`3(=6$dI+:r+K/e\N:pe:oNBT&Uff=+&@BiJL%;Y8.tqMq]2>^
%;Y]j[Y,.@DE2uSN@)GB>-]VF\^VYjYdGl=To_pgo^ErQ[2is,rW4?SAO9pU(G$4qRLJ#Dt,+q\cRo@V&F.4YDN7sG,#3Q>;"O>"Z
%/^aD,_uUdBM*TEZSqPIP8kH\Fh?6I\!aEe2%^lZG(H^W<R3SscNSD<N87*IqiVi;kI`!"8i/pm^9:g'iA(P.=+]XimI?2knY@c/c
%Gh^B.L_o.L8.LC<Y=WXsd4(inREjoa^`QC:HHW&h<s[1:5c-g3Fr>,sF3bI(P$1#)S0YQo-l66F4>45m?<,"$oQ)*oSDU493of41
%;2C7_rRR[tC*uA#?<j^f<,\*KMYEJtCXVh?CXV(3kOMiPp0XVKJMte:VX$Es2gbUYN6*t57nFM;fO&:t#hD70l@[l.UiE%4K*`uV
%DmLH1<hgR8if"IN6m\k',%AP,`&L<Q(ip,P7Bq8F.agBCd>7^Hm^f(!@=D.5?VPouaM)h!'W/FmZ@Q7te-U+D6`@ANqDEL?/d]eh
%+ri4`#nd?j<_8X:JAUG>*H-\EU@.OWMolFLV.aAj@c=pnCTpWqKghckEWg0@_QY"Edo"af.l7;U@mh#rm_4Q[d`e\pThKZnVb/RA
%\X-#C(nca/f&RQ%A>t-CC0!>@Lj_8)K2]Na^6@PjEmZf(!Jg)LCRQBYqT$D!U/PP)EZ_>blK[;Zocu\X2'UNJ#D+7PoUK-K8HQm7
%-o[fM<DE.NPIfr`(`&)6WS3R_H@6<d3)DH<LWGY7h]0'XknTj%-,B7UN"BMp^AZk-<aE-81@p95'm2a9(>72g%tLi#'>q5(!jr\q
%]d'Y@QDukX,5-.Idnh0K!-]),aZTi0<>:9%r$87$]7nU&VSBgQC(Ml1R`>%7EJkD8eG8;q7o)-,]nDeu8K=`7G.A6JDue%:lnNQJ
%EHO<R(%<BHEO#<U"H=/5qaa('0o\oq]PQ='(SF,E+*]g4;E&8We1u+^1XH_.L*?c%ktskp06_!(0*.`i[H)(bpb0m21b-]t=tn.K
%Y1"NZU-#'/BU3PPr2=:idq+4s3!:oq(!Ult?e,YMl_LCOSfCEb-')d/n=V75<L*%9X,@&&+=S;(bGt:Tc9p."rU-QuolKlLZG&OB
%>^*]Fnd&;u$APaS:B.U=]NCj2`C\1Q;\Wr4JMtV`Ju@("2^*(e]W(Z>P8?!S-T=U/lF\j19/BdJmQ"Ra?2FF>1J?#qbO"+:+DiB'
%hiG`#j-TInBWl3KR`k*j=T<E0SCY5NMM1'HR.!alDoo]e3;<JMcX"\WGpmrUBX+*ngN;e/QtqT)gjMT?9B6lU3),`[0^7mcF_d/c
%iu.feDmk%cjL&acM7;[o4H+n]4)WVe3s(2'Y1SNC;,_ZY&(@o@ZG$gI>l!_L9aI551*p'#jX*#&m4AK-gG!Ng%BhkGpcp?3]:@Id
%n"kOJd2K(!7AHtjc9P(;g0[S8\VK(XF,QiSYuZh*;FIehF]e:Tm76#4hY_IjbMf%A%-ffR.60L39sU]qT:U%`*DY+Z'Jmndh>.F?
%^%0n2VZS;DEohFL?bW+Z!B7G3,hTSm*BSdVNal?&<g;#-BuMJ^(]gE=rU^u9XHRE(Gt0i0G0WWlD7266>%YZ'nrBpCYV:HpEEJA4
%<e!MR(<_$:[tD:YN</?jLO`hiMrP3]Ja3H>LrgW`ar$p'bo*fhEMZ^l4T2XGmuR25:9Vrme<Ust046i$_6%Dc)tk6d)nTp7^h%(e
%6b-$\Lro(&h)JGio*n11$+c5<FD,a41aLHg%;GX!=,7Ja>J>kpKmA]/9`RPr<l'ZnQ(,pFI[FRUB&4AIRc<Fk:/fpgkC&_,)TGEm
%!i+Kan%?nRMIXf;9b11HfP2#49lZECoJfS8StX%9>M:can"uIq!^J!..IQ\T?K5IO]BTmn].'V16VGd?MUs*oVO6e"*V60XNmi$*
%eEns/&\^N1J;5S.;fk'or65r)dbdL&H^j"CE-lq"M3+<C(7qCJ:X`a0H(nQf4>0XWG)]u_>Dc=LVITt0Y)"6W^0'$L]p85V$6j:>
%o%/'6\8<MG?(G.p,It8Q@3bLi3,GBej!u^gD.F@@]<8?l8FB2r(eH+kY;j688^VKih/_qAe%1^4G:XS_4e+NM@kB:5Gi.3tf;/$1
%[$23j>fl\V.AN>;#X3-!\bEsL.2cp3j_pHJ`?]W>mGr+[%Qc\(M#V??8H`C6:7c[k(%@jIC<9L\]B*`VkLCbR-BD#;msMk2-bK-P
%C^tqD58Gn,"0+>%)7op(<\YO!k<5hK67+Jp@mLe*f0.'h?647W6%FHbC$]2bU6\a5\,P_8Z?2H]anFpqE`bPM<[%1/4U1Z@h'oi3
%&jP:IrG`>H)HM3ti$CfXbKbo:Q@&$@NBpJ&Qf`tUCH@62H+aFhl_k"-^P2uiU[%W\CWHulF8+aJJ[PTMN;[P4coJ4TE'N1XZ2G"o
%ht?qf#&I=innnEYe!8OH4@@VQWL$o%k%.*s1A>1tMsRu%@pZ`:J7!An>X<fL9.uYqZ$u)*l0O#6i;U(WfGfrJS4GY1)e;_2r4.18
%r4@;t4l?7@q]1."lhf]Nr.]=cqFu:#Z>34Nk?P%P4$G.9qET0Fc?uE"mu_P;\qeBrFqeTWhg=ILNCa)>fJU[e8jg_+cTXrg5uSeN
%s56'4R+X@.*c_54r>IoXp\f(IISI.l`]hNhG:G8fq^U+!("@7G-%a$VUA%=;q,N>Qo8Xt:2piL[O5WY.''LRR8?f^:Y>/#m4(iet
%0uGEYL`U/hdKOrjAb.+a((R97JP,-b+paR@9as97RR8>KU%tDlUC"k*N)Te2!0-Q"ZWaBhNCJ$k!f(-Xg^cCTP,6i(modLjF,8s4
%nZU+k\O*P-_.O-P$;!n/fW8qH-qHeeY3#hW5NK&T,q"KU<?P?c0n0b&ca$qW&r"QgM_HqiZneQp/p1Oc"qAm+R_0(60'd];+Qajj
%V,O--ODBi\9LN"1;EF]MV!P_dY`XU#]YPM\\t;):Ym2EXV,'t:]j64G(P.(c&@__Ch<I(CR;4EZ,ti1h'E\Jjd'jbfFO3GbJg0.c
%9\,Ja?f.[]:VI/U>F"82W)#gZ&p#5(q!\+UrFqJq6@ETeh_bYE9OOi5o\C/o&V5XfYt.$b+!XS!F:Y]j\12p_5PO.]=Y;;h4uRbH
%c%%-qJ<"sjes+@]!rdiHd.sU6k^(2GA,@j,]^5OE%/b^Alc:F!bt`ffcmG#[TmUj(J9PbJf"`;^@AWCJ[?&a"MCM-:^"K,`dcNGS
%BN7B8i+3.pJn0It'B8LLDAjgb['9!FBl@F!!DKe4o[-NpJ'HWZ"qu#a6dKo1_]jRdTul7biothZfCeXgHVBV1cqQ[5HPjbY3CeHp
%Ef]g2E@IoBf+FgqJ0%'c2nL2rBV4lY%$cj(JJpo+>a7s)D9UGN=sEF[Zn>\sHkk/G9P.N$?f5o2E)VY2P"g7b2;fgW^J&bRZ,bVi
%;KGNTh:CsJ06J2.=NDZtPY:D0mWnJA/5,^r7EnlIBOV[LqI&*"Rlm0:mn?0:^?CYr.g!e68r^$HgZeZNO8YY+h.rId@]oHbp&XEU
%2&J0<\s#J+&.*XNU$$%!LS:cs4_XlP>UZ?7>TTAKNG4EWGIWf!$Dt\%MX1$)OlHu@_>SoMVtNd]Gh;\f$2D1hZOWg/Hm`mec:T:c
%9'a-"\AN,#&69W_$HA3MaeWm!MF%Nsm.9^e-[<*Q>Y(Uf?>@Y\A?TMF`&?ljNl0)<9L9tYjj(paikSL2mU@[Z4\Acd(9d?UAK(]M
%Mm*lP=^406^j=TO20)H=(Z7hXGUCba&OPEMak+/'-=DP"?D@8If3]`F<_ONOs!2g0;C"aXD.E+b!Eg?oU(!ApM,kW;o]#Ib!P!5%
%J51cXMWn]k+#0k"ZG#dKW_*AS97E@l-!QX=kX&.*?f$C9HuDRtLgO$j0lg!=`e\QuC(c6p7E>QA%guK9D_3ls/%q%c9'?^%!3lhs
%'hcG]PQXP\&L`BbTWAs+^[+AN8_c2Z9_fgn$WcnopES]]O>0:6StYdYY2ce@YXWa=3C0b>nVb=PdhDf'Se8o-f^i!i/sKO^8j,'8
%+<+KD6a?to9#lHaI$Vk^P:F#,!B(%CX\*Z6h>rEbE:knf&DAJSQ+&:/,i]"`c_?^?'G*&E<Keo3))-8r_2!#X(V+aR,PAf;=`PG%
%If,XZ,^9k#GF-3aZ0bCc5EI4*Q:r])hk6sAP,jf+.[_X+d;c[(*i5=A"[,DW,\.Q<+-I-STL>VfWdYMUH6F\VknERO<>'XG12hQE
%nNf>dgjs!4k<%ZUKj*kl$+?mf*!D+uP'ht'[aN".CW@TD@4K'%buY:Hmph3Lkoqcm;F%tg@-DN^b6Y9PW[DXrdV#-Z),T.(.XYY*
%oH\O/Lk@4Kff8UNU%rL,]%_ko$iOBLAE4[!!K0`;"ELt>(D:Pn[C?i'*&P;P0_[!O^+T;?LeY!\"Kt:`^fA?2U-\2pk_.p_L>*#b
%-au>*!*hAUrsdD.U:A"Wq^N<h-3++?(@MdI`)4p;8HGiI+Z8$:,fO#l86Ze-)GBTRMu.T[7YJVh3H3@LO^`9Ej)puHrh/h\_@EMg
%(u!jb'LLhiKuijLNk"*.4^kPg0.r>\i'6lFBC:g'9YCj:Rd7&l2]5UbbX`[J_[8P#;epCb=V&\"(+BFAE.T]N6ZJ$`1PdVX;QpO6
%C"[X@<Jp?B/=,m.c'9ZX'hh!A;XqmRjXQ]MQ!$ZP_DE]PD:FQS@A(k$mj37QfcjNWbAHH^/5IE"$f0Jm\4"_(S@%\h<d^&d%99^<
%d<=:QZBi;t!P+^*6nXi*[G%5JP*?*/2LXIpShLTuF/5:0E*bq1SX5"O?WCUjrY'A9C(hXQ-5FCn`h$.<HbG`Z2[*BB#,sU8?G,Dl
%:!#tq,I*]e\dm:!DjFU2ZKh$,MN&52Q'M?^UnGh8%+_J6U4\;7e1hB6Qec1nB-!_ublBMo:,E(fim\N&ehD[.5pA*%'L+ZDR9E`_
%.2mr'=6H3-1V];"8V6*IHCi)2,\NMBW[i.jgf'rXT,XQ$WPj=BJ726bQMq;ihOe;Z"'IDJ1*DYF*5a%I=bOt2kMGZgLh5E#kCuW1
%ACB))l?WcXLGO'F(=n?t!i/YU4Q@`(!1+DKT_$DR`<(O$V+EXm#^U]O&4HThPZ)Pp),+ZC*c;Ukdr*k,dC8B*'f#EqWJHjMZL&+`
%"-CC6&jCK<DWnr)C"nDhH%9dc8ID=MAfnmHTP$[aF3+o1^\B!lb.nP<(0B$0[s,gY(13.4jRqZFKgBfALES8eb-_et1e36LiP7'O
%M)P(!X-Zb0*ND<?<6unoN-c='@n,#M#a:&n7TVDS1RdJG`'5I>dQ,O;b^<^[>Abqo@f]b[k87!D&jou4a"XIISO?e=@AlLSP[i,!
%]X_iuf$`iP].F;b(1nXMF)b3,8agnM"#QjU0T6Y7qPnZ+,A#@M,%Ji=@n8lY($oF10B&X5Zg,X^&7G@9rD);q'<9>Pl!KRd&TY.7
%n45EBfXc^#/%6IG&V,"U]B)Rpbeq'sCF&.>YAi<:/A6q&5+GaqlKooa9MCCK7%Zq[hP#YlKQ5g:`aPGfjc&;>Ig4fOr8sP+Q*b<_
%6NG561U7VH\>_g3Ir`(L/mOU,%5kg_I^Sh,IMKt(nGkEHP[@7Z?+OK&;TBA&NaM79\==Vk#%mHQZ'oq<&4=3GH8[o9jF3<&KVHim
%,?J4gPsMZ=@\q&M;=HtCZ(%a79;`%A3JAS$V7P(C0F$*+9J,7hYgIXAMp80glK@YE#]E@r<j_&gG+n12Kq&X(A9h!\3&)uZY"RP;
%#V2^X9FuF4q?tDi5V%8u-J_)W?Lu<n<t>S3c=N3do0r,7Hj;4ZKU.nWn/8p7m435"&6::n%0KVLr%(#HS0,3Wo`^3M]6dRs\Ojr`
%;-*b%oO@RP6*mh28KNVp,em-l:LD4[bMuun"/pGB2%4&\)]f..9a1:%Wb%#k!9^@KOOBBjAUV@O[KV5I_aG%;>t&.^27b9@'TI6t
%+Ah5JV%?<k=D8N>L;IR2#g5f<T(>:&H;L:EC+gT",Q^9lf'=i]qiR>kpZflih\R`qX0ltGL):hkb7L4JQ^Ht"=52T3O<2B<cVrhL
%maDN.*P^nM)<l/PiX^5>jR%B+#[(&75'EXl5hqZi_1tbh0m)hiH)CrUNT^+1Hs!tU.X+s:OhETH42\i[Uj*+SRJH*$Mpf"5c7OlG
%;@Qg>.K3kY-4Pkk7s4@'J6+-K6*AT5\B<9[V9PUqGJB*aab"_0%7n[<)=D9Rdp@DuP[r/<;)X+th8qrb17(PNEV6,TQ<9<;Isc,g
%O^M(VW];o)3b*F>kCFb]LuT^^\jun'A4\GpL6nn[%JlG:/sL^o]IoA'=tKD7Kqt8TA9u&&%tBD1hOh]d)i;"EBE?IN&`":-$BjLJ
%,4&'UgDjmfd@i1BB@FifUpH(MI3kB4-'(b5LHg7>)K9,U]C1/:0ZEBe+e79/D-+XC2jC^>P+/4r'JqcT;Pk\FAh8I#BTb`fYD[WZ
%g5C`(8[rXCAX[`S2N$J7&)$+U(TG/K7,(+\[-0X@?f[YUE!#bg:t*7jK!2_P%&@/1Z`R\</m[0ulS994"A:Km3"RL!s)q!!77*b+
%m4Gis:!IAN`<&MHN_p-@cAXd^EG_)CNah$b6u,6g/P-'>Kk6Mu,a.UbNV)l;H_,qe?I3g+Nj#8=KMtZ!M)2gM%n!QOp9[GU^;k[F
%aCA$_E2!/#equ.b3PnenMo;Xd>@X__hFek\N")lrH[UVg$#DO<%75O&25r%s*1j3a2fEIj.*oJ(+_3@''cUqj?Dn"W`U\qeX`iHb
%O_Y]QIl7<7Y-?,_$1\SPIRgfY:$4HSiDP#p"u*ns0YmU-X4q'rW4'SnN>A8rhS7C=WcD#2:[.#6qr+"rTJtFW(;=BRjk.feG]4!*
%(iXJYBdb<mD7;]6)SnU,RV*=s`INi-Qu;b[C*em+[@<kpAdD.c"=Z5\%T.ErfEp^1:3(mlY`@`A`5Nf7-rep\WiN6s':lC(K<>Uq
%RV:+:aXOIH8[i+-/hN64\Q.Sl+A>$X_^9aF"U>)4\m%U6C"ltDXkXS_9dYo*V0&_*c^fW3Q[kl]CN1ZY^iZb?NOB:7ZP'35Y9a1A
%$b<#.3\9:t^]9=er#V"aoBT:gi5;4Ifr?mg2ieHhAarrtM@mq66"MhGr4GX,YTAsJ9-F!>Dn1@D`i)HH_u6PNZUW?(H[nM1?Xj#@
%E[.9T_UT*tJB>D0OLK8`U@]88FVDreh's%.1GKIhEA3P/]=M^R?oqt*M[E(c/dkZVD-@@-3#j^"6PF8pO_tj-%)!os7_oe,;$XR7
%B,ACB+l5BL0/A!?q1/[)!AotYH\"YI"5Cq=)(g_2QUHhk+6HmR`'u!UbE=aEn\Gg&A0,>9jFPVg!aHfu@RFeF_+k8;N='@lMq_F&
%(I4VWOn,%uI799?V^e4cV>Eci,)-gjiB;$M,XF$g]BZ%%-EWU$-jRsIQW;olg6s$BDQdS'T\UM7)C=Ln^d4(IfE&Y!X(mb@GXt'9
%_])699mNT6HP5JA;P:tTLU-2a&j;?:?FSfRUHQXgPpqo'"N'(/$gc9k"8ODNG5f'$lR<6.I3S3>,C;=V8lIDLFXastQN+f[l'^[Q
%VA9dMA4P0m>i_EnFP;'F'Q%;b6LYC!Z)LjnM8k/,#-;G_/=9oIS<*N_HudkO*>T&'.-cCW0GQ8o6+7V8TnQBA,P-[-lMW`MHK;gH
%9Z9^?c1r8!D1c2U:hA6qmT;(ee]%d%mLf`q(kOT:[,7S]WqB5@[.;m(%iqFn&hB?U.M(Mlg/<a8bEl/['?H10<023D'M"mr'it1J
%14G`qAYs.)W%+FVkE`/e1bi0JAtiE-pQu]E<N+(G2G8F<C'%;u2QM"q#/P-:%"ecPjY'\AP<^O,^\:1?2m$A*43'FfA=#dRXX;0$
%E_nTV72Lgph.Jk!ZkB!IhPuI1X`akgBMHUKRa#]a-lmKbW,C4r'<:Aalj!r!)4`)ATq6Am7]88d^pH#G6=kp7"K4W+ctpMI%>K4c
%A4U:u[:FoiR^gZ;b,T9"Rh2m9pfN[!-*'>dY<cqLoh2HNjY@r%5l<-:33Umdd%/fYjj/,_!#UDVBD-IM5*;(],1X@u+mYL/3f[1k
%c?.,-LQUW7T?:%:8?sqbEk=79jn=uWroj20GH&E3$h8r12HDA'of(/<VM-R.l8+S7Kma]'^!Z.3'LhA8\?sJ/-;`AuVB*K;Z;KE>
%$`.H;Yd,+:`RW)hAB;.+*dF^3Hus>,-".%^*/>Eig;P/i<?OnjaYFb/pdWVZ=1]SeVDS1M5h%4W+H/tIPa"kO_Q(pe&mn;3OP7i^
%d"+Gm$ldAr4j%ZY>(Pm$8^uaC:d]jD$&k,tj'.KYN<PWr\![*_V$;i]DbnOTV-l^N<IU1HZsd!)g,KB1E-it_\^Oh0KBP6\VERkW
%>Ib2sM3JP42+\t;s':FNPVEAb<Ut(`(Y/TD,#ZK3SpFfcNd3bofeC`dHX0T_WFZTQGKCZ4"R`i_+21*S\OLS]mbEtn'$->h?gK$P
%jldtQ'>>V[FP!Y*M[f]h15.F\;-&^Od0O3Z!n0Pc8lFsXhGJFj<G$[o&29ok9,LqOb=Uj)b+eGf!b+X<qJLUZ65=_N*`djI7!,$h
%<RLIfdY=tA:+g&4U1e8C'X/&U_1cGF)b9pr?-*B2S_='N-#ah[&VYrB7Dd#Y_'$6Lc957De6]e,11Up#]jrTC2^)Qc&_3P>kdp(F
%8@XE*GIf@=,UQIlF9c&r"jT7?.iO6aC_>_ZGjMB#;ZO0[MSXUr^q[JW.J78>3n0i/gcb7/_ETec2\'D3MZf_%q+N8`kl/di@:JWT
%fL0jl'][R+%th8(-!MF@)Y%shb@r1HE]a:VeHX3Ol(Y5L,'Y3,P.iGbGYJri#HJRR84f&kniXu[=Y!]S9HO?S-*K-.WHt!?ncg?-
%,uXJ9Dh8f(N1f%""04NTp%QrtOFn$g8E,n4N,Mr0P+u\7fC439jBRSuorUn2S5`aAjZso>-BB1g(MGb.%alr`1<B;46Vh7M4Ub>o
%P+;<MH4A21Ffj5Gls!s85n'(agVZ9>PDR#T?Ta'<E8M^jaM'+qW2>ac9Sm(;g3]^=\+Y,$*SI%g^Eb(lARuQ472";LSAc!Prr0P?
%>9[N_"U,g!qat$(a;'K6MoCr>"Q3]$d95*ees6*_V9i<&ndPJ!<o>&[p1=;\5RiHk!RoMbL5>JEq.c1<B(e<'!:d@CN5D5Z"O[Sq
%R4q#SZ7-m5AIH65*[00X0aU<D%,1Eo3'J^pdU=@prK^J.elor:R6;uF2n(HZ+DdrY)&AUbAV--W26ZM^-n2M.g).cX,^'A@Zcf;B
%'@e@-Nbh"_qp&'sLY#OR#UCgHl(kt^aDV14\"6Us,C?^]K*pQI!*KrhPWQYF2&!`T"S#psjiUsh<.==J6,70uS'pQO5l?T$p7NAF
%7V'GPA.t(=8,u55CT(H2Oqh?F5?u\:;o+Z"-rZ&,1nf#EC3KTR":m+"&/16.+Kr*1VY,[W9)Q+.0X_,CqmU1UME*'L6meo>6$$9T
%OUK::_n,:;p"[l:hr[,hh=nr1rMN](s!l#0UhBh2+duWJrB)l@-lX+N&'dD/B\H%8K7"47^.q7XN"ppKHN4alZdcr8;]L9eH\Z)F
%-<)ZlqtC9-%2<[QF50.Oj,rfXJ'Utg-Ne*O7]j>uD%ochM<&H5-48k3]jB60*R:?(!@=;CH^(<_iTItr?rC4QHud=uMsR\k]t'bF
%%@lml`r>qD*.Qf7.Hldk`.\3Oil)N<K;d(3"'RhDQUYosjSuDY!G.:/OJ@(YZNVRKU<3H_ViYDi[(8Ud5ei&`8/ms\*?XR3B!?kr
%L+d;*l:\&cak?h_&h5ZPHVA;OM6b4;O&>=Vo4%>\A="t7Llh`qN>Nc"qYbC;IR0<annJs10%JgT!!X\dN.<IXkZ:VO,WSEb0![?,
%HQ?<WJ3Oh4.l.R+4UUI1j'e[:R&j7oE/hmD/4JEG^'9kE926j\O(RK'huX+r5dQ-4:hpV(B!IYfHg&^9:pa8q_B)1m9"-'`C%q*)
%-Y<_D=WW33fKGOVY8t]'&+^kUZMaGO8i"?+D'U:#p2I``Gkg`KrVj;.^X,It,'IjZ@TN)t#4^hZ\l6^q`CZ##!sStsYNbrrjV;eG
%G@@l61bEkQ&'!OJ0U[H1M"DLTLZAkJ*CLNcZ9l"Y(b3Vj\kiAuN%Vu`Mkkd.[6_MC$Ubt:X3Lin'J<iWZ9mFjYP.tf^;$P&XRsp<
%@@Aj[c:J[PSRU]*bC>LMHTm)l&*K<5&BW&7h"-),LmEo\2O7[2=r<e$_#%q7?uk2J%Mlt:\RBKTI)b-lrr2GHmnXJ^WfL&W?p^bK
%'+Rk%*M9?jCb(6\Ij+*G5sbheVLrjSI5NYq0027n$/ce`=jI@i%$&f]EWCV5QNn<nQ>6+ZR/d@)%n\MoPSBes!HJWMQ`F*Kh1Cd&
%3*cU1Y\F5O([c@!eZdA)69XR[R+<Mu4GkW.P"b@LKLi],)d4duc)>\f[08;oU.'Vicq"_rT)8K?O$>#arFqSthZ&0;+4a,I_5jT4
%R^,BKpE9J.;?nCGFtfe?K[oC*E<WJ\ON]fST@0j1ABOb$HU.$gY?a6p7JnOYoDMV.d.&LPdJ[bUfCn8)Gff]8(Z1Rkl(82NH(I#j
%Bhg&Xl>ei79XZRc^f;fb8TM?j!"r+X;:/hhkn$+L!ocHhi^,uO@\UUjZ#iWrPf=,O]pdAG?Hu#\=O"Z+Q7uHk7HHd+]2@!O3jY43
%bDC=_8Z2Xf$u^S4s+uW6Jj9UR)QbGF=Kh6&Lp8Cs-l"(p[NZn8=!3(D^POgnL'eWMad84V6Z[+3=N:)LG^l6RhpM4.1B\&s;)Iap
%k+'jkKK*1>a1cgCWKJ">l%[tBFb.#<Y+a(f-m)O`O3pj.o*YV,ibiFC,h83g@.l25*/B@.Z(\IDoYC($=:-+[MLlnI=GmgrU4U6F
%'K6fl$r'u?\_ohmX_]W!(@;+*&Qj1?EcIr]LMFqY<9ahY_D7UC'<t/A"GuKp2&6<2#MA$SN@=nKr<6)H;(sjbLiI<qC/'dY-q_t6
%WJZZ>f-7(B"fJ&&2sPYA6:@g'@6)p>*RId6eV.Q%Sr1\3nU>C7+E*NEQR*]KX)f1sHqCdd2XQWt9JR:e/F&8ZFu[5@8=k#U=_n0M
%XWLZ@H[p-;$hlod<dT.GSi#_AaiGmZc3#VSX$=R/jYM(A*[Q7j_sr`p.jA4B7S8"mUgTQ-\rM@iNq%o,+8V;=CFU&$L0W)/D.6BG
%1MjH)KnKb?'U[=5aAbTKc2at=]ZT(G2!;AJU=-B`/%CnLk*09;?ce1B)nS>`W/15(e,=g3"\,S>/4=<cUs>T$R#*SLZ2[[I=;ipJ
%ic@[[;5Vu,X#F?ABTf18E-fR<ccg&'OIWXr+&lg;k%_4Y$ms$R,=mPtZ+;WN&tb]<Ue?G`YUUP*cq[-EALnm`q;$XI8@-A$]hHKP
%4\X$l(!W$Tg[`cfBW#hN'fEICI9MuF%CUC.DUOkoJ^D+VpB&ON^`_!7I@#B@T6aMD[i$"eY3aBZDII,s9or8^M0Xs7&6t@PQkpK<
%B>RnCB&B39b&e6][!P"HK&HR612C]1RJm!:be0a:C%]#JB*cOF^<MUZEf17VmE>r^m2AsYd-Po.QKB5kV?Z7&M71jeeh@,)4DJbM
%G^ok$E*F9Y=FoLHDI,Wana/4fHc>Fcb3:F-YjBI^#h@D=NY*2K0T(2[=mt)1_s"`ufp:CT:sOo=+h#oU9P!K#ZU;b6FE"_Ffd#8@
%][XERT9a,.Q#1hR-<]5Eg[g#3k&OG=1-]G(8@`isT3'NrVq`3qObp+ipq9n)=(5C\T&:r/"q$+^?8dU7M2(Hb@>(#&g<AU"$5#j8
%.(-Q&g6'p"LL(ZCeM69BLrg%a3F%lkGN-LO]du#P%nhS96l_-Gf/0@VP!Jt[MdV6XrnD"C^t4Q\4GM%p4J)8%g%ht)dbeSK=K04R
%WHjtfY+QKnVNY:qs6<df#0qSb<Bui_*7N:a"dHkePVtno/&en9$VbBQ<e5msJVTjJ3)U(,ZB:qH;?3=\,S<j<dg2[VX?PjbbB"Tp
%;H'-m+T^o7kG*4%/]V]Q$AoZGE6oS0(Tm*3\9\8FU'm3d@4eFOIZN6s)a8WmRIB$0",A]a?;\AiXq#cgk*YEiFfAEZ1c[0549J+9
%km1.R%YH=kLFiEXeu5M6T'VmWKGY70YL*l++:T\Zk*nP_^X:LJ0G#qrVS,r8EP1nhlui39k3n?miR\4os6o>0-=4]eR&nj9+Jql#
%-*^k#*+8HE?>Fic5?P>.]hap!i1Ze`J.Sqs"bW,8$'P9tqEM/Ms+=mD,'7hiIT)S?G9m[^9?j:I,P%1'\Aq\qLAQcn1"rFY=M`qK
%rVmo`J(!`Mk`9"e$OE"kTG!SYUTiu,P5Nn-gGBB2;@"IO0.W*Xep`\f6R5m!.>4N"Gk,+]9B,0#bR\lNVQSkcg!jNP2PB9fH%)4Y
%ZO1jIP?br308%G6>0k&iigI0nb)V9?<_Ys:]WL#Q&rFScQI1q%%XW(n=4Wp(J$*iO`Gcsa''glmDCj\%6CumMUH3n+HQtRtnYO\.
%&:+h:GV5lj$3X>8gd*.1-ML2BKUKB>T/%Q!6q(\#+3)6tA<l+:kcu2:=[?fU)Q:c&ajH9TNSHb*=_8N1-\/_+GAk[+QUsDR?n]>;
%2:SJ&WN,0?R[@lrfaAY+*Z<\/578#pb\TlS24G7&$RLcn9Pmg/8lAW-B#"O*E+l,tGSsnC-rbfmXN3LJ5'@A;#gKd#FCUSW$c61W
%;Ei<8<j4n$CoELG&:DU7%:<+W/u^=c];>RqN<D_5B5!16U>;*s!VS[DZSdk".SSONd=T&GmfA?.ph.'*KpVI8Ha3^<kT2>(!X1(_
%T9*I&ZV+FP4gh6:Q#1Y:?R!t@mkApSd8@(kR2/Te2?]:37Oent.,Nu<m/s0Z->C'RVhf"5G^%phLj];2AqY_:!?5n5-7oln?/="[
%?"etX53>ZlY?3j"S$;WW_rg^+!qD/%pXIfOk%4*sc*0F`#aMNRH[?o-?PKJp(3X+>:3/O.^i#nPL>5(sVpPUM+HhGrkfpeX12DZm
%CTa<"c0,0\95;b^NF&HP*+8#>p1Rf9a7qQ>+KT1jfak]=g[!V`RIG30h^mYC`/!U3k3K7"aQ8Xg^>$@KJs`J+6_d&#qdKG"QsBON
%Y^RF&?2kE##EPFp@^l"4TG3`Go54Fkc3D>*_CJYR52SopJ!D9def],&0G2*i2L-)-608eF[/ncBe%8_$74(a<Gj;Rd/9+Wm_2RKI
%ae72;UB#;L$P3^gMIh(LZamRbqTdnREM^LR<d+ti^8fQC-m"ZN<#p,niu(NBI+pqYag<.5&/#8Rnf;lb0M1^D1C+O>K_X@3mS.to
%6'-;DlDGLf/`UU'm3#H:$SZrI_B?8MFBV";YrOT30SKo?\Z"6uWo(@QLFiYm'N4gG$eK8VD'9'Cq4,><Jt@(tQ.$MsrIOh,BaaC7
%gD0hl^:\PbBE3tqK(E>Lr"Q2lao:TJ%+P0\h7@N^1:4mf5(F>1H\IGUQffEu/_KRdiYh@HdpiJJ=3lZs#\d.4@,:.s2Q%gD73U%B
%0\0:bUXb<4+@iqj1(SN^!7KR+A)3d(_&HtA^VG(kW<9q7m5NX^X9-R"Gl,(cXW^mc^Zqr;Io"h2^Kco05iQ5PKlt:<&+]GHGMXue
%<$dZ85?<:`R"@5h=1KkS-]8:/K_n2f.G4;9\/aKJ'lfA_75PDc+WFcW4Jr/AqRo+rlJH)/.dSA2O,^G>c#]Z,m)YBj"$>o`20UON
%>1=fm?9m?b\X!3C;Xm>77IR),ManLW>m@$=RZT(*#0oL.o3L.lbGnX?D'ar@dY-3dfgZLtYT7\XqYNf[>R&FC:YRHYA*n]sdT+=)
%">>&!-";@PNEPq?A#etnrDC-tYG.QM*]kJ;r4\=)f&1b$ps)FsL\gYSmlsL`hnqeU=Z%^O!uiQQbC;'*Vi0C+]qAXdqN^1maS1Hs
%l>jt@q;?4W][ou\J69+r!)t8..cI4GI\.H,phrXC;-`:UN[7?cm&r2l0mWWQ1-Or,05Y'UW?"Io-!_?Th*F3?J&-IZm\:RY>/bFF
%CWrZ[Ys)f,R@?3E?(pssjS]/@0=LHMRfVfd/5iJ1%nI,/.Z8FsGi+1K6jpW+])Pl_pE(15f.i^*(\T1<3\B1DR#n(^=M[O9I9=?P
%[($t)8dEfakt;S`"JsqT$qCrG*XkCbI5L5UN=#M7i&M'j#Df5_]@jPgr>nk*?Wo?(%:d8WP<VP;81[<A8qMiq]?oL_BD%aDUd?k0
%=$Hmqn.O-hF@4%XM3Yta+;mE=K6lBH8M&nLJ_F-j=P+B+3K&RjZ>4\u](Q^2E9tC<_0V/7.kJ!Vp<UQ!8gd*UhlTQ*VBNZ/NopdE
%?1AUOf3?Haj?i*@4C4?q@3\##!ZSIL%1%pV""r:g271)E:@nB.c>0dW!u>dc^jN=h!-aqm-S02Xc3?c8=RQ6q08u2XH3W1[adP!:
%LAA'_hOh:4RJfHZ<lHHY)_8P3o4b&4,'9%s2mNi0afn0>Ci*lSTDPjA,Veh(9+uEfI#QoD6)a8-ni8TQM;@<Am$S,3hR'BNpF?%S
%cD^UNmicP.W/FWe7g!N9i-#(P*]a8a*k\-5ritK85.p@]o/,)VTDp)B\<(NYi5^jI*9"dIUhs#Q(mg:S>^h_sB5!8_e__NPg-8\>
%*NSk'U,A_qU/"-f\OU:/-E)F)J*nA(:=:&oTCDinj%V_Mo_\5bSGb^&,DNP^'F$7T]T5plch#;i7q7EA4Qf/-RFZ18L7U367`2(&
%>`t80ruMUmjE^%N:"Pb,1:9^p]/;\u%t1C*r8Jdo2T[ke+7]?<qaGtJnb_?/quW+jQ!f;?kW=*r'0^77&>"/<pF+u&+]CU\Pf0:#
%^4p//+Tqi5I=?.nA*=7'IrkE^KlqE<2;1cL:SpI7dCkus&=A,agC!oHpGZO!#``6$s$WL2N\&Q)ILmEMUNiL+'CR)mGJ2`#_)286
%d$grsG=bdGC7cSI,bE=P!R+2JrqXc@c*BV<KV>\u)PEV'#p@\*6tUrC3E,7)*)jEijd>fbX8Dn+k&/JMjDaF0Ck`5P<n6e)3j6!:
%fmN32;C;(l1)@Vi=r*\O"SSYcnL'CE-Un%)I)Q@p0+,A'2FE/J>]'Lf45A^VVtU*7HO]C5fdh20o=:[kb8h[0;fE97\U&W>'qXaG
%kMYgYG$Rn,01o5@bFFVE]!Pf4c(L2ZlG;<cpK&Fm[K"60V<^G8H2kFbmuL-@f/Ms3:sj\]"-Ec(fpp2+<MUJJFgB$q!2+]&Bs?4Q
%F<U]f^t.r2Z[7<2qV;@&NQGSW7jB@f4WKO`8dXS9rlKNRBsQ@SI`hNmms"U'ddN5qE@Y,gAT.ir@6u*0+XB*%6CQt/Hbo?)gb:!O
%=:"\7huJ;#R#\HWNI,=BhN\2N8#=4P_7\BWb.I0\K!)bo-+piZ`Mk*/2[9_Tbg8dVo'3$UJR(k4F&?VeHjuG`,2$L1Q;q2tifWVC
%3*[\i>f<ilf[lce%3u9cMZMndfZ_dUi#`%mc5p7L5[P8p/!EB[)ogAmHYoO3[Aok6TD+O4`-ML;\a%u6pBR\`1r-L6'Kic^R]8BE
%Bb"!?=Pnfc(uJ]b2SCAq9*6Yq$=#hKW:bTllhf.7s+803r?C$o\f.c,C#lR,Eth+I3F,2];qli:"dQ,2I:BM0Uk'Zq)4.,9)!o$]
%(tER&WsoBgSqmV\2q4p`JXb,Y+W?*l]fcq@3TIn"CS/54I\MtFBc,>$Imh3D$<;4R__M^hJRO/9<:jdIc=G16Wo8ar(gc)HV.2C-
%:']7Sp"`#.Ja.TtILiWe7r]jVN.i"U+I&_UbHTnCrB/+MW@id').5Uo6,-m7re^T+&8Y;EJ8krSD.t0m=Gupo(#$*+`cdAc'OF?#
%?C^Ok3NWMEIq9])1Xa#(0X;Ejc?G(P[-CYUZU%5c\SF^h^,%#C`j'[6mL*I+-r'uYg(f(Ur?*[61,>!GPcZ2;L7r$PSP=FPdF)E[
%RkH7r-EA]P,4'eb^)pUQP`JAN2CCACU<a.?gH_[18qf8TU(r_I<eoeqlOr.hYuMj*QY)-W<Y7u^>1IK)d'#lGYi[3_m`:6ho3NXK
%RBZF/g7!@k2fLh!M)/hbW6(<dV;Tb"CLEq"P#nTjLA&WPnrftB)aFH2NG?$c3kFi\68hc:3Wm,Mf_a,IrdrURD)^^,FJH?)HN<R=
%1%__,]'0=Do0/3QR^naed(AMEQKDip?P)c4E/Ab[OFu_MI]b)..Ajp#+dRk&kN_re%A#B5=W1\?C`/\]0B9muO_YM2F\-ah<t5C0
%8(j4*C`k4UOfS!GT1A>Hlb5SY_QULc2LguC,F^1p`;\p3f`Y0oR09EUaGg91P9^o,dk;Nh0^6enrL.h`<omdYV.f\aW$3?IfhaEr
%1jl'N.HP`l!RB)WC*V^Nf<r]Uiapqt3l"XQQKCI<*\)1$-?uLHCV\VNHE[)+f3LD#6<QH#"khj92[e,pRM/n,,mJir%)Qpk`mnHM
%6`d8P0T*o*]XY+sOL)8Z,+Lf2W.\V0'aa#[3(^T4@F/?8AH=Ru7;b<e\5B0+@V7?9=%>6edNoR`/Np8?dZ0+,M7BLA=Kldf@NU@9
%<uiF@?hOB^rI6mBD&e$Zp4=@M4SmL6`I%'i>HYD?QN8]KWEV7V36BDd*W1Zqg[dkSK;.O$H!QZDdP5r(dX:@l_&IJRUK8pE-iS8f
%?u`*M/$he1i*N@V6A7G!bWkXj5FcD!3):0#C=-+=K$--j_uK#i>ZtZ2Xt)UNkWdRmLFM6](tr'rK>8OQDOU3oD.n-_QE\cOp\EC#
%=&tm32H?2ZG);]RGodRp\b94$;&(g+8qW*i]USb?LDkh;49-uJOcMkT5pCg4!0Z9oIh'Dq:QCq?3s9S5=GJf/L-!nK(n\>-BQPpn
%#c;>O]sKD4.Nn[rjR2$En=#R*1GU_]V(02'dMu0d$r\K`6)9A$,oS-X.F!l,!T)iJQZTgB[It:j(/!.%khR>W`mk2f(L8Zh@0:8_
%I;>EqP0lcZXB]+K+&skn;<lJLY;=62flco+8/<,]/:',nMLk`MR`=o6(j]0Rbuo(a<<WfN\fHll2T7JbQd2_Nc!SFrcXcjmc1VcH
%e=jFW^JO)D(u7`g+<VQYN3&jD(%12gHQ#Ub'k>nMMO[C<j3A\BB*_VmYZ,]5'#'`SJ>OYcHl.J@FnS^C7LDDD'O.4*3)j[5*Bk[L
%9V60od#TRMH$d9?#cVXI0XM)ZBee'k8B1A@(&)qdW>Ya?B7/2OjSVugl'(J+TjV@ESPNPkn#DBe!$=7!!\qi)m^;697ElSkmZ0-M
%&WNh/`"`%XQ"eYhimC%%c:3O3\VXj[+\s4.#]pBmTk_<KX,nN>Yl8phU0<UN`hNsmY$t<]A=WasQ?IX!P!^!/3UJ7^k%#Ba@Yg;C
%V#TU0V=A-\>]V*)2d*L<7M/qQ>-g_R*=1gUBj<^2'>\Ijljb(%][K^Q%7Ufe0pOTL\k5op9d8^FiUTJ3[F`tQI'J?4>k;Jq[;RVU
%)/X;9Hf]OfKg)'/*fl/g@#9u%E^A&3/oWChP/?AK?(uTWg<83_I+d\rN"BETDs'':2">r\@thD8podC,g0+`QV>fKPVIS`_a^]I"
%h!n\9*c>liH2eRB*VVqm#_1`9Y3O89X8kn<@qT<YK=,]AOl?kG"u/]C&=t2NBDq4=d.aAa)5U$/_?\hmNql*%&54BqromV7[a45J
%Sf]6:Nt>R!V00c?T/M[H\`70oiaA*1afkq6@J0.kT6L$JNtgIe`4R_Ffj\HPXCa-AUadf9'-;b6;[sU$9ZbY+e)I3i2G#kA"8;#A
%Jji[H<(*mPU&deu'aB!X;IRZK\X9`7ad7hd-;h*.AWeW;6C1GFoL$8DMT7JEdDhc:Ai&4ePYR2);V=T.l,b`PetC@lnT?DiqDEX\
%Wf\nRWstY%8K^nhD'4NNOB6\oXHGVhkP10?NF*`!eR5Y+V%V/6PbGW@WcQ8jcP?GBmNYtrqdU&"Th#8_BP,n]8k]o/Ti7Z>C_tIR
%-o*S+[Ul=O5[ZM?gEH:qIp81YUkh;_))taZ-r8!pJ7^(_J5@dHFG*FL_h;=7$E8mr8<hNAY:<k941GWh(#EV7=`!;$C/A2,S?8M'
%"k>_WL9S*hos$FIR!FaUjO'.Q5,hm)k3f&b:n,FK]X6>^Lf6Y)<Y!YY+_RMsGdEI'\%DNq63o?G.oDQ=4RD-7`W,),kmNB.:^W4W
%nA(]gHlr2Zo>M7;e&QVC@(k2>$p8/p!56XJDD)BbV%j]>i.OH2$Q=#A+2OTV`>fWB.h56"/grCcrP+H$V[78mTWG@hX"-Fa;PK5[
%dW6!NC_7VXeRO7$"AXQ\#":ggX#Re--7X;Sa7Y9cR-$K08^T8GF$80KrGc.Pj\.-<Xoel@48"jcl;+CS2M$hm1BMUua^@PHgepq_
%C.FA;<4/UC@G9,29T2SCA&Cp9K)1`AbAnmYmFETsm!`b)4XtD*b4*c96drIFG8@t#e.@=L)?F:a+uu_,:0re8PHK-mGugZXYHl(q
%YKL<_bT>5\@JW]kUp@V!%BElMRT,`p'o\WY&p^f&T=91>dsb8A@?T#&r.S1"3;nOV&Y0V>QH,*29m2`jJ%?&Li*@fZH9$A-LW[Ae
%dq<p:PKAN&:?235pcHG5b@u4b^RF(TbA2@`!kPTILY"6Y)DdQ*D0TaC>rg`\FbKt:+q[$:L@2=9SXdkEiP4"k6U!YgG\qf8oP(oI
%<>$o_)\1aKko;1Db:.[ufd6[`4=&5dBep_NA;nT5:W%TO#eQO63;ePRYG8E4@lP$\+K3GMgOj`m)P\>$m6[sUW']TpVHLL9%d'='
%5+IE6R$Z%!*aZe&Ng:uu]\J;W[k7)UIRH7_[C6rB,#'^lCHXe:*_,TA*3S@KOK>khl:]D]3Lu"n(4%i"2NI[Z5(DGWr\$o9-S`Dp
%6TK>WF=7c1EZ2Z!*_!Y8[FtQ7/k,'h0dnN=537*l@bO%RhJob0VZLc:Fm"3u("L4'cEsYe]s;e/QXB8Sj(A5hE\.&tCpl5aMcA)u
%UkDLpiXGori]tDjkW6\+\=JP5r[aIe4hSs`Y,?Wo.4d=smR;o]M9b5T0-3GPjAuj&UW9MlbjAk5Wia?A*'VA0e!>;@SW"9FW^XSL
%bNL!?4Mr"_E+?[q],<_siH1B\\X)"ni]]MbQEM*L]F5><@57E9F>i;*4M6Z<la!0GbM@th=!59>DXKFKo6q4"*kKl*geH"H0UNGO
%WY)j,"5$;dA7o=8pMjIZeY5/5rJiqs[8^j<$tTpgRMbg.0h[1R#*-\gfKiAg4su6\[$R#ERS)H0Vm%Mc2aZEZi@D_6+pW:&?Y+?)
%?2i[@^Hhfj;VB#H4"<L$,ZLCM"U"5gGb<<oS$rX&@[++3N_Ao.c2pNF4U`3SDi.]UoU9W$/dO-EQ8-KKok)1Uk>9#4Q"oM;inG'>
%+[cU)Dl+c7G7R.X7,Xf5>U1Hoj:*VQ&b8ScX-L0"I7)-Jjt^SMTX+Yk?5fOH',E#'i8%e9VEk@G5>5_m`V<2FV[.l'KbMm<TCuW<
%O:;r@S,u-WS'#O-R*Yk8k]J.Z%-d,$Z?\.SfEFH&hWN]Ns/K<j`,,SF74=hZX<ts+9m+:hMaYdQ%Nh:To0uST0c_,+E6%#cANq']
%)>G>sd[XjbGn/N#FQWLPFH<oPVMI:$b:@cT6"W`d;\h\MLXud;le^j8?#GAMJ2i=QR28`lOS(F12b:$82Y9P1)H'G\ldT,B4X_dS
%M`<i4I=+*%]1;Q@F9kR\3\F.Lb7Gd]g<LBf'.T!tO!GjB4;\=a[VD*,$G(Ke%-ksE.4KpLUoPAJ&Le?(q('NuL#H1um=WJgJs8i!
%Y^>[m]2_=5[\YD@Aa5*&*!98&boi<!?'D4-R,V3b'7cA_@2'3eLe4ki)@(lhJdhn<6t^7l71*-m4O/ju5]AR6?XQUq)PNGY#&RJ!
%?XGb;/@\FhMW`(Zc9?b(2_YMC3jNM3+Lh^_:G\HqfsHq;VVr47<.p?%/#"G-VL^=qLYa^TKXW29J-@jamA$TlRfrj7oj!fW>#,bf
%BDb??X$!WH8_?!*kiO*UH^nuk0N/ss`0#X/NdafsYk%uKk6_MhbtT\)$()+V(RiUBb;1q2">:P3!>L%(h\N7?C4MTXeP`(pDqa*C
%>JnEN^S_P"/p$=%RFBRG-CG.M*4TOeUEH;_/`Dt?[K>M*T&NRD,[QLJkX[d+%[GsoW+W74UI^-.'feL_Tf.EH5"\mI?qnq!@R]W[
%Ws8<AXq!0p[8!*H4kd'[_/u$Jnf^YPP:8Xba!aIo>HL#4C:3FGZl1DHW1l^onlYQfn/-o9dINumR7*mLO[FsgiORqJ$laXa?t8V!
%`C'p;SQaDbru?kg@<N,:PG_<=K:!-nLH$eiQAA<N!2XY%3T)/Xf`29/RkrA^Dp2B;fGXN5ZXU<N!gTGj3;`;eN3Z/fV@gmP6A/nH
%dW$I;H>:_0\<"%0:l;qa:!3=-+a`'K2`$o(lY:Rqh'+DQ`"uB$a/rkEWm26^YmN$ooQ]\5:^o%Pa(a`GW[spc[a4S,QdK<D8[A64
%k^ala.3D#TC=`fVQdK=(.u\jr)*Oj7e]ci=&*-Db=asSfo5#tYa5ck+,@=Ji>5Mn'?;C)KH7W)SbbrjXLZ#C^j<?rRnZ[<"(okSm
%UF/H`l_i-gU(VroojB^fhYsa*p_;3]&$$L8$<c7h4m"G[AN\2.W@"0:O..!qqq#Si_=].;.mGSO;\NQIH;@)N0M!jYMY4e-?WOM/
%I=`?NL5?+G>?W+A3LaQWFIUMhP.8#tdbo7EURB!AO>,"r8S)k167P_R^U&T`;t]Re-/;/:&u(Bq'&_:Q_B[=,pgFJm'28$PKLh#e
%fdN;T&3Eb=#?d@s8J"@kd*iW52"XJN+`(6fDd\*(#e*0.G&TXU=$%gI>%R'D%Y?a#oe_:&#3GT&d-++#@0\Yl$2*=6KS\k%Ar:.*
%OaR?&Zg?U4'[$pUdI-B,2:1!#dH$>oaKBCb%l+4U6CpYo[5:tG&tYt9,OU:%_006Od1\m@EUAdI`pJ%anbs/sHYWOQLL(&%N1#j*
%;%;X/$"S"Ci?lgW(5:\^fW'2I&;eZ^!$S$EG$5_gjO<$+^Colc$HqXBYpO_VQ:$kq$bo?32hZ>$DCcFu-;D^knq!$+3&FV5kQpSW
%a=CC2Q,&%gb6n.c22b+4&!^aiH`3sW8*SUR>E:0=FdS^hO.JJI.B_hQpaL57=K$p%7fQa$!8tpH`0W/-D+,BjC/ZJoTs,L-3O.e3
%k$4b&?2)BQk)0QHTjh+$@-C;b$*3`Y-o'A1FthmhCHi"2/t8+Yar&)+_WIgEO,=p&(`MuMV#lCP.%^G7Q.JVNoJ-nbbX?!@%g]f+
%9kYbbRTt@o2Ja'AS)Gs8N>Mec?pDFB/WOg=0@;tZ09^@pp^Q(VK/K>3kclcc*8c+"!g-sA/@R'i-3#1G,F'iIY]u!McI12=%JtDN
%I\7$:DF=LD%h&r2<t9dUa2C&Arl%u6Hm__6;uNbB,7s-nM&ZaJq??r8!RMVKqf4H&%H;>!<jbQ[i.:#^7<&X@>0cbIef!1Cc-XGF
%KjA%bK;8pUd:8%iU*Lu6g(09.:pJS2Z>)/?BHN+t];7ft$I&:&T^6SSmc#dOcVCfNE%7T(:42.\_u'F]5OUMHkBT`Djq=UH9A)g7
%P:1cT?'at"dk[#bHF56r&iIKUEgG-/7R10bPVhsKn1BH"gC(2#p;aDm8_mp+<4YDB]p(%$<J9U70go##;J;s8#H\jnq\5:-AS*IA
%b/qdb_J:k>WT(ZN.>KWWIr95maCZ?G&D#>sotW1WXaD]a(q:1HrE^A(rE=K`3_`^&2aV5T=ePIrMeM1eU<=fZ=OcfL@V9p!R+Qem
%MErt^:qj1"L_msK8`E"*Ij$90o3g_"n+ZYsT-)tW=4*5gDjXAfXfi2O;2Nu_HA0j--sqn@2.Eh@OA]92)jZ_@:72IBl$qMB7In.Z
%s1VhQ.bNkuq,o.uLdB9>UnWpBi%DMLV9<@^hQ`d\p::]cX,]X$(8]/!\OaEMrR)rbe-F5.dpOW0-eWU(`p0<49aK`H"V)s>s5R+.
%imb<$W5(2K!Y:L)qe3iQT?%]Y\i<6dbu_eHS.oLU-IC32LE%HH!aPJjZhQ&`e<:g24S0AO5]uB'kDCRGn1<)&pjc2!/9.kp90N8N
%oS-7UfUlZq!Qr_kK%otcj'=k;DZ'sAHt\1Agn@_I[NHV5)5V`Z&?oC6ZFn^2@F/k+nn.Z*6'J"_lpgqa)RE+B/+b5bSbE/I@pm.i
%T+`XTT=1XqZ0,'PDW@&eCrgf^-8Y?qQF^8)&=-oc:c)@T/NHnjpQFIWLYI14h=IOSS73sZgT%4j"!L],D&qto_9/J@oLN-F=P=!t
%Y6'qA2A.^XD7P`'UG)VBiNi<bpo)RWg'"R^,&06+crk7=>&UP>_10#0D;E$`)h$Sur"j0B@BL&g9FPDl7C]:n\uD%9UWCSkVeN/e
%[Z@@a6T:TSCLbo2k9t_>+u=uFTQf^X\&qa5H-:e<XHQ4=,I!!DXFY$3b-;ne,C`e3Q3O$!JYoM$r&c/1rGW_%gRB.`AJ&ab6<br2
%1m>K9MPCQH&\+r[#4@%]'('Tq5LTgTOs%t0HC*q`C5Us,@:tH`>STuY9IoGF;oBg9A>3DYG^>Fd@&uB0s&j-(*44jZV(17RiMcU2
%,k$h%I_>O?m6,l_4-r:@+2\k^rQ<Su>cB6bPti<@?fKPAVHtqkeVCEiG`/SM[flMOK8diKk'q>Mh=^ta7D()'g"o'iQ7()^(/dHp
%+j=G&l?\?1GKI\)A/d7YbDPR.ipSP<2H<(OW(P+qE>*lo&mV(On+M&(%&TE6]KqV_4Us[_%NJN2%+bag[3+dm'qfG(,VL09:XR\f
%^#NKLeR2nL#RoNno\(at#`KO]a.\M_K<TpO6d!PNf:cYpEGC`NC`4jKBEHNR@-BQ5,F*j9-K/\\no2u'?F<tTBhMkfO3n#4fJiR&
%]R:Eb=8iOV0m&?-EuA1Xh/(%OFDRWR7:Y$:ooN:64cX?>>.GsfCU1VM&X[n5q:JUcl_7EDZ%fcsGM^34@]tD4SFjMY)qXf?9."-p
%$&/,?r4K_*q/Fo30q@62M2]'2?bM8CWT(`eQ'Gtk+VcI_)(Lalb`)CTTNKR3_GL6,72^gL<Z!'aloq1.<.kNtJg8h<G&nPIgPbrl
%k3kp992\#1B#ZPrf*N.*?l27Z1F?Y[>Bi^eY5h+Do!Ffs(?6kG,d_0S)\Sr?f`a3"j[:i"P!j('Ms27>b+^ronh`t7icSj.(WOY"
%D)PmWK(tAK$`TLS6'5XE/6pY+Xq3Ul(FpYRi.Q$19,k/C`sm/\;+"eL<?Uf9YX2[=3$h-;^eDJ_7=dQ0e-W]17_;??d=;9*)Fj3i
%,Uqr-b!8Rq8Rj;-7p_u#0_D>0.pfE7[A"QDfH.gPo3ne-<<*hI/*B"pr(sgM1sN6jW.tKs2-8%5YL6EHCgFtL]a3/f#-s&eiF>q_
%=CFTM(i*C#aBXUWg^!e*)\(XJhqF"tFoA.C)siNf/A[/tTC9[0XG_o5nrUBC;DhD`-ZO"RoO"W.1p2?R)f7FN\uOY'G%,$3,C;c\
%:[j0B1P[@7&\V?YQl4=_hE)&-R.fYChG6hOFumS4"9p._&ps_3Y(+#Dpc^t+BWT%.m6a5k1ZN$ip,4sA&4K.eGV$!7A)0?P^nM3f
%pRJ+lD/mu`J5c%[1Z58^)3]254E"aI>^%/cK1&Sr:'X3U(JVL/iZE_$<FAQKmQdOe<a)k>('dh1oD;[6OjKQuOB1R8POQ5k'6E.P
%cI67`FcnGArIEqA>usMtmVVB()\jh&>sG.UbOm8PF5-:p5P11Wi-j>jo'd2dqls1frUA#X])$/+K^GL.\EnuMY1d;Ji6r`afkipI
%qIjT4%pW;:Bq(/t+CE@5Zsh.*9LH&.#=8+B(162+'b0a)ANkX2;ghr`RmF_KU=s<FXu127/G%gXI!Jg)Wj5PXH!(Y)IA@%[X9XBC
%:.4$hHHa!fouI?P!dg45`M12qUQfMD:uh@5km#GXRuj(MX@PfdRkT`=`7-fN5:m^%IK=VS#IKok\^lu!js)T$4ga=:q3WO<R1D#e
%[*sEHlTFP>:enF#Vu7`ior!?f&fFpfbC2-H9cId!%rDN$J^](@24"a-YjBE;7*C%Xq9Vk=EZVDq5j%&a+S,nU"%'?F%lhrl+S.HD
%"%#a]Pnd!q63J#.YL>6Ld`'D-"^*A!JfHFc2?<NX.,(8()<Q#9BG6t]L>jj1q'EZ?27"OUX(jp?:+t<l:"D-*jP$OD<Ir"5iW,<f
%&XV"P@L39):pG@Z0lSR!JZ,e?q<G&ZHgOSAH`qaFBRVY/_dS7k<``?H!PFg+6C7MP,lN9$&Ppn]%b"2h`]U8g@'4jXO<$oETk`Kt
%_U#X>*')4XN_1e1%iL>/T,jJAB>cqD&sqM[)faFDH5*W]pcdUN&leu$YE!+&'2M6p7YOi0d@<pf9>On%j1/q2"^Q_&]:I72O=Vc3
%1/:Q!#VTEOqDomt1ss*nOCVd^At]8*0u88NSjQRZcK.P>h[i?$BeGt;Li=`.4BP_7;H3P',sGW4&m)]`"IdKtdAYX&Wd<8s$,YK(
%1qB:+d*NFgY6[VsqL+P"X)>01P@fIPjB2j'50<:&C&Dr,])=KDTPi")QOFm\rB-mF#'g_Xb(X_k1Xoo1-KssuDP"?3q"[grq?5Vh
%GaaZ:6U2R]i7aPiO@kCBmUOd/:)_AnYDY\M)ai$>=Jorf9tcB4$B]93EF+kQ):Hp4JakD4d0]*4$\6fs)-t]G&e!`2hRd;>-`q_R
%q-bDuD3hXcPir\k+,JI"^K-X[64GZ:_[]scmc("j&F=ddO>8d$VgChf#UF[F02(Ti\tD9i@ufju7TK!c%!4l)k5gRMi"]LSj9%'u
%lJOcrY8:K@nT/!R^-0=0$K9*Q#`M#lBFeDjQGS*5J#p]%GMd`Ca+c]_e6ZGLP[Gcjpu$Poge`)B&<0ud@Y-G@Sf*tdTa<aTi*R9b
%m'>gQk520q*)TOjej1&JMRf9p\T"$%8>ZR1(1Hm$DKuOq;1"37P;85_O/`t\k(fWSMiqBMAL1.edo]b)/Y2#m0_kZMe'=s#EmNj&
%Tq?-b]F#Q-_YsaLQ^^@@;oqW()Ab8ea[f6+SOMg!q=Oqka(mt.rK<aE;enKf2QGDO8MpA[GQYp),6"O*9kHqh4r"UYI:&^`"<YWD
%!Eot`fgCsK0!mqC0m%bIe>KZ]>?o=^IXPmV!\_Z#g9]8gHSNd1WMq!ZnT'0n^$0tG8ijsY(:%YO8kaDBX8^@D=C9EJ3PKM"]ULME
%]\Q,NG?4V"!"s.bQiS9;r44GFe@GK*6GSID76L`ETC"LJ#5cp7>-$/:MrY#m2t@GQ,j]b3F3TYUnRE2\J(?T4N+?OKl+)':rjfZo
%p%[*d:H,c_]RMD<TbE#`92:0\Ltk<61*HW:6u5.,;eLh><0!j(_4lR`PX6qZ!l^1@bePg$C1?V(&gTHmj9??HUFm^HWX/0LDnAc=
%*C+#lJQks"OIA@(e3NGX8hCWc%g,C*7+4(?\[r1r<lV.FEf"2S7"'Bl`o^iH*@$K9=QVAXQk)VhNCGQi.1[KcqI=QXb5rG"9.;SV
%EGL^&o$+L+lQOhq='0.T':kc]Z-oaD6`3i=Q,k.*J45&MlFDqdZAkh5#qO<,WeXuT%0.UBY29$2RsNr+^a64KUg^FJ.sONRLI&p5
%0r<9eqJ\3G+Hd#C?l72'>NeB-+f*^<hjD#04`GU<O'Ii.;51%?\Zqb>P,gFbTFk=AGl[gNd07>ACD68)a]!grjb^ktoaj+gLnLn:
%fc`H[Mau0^'kAq[gk3^J<bb-t.iQe\@-K2FB96.K]kXf!]dC244GGIEj@$Wj+S547&\q8`D!./TDp@[C6/*Xe#JH<;?BYf!L,S^\
%h`^\rYIonA#H1WUSM<<bI#]NRD^NknJ?_:8;LLfV&8<2kjJ9meZjA-KMCHBf,VC#n\QB[k9t>]TKt=9m!p?ES'6MgBIZ=2&Qu?\2
%nbtT%r[Uk,::'K',cO-HMIoWAE2>MRDiJ*d$2<5;5Il4G_bc;&'.\KPZd7Arn9GhGd5d7fijiVQj$0DiO@3!.F,;X+0ju-4_oT]E
%`q6</]6C8bED2Nq=V'Oi`BRj%MG/bN>?/G</VHp-noY-0k"JuV%)8I8@HT,I#.nKeW)NDqQ'46rpN0.<'PLmN*m1`;p'S^f9OMcX
%86GiHGdX*h/gi/g8IM`&i071i@lWBIAXo.c9/(o1_num@?T^^]:&3_T$_Y"8$Q/RGpLV`I)^W/-@4?q%@XP`P@Ob-#)21L/BnWIj
%9OUQs-_Z5G)FjJt<CS-W-3SR%00jgGVB]2tLF4VbqfQUQF[O7`h^04@J25_6K@?CV"'E8?qqks3Y)J+[%jRc[,.W``L'4Kc!*LU7
%bmN"Rb7I9Be0qgk#q!5GB&_ee5IbmON4G')@@pM?dD,ah0i%"oN/H]A[\]2#[!$]q,*%Cc67U+"`[RYQ_'mOCbu&`BT9/#U\/Y*A
%fA.japi,DZDe%RSQV9.N35jF3Jp?>DY"[P_WE.:2TSb`[#TnNYb='cef2+?4.`WO"<RQog]1LQ&0$R0)OFhiJd.(fRB:50]l?`@a
%85S>5QjpV8MLg^7f85?>.V:HH:bT2)YS,/kV.Tc7pMCT&%ABH$lp_E$2YfR$r"'LJ,a0X<rL`lt8F"@10bF43>6>CFcY,s#e+,7D
%9MT?4Ukm$+7N-Et?:Hq:h6!Q`Z>iWPC%-RrGgG,7])0>CmI*5QXXOc^cu2nWU*"El>37(c?6)^3Gm<5Xg:`=D;g#'u7`.'O;P"5_
%e00KpV\G`Ihog"PL(5@f<HfH#H.!=H5U.l7DjD6NG73=C[iiXYeZnj4L$GUB:fiKb$Jml@64Dlc!GNPE1>p6[5n*f\UDfL0ks3L\
%7oV0bW0-8<ikefmPRnm48k/HcedXg3GQuN)K@+_]`YN4RXNV;7\>LFq(5mF#C67@Q$J=RdZBEq[lU@l2cUB953X,YI;s6g4mIEMV
%5>[7s)T-RH"&Qq+KBXK0VXSMAalVPE8>.eK'rbTAF%(P;2m2L7l9m2B/g]o9N-c:d=5u!FP(6"T#Z<nOA'td'fLCUkCQjj$&b/oR
%%P"X,<,tt$pWfEZgW6j#9WLp3N!KFa#^[j-C7F79dZRTBT3-[$&$OHEr#EJ5AVN^Xbmm,%QjKAtFFia9k/MnDkWjZsC[Q>TQms!f
%-nId&JaKC8S_6Le.@2I7VVF`M/-sb$+hEI@&=cp'*ISC^T*&%,:W:tpgL#"@C!9uQ_L@i`E,qq:74J$Ds.m<1@oS$sV%.[9L\T9]
%"L&e=S@YX&E[CcB?gLC\#7,jJIo@h%:PF!rW'dhfY&)e[dfXhKN*Hi"inh'JdXYQn7FimS$C@gq-&]W%6a:[SdYa>60bW1DrAJ-o
%<aS:=.%&aGg(bgloh\,0J9iom9F*FHrX_+]*cKl-RC*;FrH]R3HR$$55l`+JMd*WRqCLI]RPaM2+hQ-'(I`Hno2CQ="W(9QS;k\3
%_$KuN60;`XY#EL?9WE0-3$-#3kgf8tVgTg=90U)!O)uUpJ$k>>(^5hQI?Z!SHZ(!1;_$T5qma?2Gf+"5N)R-3g.,bN7I[kT,N4?0
%"V1E#=<6Rj>kW0jenlLq*Ei)56j0j#Ymf\u4Y1+DEFk$]dmQMl;^^jSRRdXkSbcC17$;.@E/<7:&e=^q/pWl+eK!<jE\B!XaaNnG
%1rtTnCSPkR3/%a:.EG<^7t*$LUIVJ_Z&;XQ*urE.&8@q:'\H!a]P=sj"P;PaApCD`HB9p&k&4O+)1L:"j2dTj_mFL0fLo"%[kD=I
%\ToX-G#!1OoO@"A-hb\LQCZL?7"'":^ka/5ZL$AP6/0\a<ARRLA`qE78,d_e\S7KB46KUCIW+E!XYqoh@HZ8[<tsB^.8U@1>fj9m
%]BHQf*"TESd8ZQXDBA"cG&I/qe':\FE>lFa</.*q9.E"#\XQH+%$k=e/ndmT[.`?o4`@IUI:rNiJ,A!XI.oT"OT4G:5Q0mi^Amf6
%?QP8DiOaU9reGFlr6+j7ro:IpIf#TVrqQGAI=(kjVk8G;e+\@gp7Krd^&@HD[m0lVk?ks:rUJcorbkj4U\+lLIJ<Vgr;5CNk'mAqB/)[~>
%AI9_PrivateDataEnd
