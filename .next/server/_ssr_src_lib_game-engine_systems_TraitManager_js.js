"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_ssr_src_lib_game-engine_systems_TraitManager_js";
exports.ids = ["_ssr_src_lib_game-engine_systems_TraitManager_js"];
exports.modules = {

/***/ "(ssr)/./src/lib/game-engine/systems/TraitManager.js":
/*!*****************************************************!*\
  !*** ./src/lib/game-engine/systems/TraitManager.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Trait: () => (/* binding */ Trait),\n/* harmony export */   TraitManager: () => (/* binding */ TraitManager)\n/* harmony export */ });\nclass TraitManager {\n    constructor(){\n        this.traits = new Map();\n        this.configManager = null;\n        this.uiManager = null;\n    }\n    /**\r\n     * Set the configuration manager reference\r\n     * @param {ConfigManager} configManager - The configuration manager instance\r\n     */ setConfigManager(configManager) {\n        this.configManager = configManager;\n    }\n    /**\r\n     * Set the UI manager reference\r\n     * @param {UIManager} uiManager - The UI manager instance\r\n     */ setUIManager(uiManager) {\n        this.uiManager = uiManager;\n    }\n    loadFromConfig(traitsConfig) {\n        try {\n            console.log('Loading traits...');\n            this.traits.clear();\n            if (traitsConfig && traitsConfig.traits) {\n                for (const [traitName, traitData] of Object.entries(traitsConfig.traits)){\n                    // Create trait with default values if level/experience not specified\n                    const level = traitData.hasOwnProperty('level') ? traitData.level : null;\n                    const experience = traitData.hasOwnProperty('experience') ? traitData.experience : null;\n                    const trait = new Trait(traitName, level, experience, traitData.description || '', traitData.icon || '', this.configManager);\n                    this.traits.set(traitName, trait);\n                }\n            }\n            console.log(`Loaded ${this.traits.size} traits`);\n        } catch (error) {\n            console.error('Error loading traits:', error);\n        }\n    }\n    getTrait(traitName) {\n        return this.traits.get(traitName);\n    }\n    getAllTraits() {\n        return Array.from(this.traits.values());\n    }\n    addTraitXp(traitName, xpAmount) {\n        const trait = this.traits.get(traitName);\n        if (trait) {\n            const fromLevel = trait.level;\n            const levelUps = trait.addXp(xpAmount);\n            if (levelUps > 0 && this.uiManager && this.configManager) {\n                const message = this.configManager.getMessage('levelUp', {\n                    skillName: traitName,\n                    level: trait.level\n                });\n                this.uiManager.addNarrationMessage(message);\n            }\n            return levelUps;\n        }\n        return 0;\n    }\n}\n// Trait class for managing individual traits\nclass Trait {\n    constructor(name, level = null, xp = null, description = '', icon = '', configManager = null){\n        this.name = name;\n        this.level = level !== null ? level : 1;\n        this.xp = xp !== null ? xp : 0;\n        this.description = description;\n        this.icon = icon;\n        this.configManager = configManager;\n        this.xpToNext = this.getXpToNextLevel(this.level);\n    }\n    getXpToNextLevel(level) {\n        const multiplier = this.configManager ? this.configManager.getConstant('xpMultiplier', 100) : 100;\n        return level * multiplier;\n    }\n    addXp(amount) {\n        this.xp += amount;\n        let levelUps = 0;\n        while(this.xp >= this.xpToNext){\n            this.level++;\n            this.xp -= this.xpToNext;\n            this.xpToNext = this.getXpToNextLevel(this.level);\n            levelUps++;\n        }\n        return levelUps;\n    }\n    getProgress() {\n        const progressMax = this.configManager ? this.configManager.getConstant('progressMax', 100) : 100;\n        return this.xp / this.xpToNext * progressMax;\n    }\n}\nif (false) {}\n// ES Module exports\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/game-engine/systems/TraitManager.js\n");

/***/ })

};
;